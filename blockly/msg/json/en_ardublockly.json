{
	"@metadata": {
		"author": "carlosperate",
		"lastupdated": "2019-01-16 19:45:18.905063",
		"locale": "en",
		"messagedocumentation" : "qqq_ardublockly"
	},
	"ARD_TYPE_CHAR": "Character",
	"ARD_TYPE_TEXT": "Text",
	"ARD_TYPE_BOOL": "Boolean",
	"ARD_TYPE_SHORT": "Short Number",
	"ARD_TYPE_NUMBER": "Number",
	"ARD_TYPE_LONG": "Large Number",
	"ARD_TYPE_DECIMAL": "Decimal",
	"ARD_TYPE_ARRAY": "Array",
	"ARD_TYPE_NULL": "Null",
	"ARD_TYPE_UNDEF": "Undefined",
	"ARD_TYPE_CHILDBLOCKMISSING": "ChildBlockMissing",
	"ARD_HIGH": "HIGH",
	"ARD_LOW": "LOW",
	"ARD_ANALOGREAD": "read analog pin#",
	"ARD_ANALOGREAD_TIP": "Return value between 0 and 1024",
	"ARD_ANALOGWRITE": "set analog pin#",
	"ARD_ANALOGWRITE_TIP": "Write analog value between 0 and 255 to a specific PWM Port",
	"ARD_HIGHLOW_TIP": "Set a pin state logic High or Low.",
	"ARD_DIGITALREAD": "read digital pin#",
	"ARD_DIGITALREAD_TIP": "Read digital value on a pin: HIGH or LOW",
	"ARD_DIGITALWRITE": "set digitial pin#",
	"ARD_WRITE_TO": "to",
	"ARD_DIGITALWRITE_TIP": "Write digital value HIGH or LOW to a specific Port",
	"ARD_BUILTIN_LED": "set built-in LED",
	"ARD_BUILTIN_LED_TIP": "Light on or off for the built-in LED of the Arduino",
	"ARD_DEFINE": "Define",
	"ARD_TONE_PIN": "Tone PIN#",
	"ARD_TONE_FREQ": "frequency",
	"ARD_TONE_PIN_TIP": "Generate audio tones on a pin",
	"ARD_NOTONE_PIN": "No tone PIN#",
	"ARD_NOTONE_PIN_TIP": "Stop generating a tone on a pin",
	"ARD_MAP": "Map",
	"ARD_MAP_VAL": "value to [0-",
	"ARD_MAP_TIP": "Re-maps a number from [0-1024] to another.",
	"ARD_FUN_RUN_SETUP": "Arduino run first:",
	"ARD_FUN_RUN_LOOP": "Arduino loop forever:",
	"ARD_FUN_RUN_TIP": "Defines the Arduino setup() and loop() functions.",
	"ARD_PIN_WARN1": "Pin %1 is needed for %2 as pin %3. Already used as %4.",
	"ARD_SERIAL_SETUP": "Setup",
	"ARD_SERIAL_SPEED": ":  speed to",
	"ARD_SERIAL_BPS": "bps",
	"ARD_SERIAL_SETUP_TIP": "Selects the speed for a specific Serial peripheral",
	"ARD_SERIAL_PRINT": "print",
	"ARD_SERIAL_PRINT_NEWLINE": "add new line",
	"ARD_SERIAL_PRINT_TIP": "Prints data to the console/serial port as human-readable ASCII text.",
	"ARD_SERIAL_PRINT_WARN": "A setup block for %1 must be added to the workspace to use this block!",
	"ARD_SERVO_WRITE": "set SERVO from Pin",
	"ARD_SERVO_WRITE_TO": "to",
	"ARD_SERVO_WRITE_DEG_180": "Degrees (0~180)",
	"ARD_SERVO_WRITE_TIP": "Set a Servo to an specified angle",
	"ARD_SERVO_READ": "read SERVO from PIN#",
	"ARD_SERVO_READ_TIP": "Read a Servo angle",
	"ARD_SPI_SETUP": "Setup",
	"ARD_SPI_SETUP_CONF": "configuration:",
	"ARD_SPI_SETUP_SHIFT": "data shift",
	"ARD_SPI_SETUP_MSBFIRST": "MSBFIRST",
	"ARD_SPI_SETUP_LSBFIRST": "LSBFIRST",
	"ARD_SPI_SETUP_DIVIDE": "clock divide",
	"ARD_SPI_SETUP_MODE": "SPI mode (idle - edge)",
	"ARD_SPI_SETUP_MODE0": "0 (Low - Falling)",
	"ARD_SPI_SETUP_MODE1": "1 (Low - Rising)",
	"ARD_SPI_SETUP_MODE2": "2 (High - Falling)",
	"ARD_SPI_SETUP_MODE3": "3 (High - Rising)",
	"ARD_SPI_SETUP_TIP": "Configures the SPI peripheral.",
	"ARD_SPI_TRANS_NONE": "none",
	"ARD_SPI_TRANS_VAL": "transfer",
	"ARD_SPI_TRANS_SLAVE": "to slave pin",
	"ARD_SPI_TRANS_TIP": "Send a SPI message to an specified slave device.",
	"ARD_SPI_TRANS_WARN1": "A setup block for %1 must be added to the workspace to use this block!",
	"ARD_SPI_TRANS_WARN2": "Old pin value %1 is no longer available.",
	"ARD_SPI_TRANSRETURN_TIP": "Send a SPI message to an specified slave device and get data back.",
	"ARD_STEPPER_SETUP": "Setup stepper motor",
	"ARD_STEPPER_MOTOR": "stepper motor:",
	"ARD_STEPPER_DEFAULT_NAME": "MyStepper",
	"ARD_STEPPER_NUMBER_OF_PINS": "Number of pins",
	"ARD_STEPPER_TWO_PINS": "2",
	"ARD_STEPPER_FOUR_PINS": "4",
	"ARD_STEPPER_PIN1": "pin1#",
	"ARD_STEPPER_PIN2": "pin2#",
	"ARD_STEPPER_PIN3": "pin3#",
	"ARD_STEPPER_PIN4": "pin4#",
	"ARD_STEPPER_REVOLVS": "how many steps per revolution",
	"ARD_STEPPER_SPEED": "set speed (rpm) to",
	"ARD_STEPPER_SETUP_TIP": "Configures a stepper motor pinout and other settings.",
	"ARD_STEPPER_STEP": "move stepper",
	"ARD_STEPPER_STEPS": "steps",
	"ARD_STEPPER_STEP_TIP": "Turns the stepper motor a specific number of steps.",
	"ARD_STEPPER_COMPONENT": "stepper",
	"ARD_COMPONENT_WARN1": "A %1 configuration block with the same %2 name must be added to use this block!",
	"ARD_TIME_DELAY": "wait",
	"ARD_TIME_MS": "milliseconds",
	"ARD_TIME_DELAY_TIP": "Wait specific time in milliseconds",
	"ARD_TIME_DELAY_MICROS": "microseconds",
	"ARD_TIME_DELAY_MICRO_TIP": "Wait specific time in microseconds",
	"ARD_TIME_MILLIS": "current elapsed Time (milliseconds)",
	"ARD_TIME_MILLIS_TIP": "Returns the number of milliseconds since the Arduino board began running the current program. Has to be stored in a positive long integer",
	"ARD_TIME_MICROS": "current elapsed Time (microseconds)",
	"ARD_TIME_MICROS_TIP": "Returns the number of microseconds since the Arduino board began running the current program. Has to be stored in a positive long integer",
	"ARD_TIME_INF": "wait forever (end program)",
	"ARD_TIME_INF_TIP": "Wait indefinitely, stopping the program.",
	"ARD_VAR_AS": "as",
	"ARD_VAR_AS_TIP": "Sets a value to a specific type",
	"ARD_PULSE_READ": "measure %1 pulse on pin #%2",
	"ARD_PULSE_READ_TIMEOUT": "measure %1 pulse on pin #%2 (timeout after %3 μs)",
	"ARD_PULSE_TIP": "Measures the duration of a pulse on the selected pin.",
	"ARD_PULSETIMEOUT_TIP": "Measures the duration of a pulse on the selected pin, if it is within the time-out in microseconds.",
	"ARD_SETTONE": "Set tone on pin #",
	"ARD_TONEFREQ": "at frequency",
	"ARD_TONE_TIP": "Sets tone on pin to specified frequency within range 31 - 65535",
	"ARD_TONE_WARNING": "Frequency must be in range 31 - 65535",
	"ARD_NOTONE": "Turn off tone on pin #",
	"ARD_NOTONE_TIP": "Turns the tone off on the selected pin",
	"NEW_INSTANCE": "New instance...",
	"RENAME_INSTANCE": "Rename instance...",
	"NEW_INSTANCE_TITLE": "New instance name:",
	"RENAME_INSTANCE_TITLE": "Rename all '%1' instances to:",
	"senseBox_basic_blue": "Blau",
	"senseBox_basic_green": "Grün",
	"senseBox_piezo": "Piezo Piepser",
	"senseBox_basic_red": "Rot",
	"senseBox_basic_state": "Status",
	"senseBox_off": "Aus",
	"senseBox_on": "Ein",
	"senseBox_sensor": "Sensoren",
	"senseBox_output_filename": "Daten",
	"senseBox_output_format": "Format:",
	"senseBox_sd_create_file": "Erstelle Datei auf SD-Karte",
	"senseBox_sd_write_file": " Schreibe Daten auf SD-Karte",
	"senseBox_sd_open_file": "Öffne eine Datei auf der SD-Karte",
	"sensebox_sd_filename": "Daten",
	"senseBox_SD_COMPONENT": "SD-Block",
	"senseBox_output_linebreak": "Zeilenumbruch",
	"senseBox_output_networkid": "NetzwerkID",
	"senseBox_output_password": "Passwort",
	"senseBox_output_safetosd": "Auf SD Karte speichern",
	"senseBox_output_safetosd_tip": "Speichert Messwerte auf SD Karte",
	"senseBox_output_serialprint": "Auf Kommandozeile ausgeben",
	"senseBox_serial_tip": "Gibt Messwerte oder Daten auf dem Seriellen Monitor der Arduino IDE aus. Praktisch um ohne Display zu arbeiten",
	"senseBox_output_timestamp": "Zeitstempel",
	"senseBox_button": "Drucktaster",
	"senseBox_button_tip": "Drucktaster",
	"senseBox_led": "LED an digital",
	"senseBox_led_tip": "Einfache LED. Beim Anschluss sollte immer ein Vorwiderstand verwendet werden",
	"senseBox_piezo": "Piezo an digital",
	"senseBox_piezo_tip": "Piezo an digital PIN. Beim Anschluss sollte immer ein Vorwiderstand verwendet werden",
	"senseBox_foto": "Fotowiderstand",
	"senseBox_foto_tip": "Fotowiderstand",
	"senseBox_hum": "Luftfeuchtigkeit in %",
	"senseBox_hum_tip": "Luftfeuchtigkeit",
	"senseBox_ir": "Infrarot Abstandssensor",
	"senseBox_ir_tip": "Infrarot Abstandssensor",
	"senseBox_lux": "Helligkeitssensor",
	"senseBox_lux_tip": "Helligkeitssensor",
	"senseBox_poti": "Potenziometer",
	"senseBox_poti_tip": "Potenziometer",
	"senseBox_pressure_sensor": "Luftdruck/Temperatur Sensor (BMP280)",
	"senseBox_pressure": "Luftdruck in Pa",
	"senseBox_pressure_dimension": "Luftdruck in Pa",
	"senseBox_pressure_tip": "Luftdrucksensor",
	"senseBox_sound": "Geräuschsensor",
	"senseBox_sound_tip": "Geräuschsensor",
	"senseBox_rgb_led": "RGB-LED",
	"senseBox_rgb_led_tip": "RGB-LED benötigt einen digitalen Pin und eine Stromkreis ",
	"senseBox_temp": "Temperatur in °C",
	"senseBox_temp_hum": "Temperatur/Luftfeuchtigkeitssensor (HDC1080)",
	"senseBox_temp_hum_tip": "Sensor misst Temperatur und Luftfeuchtigkeit",
	"senseBox_ultrasonic": "Ultraschall Abstandssensor an Port",
	"senseBox_ultrasonic_port_A": "A",
	"senseBox_ultrasonic_port_B": "B",
	"senseBox_ultrasonic_port_C": "C",
	"senseBox_ultrasonic_tip": "Ultraschall Abstandssensor",
	"senseBox_value": "Messwert:",
	"senseBox_uv_light": "Licht Sichtbar + UV Sensor",
	"senseBox_uv_light_tip": "Sensor misst UV-Licht oder Die Helligkeit",
	"senseBox_uv": "UV-Intensität in µW/cm²",
	"senseBox_light": "Beleuchtungsstärke in Lux",
	"senseBox_bmx055_compass": "Lage Sensor",
	"senseBox_bmx055_accelerometer": "Beschleunigungs Sensor",
	"senseBox_bmx055_gyroscope": "Lage Sensor",
	"senseBox_bmx055_accelerometer_tip": "Lage Sensor",
	"senseBox_bmx055_compass_tip": "Lage Sensor",
	"senseBox_bmx055_gyroscope_tip": "Lage Sensor",
	"senseBox_bmx055_x": "X-Richtung",
	"senseBox_bmx055_y": "Y-Richtung",
	"senseBox_wifi_tip": "stellt eine WLAN verbindung her",
	"senseBox_osem_connection_tip": "stellt eine WLAN verbindung her",
	"senseBox_send_to_osem_tip": "sende Messwert an",
	"senseBox_send_to_osem": "sende Messwert an die openSenseMap",
	"senseBox_osem_connection": "Verbinde mit openSenseMap",
	"senseBox_sds011": "Feinstaubsensor",
	"senseBox_sds011_dimension": "in µg/m³ an",
	"senseBox_sds011_pm25": "PM2.5",
	"senseBox_sds011_pm10": "PM10",
	"senseBox_sds011_tip": "Misst die Feinstaubbelastung",
	"senseBox_sds011_serial1": "Serial1",
	"senseBox_sds011_serial2": "Serial2",
	"senseBox_display_beginDisplay": "Display initialisieren",
	"senseBox_display_clearDisplay_tip": "Starten die Ausgabe auf dem Display",
	"senseBox_display_clearDisplay": "Display löschen",
	"senseBox_display_clearDisplay_tip": "Löscht den Inhalt des Displays",
	"senseBox_display_printDisplay": "",
	"senseBox_display_printDisplay_tip": "zeigt Wert auf dem Display an.",
	"senseBox_display_printDisplay_x": "x",
	"senseBox_display_printDisplay_y": "y",
	"senseBox_display_printDisplay_value": "Wert",
	"senseBox_display_setSize": "Schriftgröße",
	"senseBox_display_setSize_tip": "Ändere die Schriftgröße auf einen Wert zwischen 1 und 10.",
	"senseBox_display_color": "Schriftfarbe",
	"senseBox_display_white": "Weiß",
	"senseBox_display_black": "Schwarz",
	"sensebox_display_show": "Zeige auf dem Display",
	"sensebox_display_show_tip": "Zeigt den Nachfolgenden Inhalt auf dem Bildschirm",
	"senseBox_display_plotDisplay": "Diagram zeichnen",
	"senseBox_display_plotXLabel": "X-Achsen Beschriftung",
	"senseBox_display_plotYLabel": "Y-Achsen Beschriftung",
	"senseBox_display_plotXRange1": "X-Wertebereich Anfang",
	"senseBox_display_plotXRange2": "X-Wertebereich Ende",
	"senseBox_display_plotYRange1": "Y-Wertebereich Anfang",
	"senseBox_display_plotYRange2": "Y-Wertebereich Ende",
	"senseBox_display_plotXTick": "X-Linienabstand",
	"senseBox_display_plotYTick": "Y-Linienabstand",
	"senseBox_display_plotTimeFrame": "Zeitabschnitt",
	"senseBox_gps_getValues": "GPS Modul",
	"senseBox_gps_getValues_tip": "ruft das GPS Signal ab",
	"senseBox_gps_lat": "Breitengrad",
	"senseBox_gps_lng": "Längengrad",
	"senseBox_gps_alt": "Höhe über NN in m",
	"senseBox_gps_speed": "Geschwindigkeit in km/h",
	"senseBox_send_mobile_to_osem": "Sende Messwert und Standort",
	"senseBox_send_mobile_to_osem_tip": "Sende Messwert und Standort an die openSenseMap",
	"senseBox_interval_timer": "Messintervall",
	"senseBox_interval": "ms",
	"senseBox_interval_timer_tip": "Intervall",
	"mcubase_basic_blue": "Blau",
	"mcubase_basic_green": "Grün",
	"mcubase_piezo": "Piezo Piepser",
	"mcubase_basic_red": "Rot",
	"mcubase_basic_state": "Status",
	"mcubase_off": "Aus",
	"mcubase_on": "Ein",
	"mcubase_sensor": "Sensoren",
	"mcubase_output_filename": "Daten",
	"mcubase_output_format": "Format:",
	"mcubase_sd_create_file": "Erstelle Datei auf SD-Karte",
	"mcubase_sd_write_file": " Schreibe Daten auf SD-Karte",
	"mcubase_sd_open_file": "Öffne eine Datei auf der SD-Karte",
	"mcubase_sd_filename": "Daten",
	"mcubase_SD_COMPONENT": "SD-Block",
	"mcubase_output_linebreak": "Zeilenumbruch",
	"mcubase_output_networkid": "NetzwerkID",
	"mcubase_output_password": "Passwort",
	"mcubase_output_safetosd": "Auf SD Karte speichern",
	"mcubase_output_safetosd_tip": "Speichert Messwerte auf SD Karte",
	"mcubase_output_serialprint": "Auf Kommandozeile ausgeben",
	"mcubase_serial_tip": "Gibt Messwerte oder Daten auf dem Seriellen Monitor der Arduino IDE aus. Praktisch um ohne Display zu arbeiten",
	"mcubase_output_timestamp": "Zeitstempel",
	"mcubase_button": "Drucktaster",
	"mcubase_button_tip": "Drucktaster",
	"mcubase_led": "LED an digital",
	"mcubase_led_tip": "Einfache LED. Beim Anschluss sollte immer ein Vorwiderstand verwendet werden",
	"mcubase_piezo": "Piezo an digital",
	"mcubase_piezo_tip": "Piezo an digital PIN. Beim Anschluss sollte immer ein Vorwiderstand verwendet werden",
	"mcubase_foto": "Fotowiderstand",
	"mcubase_foto_tip": "Fotowiderstand",
	"mcubase_hum": "Luftfeuchtigkeit in %",
	"mcubase_hum_tip": "Luftfeuchtigkeit",
	"mcubase_ir": "Infrarot Abstandssensor",
	"mcubase_ir_tip": "Infrarot Abstandssensor",
	"mcubase_lux": "Helligkeitssensor",
	"mcubase_lux_tip": "Helligkeitssensor",
	"mcubase_poti": "Potenziometer",
	"mcubase_poti_tip": "Potenziometer",
	"mcubase_pressure_sensor": "Luftdruck/Temperatur Sensor (BMP280)",
	"mcubase_pressure": "Luftdruck in Pa",
	"mcubase_pressure_dimension": "Luftdruck in Pa",
	"mcubase_pressure_tip": "Luftdrucksensor",
	"mcubase_sound": "Geräuschsensor",
	"mcubase_sound_tip": "Geräuschsensor",
	"mcubase_rgb_led": "RGB-LED",
	"mcubase_rgb_led_tip": "RGB-LED benötigt einen digitalen Pin und eine Stromkreis ",
	"mcubase_temp": "Temperatur in °C",
	"mcubase_temp_hum": "Temperatur/Luftfeuchtigkeitssensor (HDC1080)",
	"mcubase_temp_hum_tip": "Sensor misst Temperatur und Luftfeuchtigkeit",
	"mcubase_ultrasonic": "Ultraschall Abstandssensor an Port",
	"mcubase_ultrasonic_port_A": "A",
	"mcubase_ultrasonic_port_B": "B",
	"mcubase_ultrasonic_port_C": "C",
	"mcubase_ultrasonic_tip": "Ultraschall Abstandssensor",
	"mcubase_value": "Messwert:",
	"mcubase_uv_light": "Licht Sichtbar + UV Sensor",
	"mcubase_uv_light_tip": "Sensor misst UV-Licht oder Die Helligkeit",
	"mcubase_uv": "UV-Intensität in µW/cm²",
	"mcubase_light": "Beleuchtungsstärke in Lux",
	"mcubase_bmx055_compass": "Lage Sensor",
	"mcubase_bmx055_accelerometer": "Beschleunigungs Sensor",
	"mcubase_bmx055_gyroscope": "Lage Sensor",
	"mcubase_bmx055_accelerometer_tip": "Lage Sensor",
	"mcubase_bmx055_compass_tip": "Lage Sensor",
	"mcubase_bmx055_gyroscope_tip": "Lage Sensor",
	"mcubase_bmx055_x": "X-Richtung",
	"mcubase_bmx055_y": "Y-Richtung",
	"mcubase_wifi_tip": "stellt eine WLAN verbindung her",
	"mcubase_osem_connection_tip": "stellt eine WLAN verbindung her",
	"mcubase_send_to_osem_tip": "sende Messwert an",
	"mcubase_send_to_osem": "sende Messwert an die openSenseMap",
	"mcubase_osem_connection": "Verbinde mit openSenseMap",
	"mcubase_sds011": "Feinstaubsensor",
	"mcubase_sds011_dimension": "in µg/m³ an",
	"mcubase_sds011_pm25": "PM2.5",
	"mcubase_sds011_pm10": "PM10",
	"mcubase_sds011_tip": "Misst die Feinstaubbelastung",
	"mcubase_sds011_serial1": "Serial1",
	"mcubase_sds011_serial2": "Serial2",
	"mcubase_display_beginDisplay": "Display initialisieren",
	"mcubase_display_clearDisplay_tip": "Starten die Ausgabe auf dem Display",
	"mcubase_display_clearDisplay": "Display löschen",
	"mcubase_display_clearDisplay_tip": "Löscht den Inhalt des Displays",
	"mcubase_display_printDisplay": "",
	"mcubase_display_printDisplay_tip": "zeigt Wert auf dem Display an.",
	"mcubase_display_printDisplay_x": "x",
	"mcubase_display_printDisplay_y": "y",
	"mcubase_display_printDisplay_value": "Wert",
	"mcubase_display_setSize": "Schriftgröße",
	"mcubase_display_setSize_tip": "Ändere die Schriftgröße auf einen Wert zwischen 1 und 10.",
	"mcubase_display_color": "Schriftfarbe",
	"mcubase_display_white": "Weiß",
	"mcubase_display_black": "Schwarz",
	"mcubase_display_show": "Zeige auf dem Display",
	"mcubase_display_show_tip": "Zeigt den Nachfolgenden Inhalt auf dem Bildschirm",
	"mcubase_display_plotDisplay": "Diagram zeichnen",
	"mcubase_display_plotXLabel": "X-Achsen Beschriftung",
	"mcubase_display_plotYLabel": "Y-Achsen Beschriftung",
	"mcubase_display_plotXRange1": "X-Wertebereich Anfang",
	"mcubase_display_plotXRange2": "X-Wertebereich Ende",
	"mcubase_display_plotYRange1": "Y-Wertebereich Anfang",
	"mcubase_display_plotYRange2": "Y-Wertebereich Ende",
	"mcubase_display_plotXTick": "X-Linienabstand",
	"mcubase_display_plotYTick": "Y-Linienabstand",
	"mcubase_display_plotTimeFrame": "Zeitabschnitt",
	"mcubase_gps_getValues": "GPS Modul",
	"mcubase_gps_getValues_tip": "ruft das GPS Signal ab",
	"mcubase_gps_lat": "Breitengrad",
	"mcubase_gps_lng": "Längengrad",
	"mcubase_gps_alt": "Höhe über NN in m",
	"mcubase_gps_speed": "Geschwindigkeit in km/h",
	"mcubase_send_mobile_to_osem": "Sende Messwert und Standort",
	"mcubase_send_mobile_to_osem_tip": "Sende Messwert und Standort an die openSenseMap",
	"mcubase_interval_timer": "Messintervall",
	"mcubase_interval": "ms",
	"mcubase_interval_timer_tip": "Intervall",
	"mcubase_rgb_count" : "LED count:",
	"mcubase_rgb_position" : "LED position:",
	"cases_do": "Führe aus",
	"cases_condition": "Fall (Variable) = ",
	"cases_switch": "Variable",
	"cases_add": "Fall"
}
