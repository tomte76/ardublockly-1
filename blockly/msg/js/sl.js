// This file was automatically generated.  Do not modify.

'use strict';

goog.provide('Blockly.Msg.sl');

goog.require('Blockly.Msg');

Blockly.Msg.ADD_COMMENT = "Dodaj komentar";
Blockly.Msg.AUTH = "Prosimo, avtoriziraj to aplikacijo, da boš lahko svoje delo shranil(-a) in delil(-a) z drugimi.";
Blockly.Msg.CHANGE_VALUE_TITLE = "Spremeni vrednost:";
Blockly.Msg.CHAT = "Klepetaj s sodelavcem tako, da tipkaš v to okno!";
Blockly.Msg.CLEAN_UP = "Ponastavi kocke";
Blockly.Msg.COLLAPSE_ALL = "Skrči kocke";
Blockly.Msg.COLLAPSE_BLOCK = "Skrči kocko";
Blockly.Msg.COLOUR_BLEND_COLOUR1 = "barva 1";
Blockly.Msg.COLOUR_BLEND_COLOUR2 = "barva 2";
Blockly.Msg.COLOUR_BLEND_HELPURL = "http://meyerweb.com/eric/tools/color-blend/";  // untranslated
Blockly.Msg.COLOUR_BLEND_RATIO = "razmerje";
Blockly.Msg.COLOUR_BLEND_TITLE = "mešanica";
Blockly.Msg.COLOUR_BLEND_TOOLTIP = "Zmeša dve barvi v danem razmerju (0.0 - 1.0).";
Blockly.Msg.COLOUR_PICKER_HELPURL = "https://en.wikipedia.org/wiki/Color";
Blockly.Msg.COLOUR_PICKER_TOOLTIP = "Izberi barvo s palete.";
Blockly.Msg.COLOUR_RANDOM_HELPURL = "http://randomcolour.com";  // untranslated
Blockly.Msg.COLOUR_RANDOM_TITLE = "naključna barva";
Blockly.Msg.COLOUR_RANDOM_TOOLTIP = "Izbere naključno barvo.";
Blockly.Msg.COLOUR_RGB_BLUE = "modra";
Blockly.Msg.COLOUR_RGB_GREEN = "zelena";
Blockly.Msg.COLOUR_RGB_HELPURL = "http://www.december.com/html/spec/colorper.html";  // untranslated
Blockly.Msg.COLOUR_RGB_RED = "rdeča";
Blockly.Msg.COLOUR_RGB_TITLE = "določena barva";
Blockly.Msg.COLOUR_RGB_TOOLTIP = "Ustvari barvo z določeno količino rdeče, zelene in modre. Vse vrednosti morajo biti med 0 in 100.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_HELPURL = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = "izstopi iz zanke";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = "nadaljuj z naslednjo ponovitvijo zanke";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = "Izstopi iz trenutne zanke.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = "Preskoči preostanek te zanke in nadaljuje z naslednjo ponovitvijo.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_WARNING = "Pozor: To kocko lahko uporabiš samo znotraj zanke.";
Blockly.Msg.CONTROLS_FOREACH_HELPURL = "https://github.com/google/blockly/wiki/Loops#for-each";  // untranslated
Blockly.Msg.CONTROLS_FOREACH_TITLE = "za vsak element %1 v seznamu %2";
Blockly.Msg.CONTROLS_FOREACH_TOOLTIP = "Za vsak element v seznamu, nastavi spremenljivko '%1' na ta element. Pri tem se izvedejo določene kocke.";
Blockly.Msg.CONTROLS_FOR_HELPURL = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
Blockly.Msg.CONTROLS_FOR_TITLE = "štej s/z %1 od %2 do %3 s korakom %4";
Blockly.Msg.CONTROLS_FOR_TOOLTIP = "Vrednost spremenljivke '%1' se spreminja od začetnega števila do končnega števila, z določenim korakom. Pri tem se izvedejo določene kocke.";
Blockly.Msg.CONTROLS_IF_ELSEIF_TOOLTIP = "Dodaj pogoj »če« kocki.";
Blockly.Msg.CONTROLS_IF_ELSE_TOOLTIP = "Dodaj končni pogoj »če« kocki.";
Blockly.Msg.CONTROLS_IF_HELPURL = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
Blockly.Msg.CONTROLS_IF_IF_TOOLTIP = "Dodaj, odstrani ali spremeni vrstni red odsekov za ponovno nastavitev »če« kocke.";
Blockly.Msg.CONTROLS_IF_MSG_ELSE = "sicer";
Blockly.Msg.CONTROLS_IF_MSG_ELSEIF = "sicer če";
Blockly.Msg.CONTROLS_IF_MSG_IF = "če";
Blockly.Msg.CONTROLS_IF_TOOLTIP_1 = "Če je vrednost resnična, izvedi določene kocke.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_2 = "Če je vrednost resnična, izvedi prvo skupino kock. Sicer izvedi drugo skupino kock.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_3 = "Če je prva vrednost resnična, izvedi prvo skupino kock. Sicer, če je resnična druga vrednost, izvedi drugo skupino kock.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_4 = "Če je prva vrednost resnična, izvedi prvo skupino kock. Sicer, če je resnična druga vrednost, izvedi drugo skupino kock. Če nobena izmed vrednosti ni resnična, izvedi zadnjo skupino kock.";
Blockly.Msg.CONTROLS_REPEAT_HELPURL = "https://en.wikipedia.org/wiki/For_loop";
Blockly.Msg.CONTROLS_REPEAT_INPUT_DO = "izvedi";
Blockly.Msg.CONTROLS_REPEAT_TITLE = "ponavljaj %1 krat";
Blockly.Msg.CONTROLS_REPEAT_TOOLTIP = "Kocke se izvedejo večkrat.";
Blockly.Msg.CONTROLS_WHILEUNTIL_HELPURL = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = "ponavljaj dokler";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_WHILE = "ponavljaj";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = "Kocke se izvajajo dokler je vrednost neresnična.";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = "Kocke se izvajajo dokler je vrednost resnična.";
Blockly.Msg.DELETE_ALL_BLOCKS = "Izbrišem vseh %1 kock?";
Blockly.Msg.DELETE_BLOCK = "Izbriši kocko";
Blockly.Msg.DELETE_X_BLOCKS = "Izbriši kocke";
Blockly.Msg.DISABLE_BLOCK = "Onemogoči kocko";
Blockly.Msg.DUPLICATE_BLOCK = "Podvoji";
Blockly.Msg.ENABLE_BLOCK = "Omogoči kocko";
Blockly.Msg.EXPAND_ALL = "Razširi kocke";
Blockly.Msg.EXPAND_BLOCK = "Razširi kocko";
Blockly.Msg.EXTERNAL_INPUTS = "Vnosi zunaj";
Blockly.Msg.HELP = "Pomoč";
Blockly.Msg.INLINE_INPUTS = "Vnosi v vrsti";
Blockly.Msg.LISTS_CREATE_EMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-empty-list";  // untranslated
Blockly.Msg.LISTS_CREATE_EMPTY_TITLE = "ustvari prazen seznam";
Blockly.Msg.LISTS_CREATE_EMPTY_TOOLTIP = "Vrne seznam, dolžine 0, ki ne vsebuje nobenih podatkov.";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = "seznam";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TOOLTIP = "Doda, odstrani ali spremeni vrstni red elementov tega seznama.";
Blockly.Msg.LISTS_CREATE_WITH_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg.LISTS_CREATE_WITH_INPUT_WITH = "ustvari seznam s/z";
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TOOLTIP = "Doda element seznamu.";
Blockly.Msg.LISTS_CREATE_WITH_TOOLTIP = "Ustvari seznam s poljubnim številom elementov.";
Blockly.Msg.LISTS_GET_INDEX_FIRST = "prvo mesto";
Blockly.Msg.LISTS_GET_INDEX_FROM_END = "mesto št. od konca";
Blockly.Msg.LISTS_GET_INDEX_FROM_START = "#";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_GET = "vrni";
Blockly.Msg.LISTS_GET_INDEX_GET_REMOVE = "odstrani in vrni";
Blockly.Msg.LISTS_GET_INDEX_LAST = "zadnje mesto";
Blockly.Msg.LISTS_GET_INDEX_RANDOM = "naključno mesto";
Blockly.Msg.LISTS_GET_INDEX_REMOVE = "odstrani";
Blockly.Msg.LISTS_GET_INDEX_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FIRST = "Vrne prvi element seznama.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_END = "Vrne element na določenem mestu v seznamu. Zadnji element je št. 1.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_START = "Vrne element na določenem mestu v seznamu. Prvi element je št. 1.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_LAST = "Vrne zadnji element seznama.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_RANDOM = "Vrne naključni element seznama.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST = "Odstrani in vrne prvi element seznama.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_END = "Odstrani in vrne element na določenem mestu v seznamu. Zadnji element je št. 1.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_START = "Odstrani in vrne element na določenem mestu v seznamu. Prvi element je št. 1.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST = "Odstrani in vrne zadnji element seznama.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM = "Odstrani in vrne naključni element seznama.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST = "Odstrani prvi element seznama.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_END = "Odstrani element na določenem mestu v seznamu. Zadnji element je št. 1.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_START = "Odstrani element na določenem mestu v seznamu. Prvi element je št. 1.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST = "Odstrani zadnji element seznama.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM = "Odstrani naključni element seznama.";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_END = "do mesta št. od konca";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_START = "do mesta št.";
Blockly.Msg.LISTS_GET_SUBLIST_END_LAST = "do zadnjega mesta";
Blockly.Msg.LISTS_GET_SUBLIST_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_START_FIRST = "ustvari podseznam od prvega mesta";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_END = "ustvari podseznam od mesta št. od konca";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_START = "ustvari podseznam od mesta št.";
Blockly.Msg.LISTS_GET_SUBLIST_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_TOOLTIP = "Ustvari nov seznam, kot kopijo določenega dela seznama.";
Blockly.Msg.LISTS_INDEX_OF_FIRST = "najdi prvo pojavitev elementa";
Blockly.Msg.LISTS_INDEX_OF_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
Blockly.Msg.LISTS_INDEX_OF_LAST = "najdi zadnjo pojavitev elementa";
Blockly.Msg.LISTS_INDEX_OF_TOOLTIP = "Vrne mesto (indeks) prve/zadnje pojavitve elementa v seznamu. Če elementa ne najde, vrne 0.";
Blockly.Msg.LISTS_INLIST = "v seznamu";
Blockly.Msg.LISTS_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
Blockly.Msg.LISTS_ISEMPTY_TITLE = "%1 je prazen";
Blockly.Msg.LISTS_ISEMPTY_TOOLTIP = "Vrne resnično, če je seznam prazen.";
Blockly.Msg.LISTS_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
Blockly.Msg.LISTS_LENGTH_TITLE = "dolžina %1";
Blockly.Msg.LISTS_LENGTH_TOOLTIP = "Vrne dolžino seznama.";
Blockly.Msg.LISTS_REPEAT_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg.LISTS_REPEAT_TITLE = "ustvari seznam z elementom %1, ki se ponovi %2 krat";
Blockly.Msg.LISTS_REPEAT_TOOLTIP = "Ustvari seznam z danim elementom, ki se poljubno mnogo krat ponovi.";
Blockly.Msg.LISTS_SET_INDEX_HELPURL = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_INPUT_TO = "element";
Blockly.Msg.LISTS_SET_INDEX_INSERT = "vstavi na";
Blockly.Msg.LISTS_SET_INDEX_SET = "nastavi na";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST = "Vstavi element na začetek seznama.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_END = "Vstavi element na določeno mesto v seznamu. Zadnji element je št. 1.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_START = "Vstavi element na določeno mesto v seznamu. Prvi element je št. 1.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_LAST = "Doda element na konec seznama.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM = "Vstavi element na naključno mesto v seznamu.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FIRST = "Nastavi prvi element seznama.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_END = "Nastavi element na določenem mestu v seznamu. Zadnji element je št. 1.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_START = "Nastavi element na določenem mestu v seznamu. Prvi element je št. 1.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_LAST = "Nastavi zadnji element seznama.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_RANDOM = "Nastavi naključni element seznama.";
Blockly.Msg.LISTS_SORT_HELPURL = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";  // untranslated
Blockly.Msg.LISTS_SORT_ORDER_ASCENDING = "ascending";  // untranslated
Blockly.Msg.LISTS_SORT_ORDER_DESCENDING = "descending";  // untranslated
Blockly.Msg.LISTS_SORT_TITLE = "sort %1 %2 %3";  // untranslated
Blockly.Msg.LISTS_SORT_TOOLTIP = "Sort a copy of a list.";  // untranslated
Blockly.Msg.LISTS_SORT_TYPE_IGNORECASE = "alphabetic, ignore case";  // untranslated
Blockly.Msg.LISTS_SORT_TYPE_NUMERIC = "numeric";  // untranslated
Blockly.Msg.LISTS_SORT_TYPE_TEXT = "alphabetic";  // untranslated
Blockly.Msg.LISTS_SPLIT_HELPURL = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";  // untranslated
Blockly.Msg.LISTS_SPLIT_LIST_FROM_TEXT = "ustvari seznam iz besedila";
Blockly.Msg.LISTS_SPLIT_TEXT_FROM_LIST = "ustvari besedilo iz seznama";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_JOIN = "Združi seznam besedil v eno besedilo, ločeno z ločilom.";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_SPLIT = "Razdruži besedilo v seznam besedil. Za razdruževanje besedila uporabi ločilo.";
Blockly.Msg.LISTS_SPLIT_WITH_DELIMITER = "z ločilom";
Blockly.Msg.LOGIC_BOOLEAN_FALSE = "neresnično";
Blockly.Msg.LOGIC_BOOLEAN_HELPURL = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
Blockly.Msg.LOGIC_BOOLEAN_TOOLTIP = "Vrne resnično ali neresnično.";
Blockly.Msg.LOGIC_BOOLEAN_TRUE = "resnično";
Blockly.Msg.LOGIC_COMPARE_HELPURL = "https://en.wikipedia.org/wiki/Inequality_(mathematics)";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ = "Vrne resnično, če sta vnosa enaka.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT = "Vrne resnično, če je prvi vnos večji od drugega.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE = "Vrne resnično, če je prvi vnos večji ali enak drugemu.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT = "Vrne resnično, če je prvi vnos manjši od drugega.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE = "Vrne resnično, če je prvi vnos manjši ali enak drugemu.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ = "Vrne resnično, če vnosa nista enaka.";
Blockly.Msg.LOGIC_NEGATE_HELPURL = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
Blockly.Msg.LOGIC_NEGATE_TITLE = "ne %1";
Blockly.Msg.LOGIC_NEGATE_TOOLTIP = "Vrne resnično, če je vnos neresničen. Vrne neresnično, če je vnos resničen.";
Blockly.Msg.LOGIC_NULL = "prazno";
Blockly.Msg.LOGIC_NULL_HELPURL = "https://en.wikipedia.org/wiki/Nullable_type";  // untranslated
Blockly.Msg.LOGIC_NULL_TOOLTIP = "Vrne prazno.";
Blockly.Msg.LOGIC_OPERATION_AND = "in";
Blockly.Msg.LOGIC_OPERATION_HELPURL = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
Blockly.Msg.LOGIC_OPERATION_OR = "ali";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_AND = "Vrne resnično, če sta oba vnosa resnična.";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_OR = "Vrne resnično, če je vsaj eden od vnosov resničen.";
Blockly.Msg.LOGIC_TERNARY_CONDITION = "test";
Blockly.Msg.LOGIC_TERNARY_HELPURL = "https://en.wikipedia.org/wiki/%3F:";  // untranslated
Blockly.Msg.LOGIC_TERNARY_IF_FALSE = "če neresnično";
Blockly.Msg.LOGIC_TERNARY_IF_TRUE = "če resnično";
Blockly.Msg.LOGIC_TERNARY_TOOLTIP = "Preveri pogoj v »testu«. Če je pogoj resničen, potem vrne vrednost »če resnično«; sicer vrne vrednost »če neresnično«.";
Blockly.Msg.MATH_ADDITION_SYMBOL = "+";  // untranslated
Blockly.Msg.MATH_ARITHMETIC_HELPURL = "https://en.wikipedia.org/wiki/Arithmetic";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_ADD = "Vrne vsoto dveh števil.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_DIVIDE = "Vrne kvocient dveh števil.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MINUS = "Vrne razliko dveh števil.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MULTIPLY = "Vrne zmnožek dveh števil.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_POWER = "Vrne prvo število na potenco drugega števila.";
Blockly.Msg.MATH_CHANGE_HELPURL = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";
Blockly.Msg.MATH_CHANGE_TITLE = "spremeni %1 za %2";
Blockly.Msg.MATH_CHANGE_TOOLTIP = "Prišteje število k spremenljivki '%1'.";
Blockly.Msg.MATH_CONSTANT_HELPURL = "https://en.wikipedia.org/wiki/Mathematical_constant";
Blockly.Msg.MATH_CONSTANT_TOOLTIP = "Vrne eno izmed običajnih konstant: π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…), ali ∞ (neskončno).";
Blockly.Msg.MATH_CONSTRAIN_HELPURL = "https://en.wikipedia.org/wiki/Clamping_%28graphics%29";  // untranslated
Blockly.Msg.MATH_CONSTRAIN_TITLE = "omeji %1 na najmanj %2 in največ %3";
Blockly.Msg.MATH_CONSTRAIN_TOOLTIP = "Omeji število, da bo med določenima (vključenima) mejama.";
Blockly.Msg.MATH_DIVISION_SYMBOL = "÷";  // untranslated
Blockly.Msg.MATH_IS_DIVISIBLE_BY = "je deljivo s/z";
Blockly.Msg.MATH_IS_EVEN = "je sodo";
Blockly.Msg.MATH_IS_NEGATIVE = "je negativno";
Blockly.Msg.MATH_IS_ODD = "je liho";
Blockly.Msg.MATH_IS_POSITIVE = "je pozitivno";
Blockly.Msg.MATH_IS_PRIME = "je praštevilo";
Blockly.Msg.MATH_IS_TOOLTIP = "Preveri, če je število sodo, liho, praštevilo, celo, pozitivno, negativno ali, če je deljivo z določenim številom. Vrne resnično ali neresnično.";
Blockly.Msg.MATH_IS_WHOLE = "je celo";
Blockly.Msg.MATH_MODULO_HELPURL = "https://en.wikipedia.org/wiki/Modulo_operation";
Blockly.Msg.MATH_MODULO_TITLE = "ostanek pri %1 ÷ %2";
Blockly.Msg.MATH_MODULO_TOOLTIP = "Vrne ostanek pri deljenju dveh števil.";
Blockly.Msg.MATH_MULTIPLICATION_SYMBOL = "×";  // untranslated
Blockly.Msg.MATH_NUMBER_HELPURL = "https://en.wikipedia.org/wiki/Number";
Blockly.Msg.MATH_NUMBER_TOOLTIP = "Število.";
Blockly.Msg.MATH_ONLIST_HELPURL = "";  // untranslated
Blockly.Msg.MATH_ONLIST_OPERATOR_AVERAGE = "povprečje seznama";
Blockly.Msg.MATH_ONLIST_OPERATOR_MAX = "maksimum seznama";
Blockly.Msg.MATH_ONLIST_OPERATOR_MEDIAN = "mediana seznama";
Blockly.Msg.MATH_ONLIST_OPERATOR_MIN = "minimum seznama";
Blockly.Msg.MATH_ONLIST_OPERATOR_MODE = "modus seznama";
Blockly.Msg.MATH_ONLIST_OPERATOR_RANDOM = "naključni element seznama";
Blockly.Msg.MATH_ONLIST_OPERATOR_STD_DEV = "standardni odklon seznama";
Blockly.Msg.MATH_ONLIST_OPERATOR_SUM = "vsota seznama";
Blockly.Msg.MATH_ONLIST_TOOLTIP_AVERAGE = "Vrne povprečje (aritmetično sredino) števil na seznamu.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MAX = "Vrne največje število na seznamu.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MEDIAN = "Vrne mediano števil na seznamu.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MIN = "Vrne najmanjše število na seznamu.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MODE = "Vrne seznam najpogostejšega elementa(-ov) na seznamu.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_RANDOM = "Vrne naključno število izmed števil na seznamu.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_STD_DEV = "Vrne standardni odklon seznama.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_SUM = "Vrne vsoto vseh števil na seznamu.";
Blockly.Msg.MATH_POWER_SYMBOL = "^";  // untranslated
Blockly.Msg.MATH_RANDOM_FLOAT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg.MATH_RANDOM_FLOAT_TITLE_RANDOM = "naključni ulomek";
Blockly.Msg.MATH_RANDOM_FLOAT_TOOLTIP = "Vrne naključni ulomek med (vključno) 0.0 in 1.0 (izključno).";
Blockly.Msg.MATH_RANDOM_INT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg.MATH_RANDOM_INT_TITLE = "naključno število med %1 in %2";
Blockly.Msg.MATH_RANDOM_INT_TOOLTIP = "Vrne naključno število med dvema določenima mejama, vključno z mejama.";
Blockly.Msg.MATH_ROUND_HELPURL = "https://en.wikipedia.org/wiki/Rounding";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUND = "zaokroži";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDDOWN = "zaokroži navzdol";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDUP = "zaokroži navzgor";
Blockly.Msg.MATH_ROUND_TOOLTIP = "Zaokroži število navzgor ali navzdol.";
Blockly.Msg.MATH_SINGLE_HELPURL = "https://en.wikipedia.org/wiki/Square_root";
Blockly.Msg.MATH_SINGLE_OP_ABSOLUTE = "absolutno";
Blockly.Msg.MATH_SINGLE_OP_ROOT = "kvadratni koren";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ABS = "Vrne absolutno vrednost števila.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_EXP = "Vrne e na potenco števila.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LN = "Vrne naravni logaritem števila.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG10 = "Vrne desetiški logaritem števila.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_NEG = "Vrne negacijo števila.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_POW10 = "Vrne 10 na potenco števila.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ROOT = "Vrne kvadratni koren števila.";
Blockly.Msg.MATH_SUBTRACTION_SYMBOL = "-";  // untranslated
Blockly.Msg.MATH_TRIG_ACOS = "acos";  // untranslated
Blockly.Msg.MATH_TRIG_ASIN = "asin";  // untranslated
Blockly.Msg.MATH_TRIG_ATAN = "atan";  // untranslated
Blockly.Msg.MATH_TRIG_COS = "cos";  // untranslated
Blockly.Msg.MATH_TRIG_HELPURL = "https://en.wikipedia.org/wiki/Trigonometric_functions";
Blockly.Msg.MATH_TRIG_SIN = "sin";  // untranslated
Blockly.Msg.MATH_TRIG_TAN = "tan";  // untranslated
Blockly.Msg.MATH_TRIG_TOOLTIP_ACOS = "Vrne arkus kosinus števila.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ASIN = "Vrne arkus sinus števila.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ATAN = "Vrne arkus tangens števila.";
Blockly.Msg.MATH_TRIG_TOOLTIP_COS = "Vrne kosinus kota v stopinjah (ne radianih).";
Blockly.Msg.MATH_TRIG_TOOLTIP_SIN = "Vrne sinus kota v stopinjah (ne radianih).";
Blockly.Msg.MATH_TRIG_TOOLTIP_TAN = "Vrne tangens kota v stopinjah (ne radianih).";
Blockly.Msg.ME = "Jaz";
Blockly.Msg.NEW_VARIABLE = "Nova spremenljivka...";
Blockly.Msg.NEW_VARIABLE_TITLE = "Ime nove spremenljivke:";
Blockly.Msg.ORDINAL_NUMBER_SUFFIX = "";  // untranslated
Blockly.Msg.PROCEDURES_ALLOW_STATEMENTS = "dovoli korake";
Blockly.Msg.PROCEDURES_BEFORE_PARAMS = "s/z:";
Blockly.Msg.PROCEDURES_CALLNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Subroutine";
Blockly.Msg.PROCEDURES_CALLNORETURN_TOOLTIP = "Izvede uporabniško funkcijo '%1'.";
Blockly.Msg.PROCEDURES_CALLRETURN_HELPURL = "https://en.wikipedia.org/wiki/Subroutine";
Blockly.Msg.PROCEDURES_CALLRETURN_TOOLTIP = "Izvede uporabniško funkcijo '%1' in uporabi njen izhod.";
Blockly.Msg.PROCEDURES_CALL_BEFORE_PARAMS = "s/z:";
Blockly.Msg.PROCEDURES_CREATE_DO = "Ustvari '%1'";
Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT = "Opišite funkcijo ...";
Blockly.Msg.PROCEDURES_DEFNORETURN_DO = "";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE = "nekaj";
Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE = "izvedi";
Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP = "Ustvari funkcijo brez izhoda.";
Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";  // untranslated
Blockly.Msg.PROCEDURES_DEFRETURN_RETURN = "vrni";
Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP = "Ustvari funkcijo z izhodom.";
Blockly.Msg.PROCEDURES_DEF_DUPLICATE_WARNING = "Pozor: Ta funkcija ima podvojene parametre.";
Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF = "Označi definicijo funkcije";
Blockly.Msg.PROCEDURES_IFRETURN_HELPURL = "http://c2.com/cgi/wiki?GuardClause";  // untranslated
Blockly.Msg.PROCEDURES_IFRETURN_TOOLTIP = "Če je vrednost resnična, vrne drugo vrednost.";
Blockly.Msg.PROCEDURES_IFRETURN_WARNING = "Pozor: To kocko lahko uporabiš samo znotraj definicije funkcije.";
Blockly.Msg.PROCEDURES_MUTATORARG_TITLE = "ime vnosa:";
Blockly.Msg.PROCEDURES_MUTATORARG_TOOLTIP = "Funkciji doda vnos.";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TITLE = "vnosi";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TOOLTIP = "Doda, odstrani ali spremeni vrstni red vnosov te funkcije.";
Blockly.Msg.REDO = "Redo";  // untranslated
Blockly.Msg.REMOVE_COMMENT = "Odstrani komentar";
Blockly.Msg.RENAME_VARIABLE = "Preimenuj spremenljivko...";
Blockly.Msg.RENAME_VARIABLE_TITLE = "Preimenuj vse spremenljivke '%1' v:";
Blockly.Msg.TEXT_APPEND_APPENDTEXT = "dodaj besedilo";
Blockly.Msg.TEXT_APPEND_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_APPEND_TO = "k";
Blockly.Msg.TEXT_APPEND_TOOLTIP = "Doda besedilo k spremenljivki '%1'.";
Blockly.Msg.TEXT_CHANGECASE_HELPURL = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_LOWERCASE = "v male črke";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_TITLECASE = "v Velike Začetnice";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_UPPERCASE = "v VELIKE ČRKE";
Blockly.Msg.TEXT_CHANGECASE_TOOLTIP = "Vrne kopijo besedila v drugi obliki.";
Blockly.Msg.TEXT_CHARAT_FIRST = "vrni prvo črko";
Blockly.Msg.TEXT_CHARAT_FROM_END = "vrni črko št. od konca";
Blockly.Msg.TEXT_CHARAT_FROM_START = "vrni črko št.";
Blockly.Msg.TEXT_CHARAT_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
Blockly.Msg.TEXT_CHARAT_INPUT_INTEXT = "iz besedila";
Blockly.Msg.TEXT_CHARAT_LAST = "vrni zadnjo črko";
Blockly.Msg.TEXT_CHARAT_RANDOM = "vrni naključno črko";
Blockly.Msg.TEXT_CHARAT_TAIL = "";  // untranslated
Blockly.Msg.TEXT_CHARAT_TOOLTIP = "Vrne črko na določenem mestu v besedilu.";
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TOOLTIP = "Doda element k besedilu.";
Blockly.Msg.TEXT_CREATE_JOIN_TITLE_JOIN = "združi";
Blockly.Msg.TEXT_CREATE_JOIN_TOOLTIP = "Doda, odstrani ali spremeni vrstni red elementov tega besedila.";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_END = "do črke št. od konca";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_START = "do črke št.";
Blockly.Msg.TEXT_GET_SUBSTRING_END_LAST = "do zadnje črke";
Blockly.Msg.TEXT_GET_SUBSTRING_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_INPUT_IN_TEXT = "iz besedila";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FIRST = "vrni del od prve črke";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_END = "vrni del od črke št. od konca";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_START = "vrni del od črke št.";
Blockly.Msg.TEXT_GET_SUBSTRING_TAIL = "";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_TOOLTIP = "Vrne določen del besedila.";
Blockly.Msg.TEXT_INDEXOF_HELPURL = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
Blockly.Msg.TEXT_INDEXOF_INPUT_INTEXT = "v besedilu";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_FIRST = "najdi prvo pojavitev besedila";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_LAST = "najdi zadnjo pojavitev besedila";
Blockly.Msg.TEXT_INDEXOF_TAIL = "";  // untranslated
Blockly.Msg.TEXT_INDEXOF_TOOLTIP = "Vrne mesto (indeks) prve/zadnje pojavitve drugega besedila v prvem besedilu. Če besedila ne najde, vrne 0.";
Blockly.Msg.TEXT_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
Blockly.Msg.TEXT_ISEMPTY_TITLE = "%1 je prazno";
Blockly.Msg.TEXT_ISEMPTY_TOOLTIP = "Vrne resnično, če je določeno besedilo prazno.";
Blockly.Msg.TEXT_JOIN_HELPURL = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
Blockly.Msg.TEXT_JOIN_TITLE_CREATEWITH = "ustvari besedilo iz";
Blockly.Msg.TEXT_JOIN_TOOLTIP = "Ustvari besedilo tako, da združi poljubno število elementov.";
Blockly.Msg.TEXT_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_LENGTH_TITLE = "dolžina %1";
Blockly.Msg.TEXT_LENGTH_TOOLTIP = "Vrne število črk oz. znakov (vključno s presledki) v določenem besedilu.";
Blockly.Msg.TEXT_PRINT_HELPURL = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
Blockly.Msg.TEXT_PRINT_TITLE = "izpiši %1";
Blockly.Msg.TEXT_PRINT_TOOLTIP = "Izpiše določeno besedilo, število ali drugo vrednost.";
Blockly.Msg.TEXT_PROMPT_HELPURL = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
Blockly.Msg.TEXT_PROMPT_TOOLTIP_NUMBER = "Vpraša uporabnika za vnos števila.";
Blockly.Msg.TEXT_PROMPT_TOOLTIP_TEXT = "Vpraša uporabnika za vnos besedila.";
Blockly.Msg.TEXT_PROMPT_TYPE_NUMBER = "vprašaj za število s sporočilom";
Blockly.Msg.TEXT_PROMPT_TYPE_TEXT = "vprašaj za besedilo s sporočilom";
Blockly.Msg.TEXT_TEXT_HELPURL = "https://en.wikipedia.org/wiki/String_(computer_science)";
Blockly.Msg.TEXT_TEXT_TOOLTIP = "Črka, beseda ali vrstica besedila.";
Blockly.Msg.TEXT_TRIM_HELPURL = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
Blockly.Msg.TEXT_TRIM_OPERATOR_BOTH = "odstrani presledke z obeh strani";
Blockly.Msg.TEXT_TRIM_OPERATOR_LEFT = "odstrani presledke z leve strani";
Blockly.Msg.TEXT_TRIM_OPERATOR_RIGHT = "odstrani presledke z desne strani";
Blockly.Msg.TEXT_TRIM_TOOLTIP = "Vrne kopijo besedila z odstranjenimi presledki z ene ali obeh strani.";
Blockly.Msg.TODAY = "Danes";
Blockly.Msg.UNDO = "Undo";  // untranslated
Blockly.Msg.VARIABLES_DEFAULT_NAME = "element";
Blockly.Msg.VARIABLES_GET_CREATE_SET = "Ustvari 'nastavi %1'";
Blockly.Msg.VARIABLES_GET_HELPURL = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
Blockly.Msg.VARIABLES_GET_TOOLTIP = "Vrne vrednost spremenljivke.";
Blockly.Msg.VARIABLES_SET = "nastavi %1 na %2";
Blockly.Msg.VARIABLES_SET_CREATE_GET = "Ustvari 'vrni %1'";
Blockly.Msg.VARIABLES_SET_HELPURL = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
Blockly.Msg.VARIABLES_SET_TOOLTIP = "Nastavi, da je vrednost spremenljivke enaka vnosu.";
Blockly.Msg.PROCEDURES_DEFRETURN_TITLE = Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE;
Blockly.Msg.CONTROLS_IF_IF_TITLE_IF = Blockly.Msg.CONTROLS_IF_MSG_IF;
Blockly.Msg.CONTROLS_WHILEUNTIL_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_MSG_THEN = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_ELSE_TITLE_ELSE = Blockly.Msg.CONTROLS_IF_MSG_ELSE;
Blockly.Msg.PROCEDURES_DEFRETURN_PROCEDURE = Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE;
Blockly.Msg.LISTS_GET_SUBLIST_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.LISTS_GET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.MATH_CHANGE_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.PROCEDURES_DEFRETURN_DO = Blockly.Msg.PROCEDURES_DEFNORETURN_DO;
Blockly.Msg.CONTROLS_IF_ELSEIF_TITLE_ELSEIF = Blockly.Msg.CONTROLS_IF_MSG_ELSEIF;
Blockly.Msg.LISTS_GET_INDEX_HELPURL = Blockly.Msg.LISTS_INDEX_OF_HELPURL;
Blockly.Msg.CONTROLS_FOREACH_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_SET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.CONTROLS_FOR_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TITLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.LISTS_INDEX_OF_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT = Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT;

// Ardublockly strings
Blockly.Msg.ARD_ANALOGREAD = "read analog pin#";  // untranslated
Blockly.Msg.ARD_ANALOGREAD_TIP = "Return value between 0 and 1024";  // untranslated
Blockly.Msg.ARD_ANALOGWRITE = "set analog pin#";  // untranslated
Blockly.Msg.ARD_ANALOGWRITE_TIP = "Write analog value between 0 and 255 to a specific PWM Port";  // untranslated
Blockly.Msg.ARD_BUILTIN_LED = "set built-in LED";  // untranslated
Blockly.Msg.ARD_BUILTIN_LED_TIP = "Light on or off for the built-in LED of the Arduino";  // untranslated
Blockly.Msg.ARD_COMPONENT_WARN1 = "A %1 configuration block with the same %2 name must be added to use this block!";  // untranslated
Blockly.Msg.ARD_DEFINE = "Define";  // untranslated
Blockly.Msg.ARD_DIGITALREAD = "read digital pin#";  // untranslated
Blockly.Msg.ARD_DIGITALREAD_TIP = "Read digital value on a pin: HIGH or LOW";  // untranslated
Blockly.Msg.ARD_DIGITALWRITE = "set digitial pin#";  // untranslated
Blockly.Msg.ARD_DIGITALWRITE_TIP = "Write digital value HIGH or LOW to a specific Port";  // untranslated
Blockly.Msg.ARD_FUN_RUN_LOOP = "Arduino loop forever:";  // untranslated
Blockly.Msg.ARD_FUN_RUN_SETUP = "Arduino run first:";  // untranslated
Blockly.Msg.ARD_FUN_RUN_TIP = "Defines the Arduino setup() and loop() functions.";  // untranslated
Blockly.Msg.ARD_HIGH = "HIGH";  // untranslated
Blockly.Msg.ARD_HIGHLOW_TIP = "Set a pin state logic High or Low.";  // untranslated
Blockly.Msg.ARD_LOW = "LOW";  // untranslated
Blockly.Msg.ARD_MAP = "Map";  // untranslated
Blockly.Msg.ARD_MAP_TIP = "Re-maps a number from [0-1024] to another.";  // untranslated
Blockly.Msg.ARD_MAP_VAL = "value to [0-";  // untranslated
Blockly.Msg.ARD_NOTONE = "Turn off tone on pin #";  // untranslated
Blockly.Msg.ARD_NOTONE_PIN = "No tone PIN#";  // untranslated
Blockly.Msg.ARD_NOTONE_PIN_TIP = "Stop generating a tone on a pin";  // untranslated
Blockly.Msg.ARD_NOTONE_TIP = "Turns the tone off on the selected pin";  // untranslated
Blockly.Msg.ARD_PIN_WARN1 = "Pin %1 is needed for %2 as pin %3. Already used as %4.";  // untranslated
Blockly.Msg.ARD_PULSETIMEOUT_TIP = "Measures the duration of a pulse on the selected pin, if it is within the time-out in microseconds.";  // untranslated
Blockly.Msg.ARD_PULSE_READ = "measure %1 pulse on pin #%2";  // untranslated
Blockly.Msg.ARD_PULSE_READ_TIMEOUT = "measure %1 pulse on pin #%2 (timeout after %3 μs)";  // untranslated
Blockly.Msg.ARD_PULSE_TIP = "Measures the duration of a pulse on the selected pin.";  // untranslated
Blockly.Msg.ARD_SERIAL_BPS = "bps";  // untranslated
Blockly.Msg.ARD_SERIAL_PRINT = "print";  // untranslated
Blockly.Msg.ARD_SERIAL_PRINT_NEWLINE = "add new line";  // untranslated
Blockly.Msg.ARD_SERIAL_PRINT_TIP = "Prints data to the console/serial port as human-readable ASCII text.";  // untranslated
Blockly.Msg.ARD_SERIAL_PRINT_WARN = "A setup block for %1 must be added to the workspace to use this block!";  // untranslated
Blockly.Msg.ARD_SERIAL_SETUP = "Setup";  // untranslated
Blockly.Msg.ARD_SERIAL_SETUP_TIP = "Selects the speed for a specific Serial peripheral";  // untranslated
Blockly.Msg.ARD_SERIAL_SPEED = ":  speed to";  // untranslated
Blockly.Msg.ARD_SERVO_READ = "read SERVO from PIN#";  // untranslated
Blockly.Msg.ARD_SERVO_READ_TIP = "Read a Servo angle";  // untranslated
Blockly.Msg.ARD_SERVO_WRITE = "set SERVO from Pin";  // untranslated
Blockly.Msg.ARD_SERVO_WRITE_DEG_180 = "Degrees (0~180)";  // untranslated
Blockly.Msg.ARD_SERVO_WRITE_TIP = "Set a Servo to an specified angle";  // untranslated
Blockly.Msg.ARD_SERVO_WRITE_TO = "to";  // untranslated
Blockly.Msg.ARD_SETTONE = "Set tone on pin #";  // untranslated
Blockly.Msg.ARD_SPI_SETUP = "Setup";  // untranslated
Blockly.Msg.ARD_SPI_SETUP_CONF = "configuration:";  // untranslated
Blockly.Msg.ARD_SPI_SETUP_DIVIDE = "clock divide";  // untranslated
Blockly.Msg.ARD_SPI_SETUP_LSBFIRST = "LSBFIRST";  // untranslated
Blockly.Msg.ARD_SPI_SETUP_MODE = "SPI mode (idle - edge)";  // untranslated
Blockly.Msg.ARD_SPI_SETUP_MODE0 = "0 (Low - Falling)";  // untranslated
Blockly.Msg.ARD_SPI_SETUP_MODE1 = "1 (Low - Rising)";  // untranslated
Blockly.Msg.ARD_SPI_SETUP_MODE2 = "2 (High - Falling)";  // untranslated
Blockly.Msg.ARD_SPI_SETUP_MODE3 = "3 (High - Rising)";  // untranslated
Blockly.Msg.ARD_SPI_SETUP_MSBFIRST = "MSBFIRST";  // untranslated
Blockly.Msg.ARD_SPI_SETUP_SHIFT = "data shift";  // untranslated
Blockly.Msg.ARD_SPI_SETUP_TIP = "Configures the SPI peripheral.";  // untranslated
Blockly.Msg.ARD_SPI_TRANSRETURN_TIP = "Send a SPI message to an specified slave device and get data back.";  // untranslated
Blockly.Msg.ARD_SPI_TRANS_NONE = "none";  // untranslated
Blockly.Msg.ARD_SPI_TRANS_SLAVE = "to slave pin";  // untranslated
Blockly.Msg.ARD_SPI_TRANS_TIP = "Send a SPI message to an specified slave device.";  // untranslated
Blockly.Msg.ARD_SPI_TRANS_VAL = "transfer";  // untranslated
Blockly.Msg.ARD_SPI_TRANS_WARN1 = "A setup block for %1 must be added to the workspace to use this block!";  // untranslated
Blockly.Msg.ARD_SPI_TRANS_WARN2 = "Old pin value %1 is no longer available.";  // untranslated
Blockly.Msg.ARD_STEPPER_COMPONENT = "stepper";  // untranslated
Blockly.Msg.ARD_STEPPER_DEFAULT_NAME = "MyStepper";  // untranslated
Blockly.Msg.ARD_STEPPER_FOUR_PINS = "4";  // untranslated
Blockly.Msg.ARD_STEPPER_MOTOR = "stepper motor:";  // untranslated
Blockly.Msg.ARD_STEPPER_NUMBER_OF_PINS = "Number of pins";  // untranslated
Blockly.Msg.ARD_STEPPER_PIN1 = "pin1#";  // untranslated
Blockly.Msg.ARD_STEPPER_PIN2 = "pin2#";  // untranslated
Blockly.Msg.ARD_STEPPER_PIN3 = "pin3#";  // untranslated
Blockly.Msg.ARD_STEPPER_PIN4 = "pin4#";  // untranslated
Blockly.Msg.ARD_STEPPER_REVOLVS = "how many steps per revolution";  // untranslated
Blockly.Msg.ARD_STEPPER_SETUP = "Setup stepper motor";  // untranslated
Blockly.Msg.ARD_STEPPER_SETUP_TIP = "Configures a stepper motor pinout and other settings.";  // untranslated
Blockly.Msg.ARD_STEPPER_SPEED = "set speed (rpm) to";  // untranslated
Blockly.Msg.ARD_STEPPER_STEP = "move stepper";  // untranslated
Blockly.Msg.ARD_STEPPER_STEPS = "steps";  // untranslated
Blockly.Msg.ARD_STEPPER_STEP_TIP = "Turns the stepper motor a specific number of steps.";  // untranslated
Blockly.Msg.ARD_STEPPER_TWO_PINS = "2";  // untranslated
Blockly.Msg.ARD_TIME_DELAY = "wait";  // untranslated
Blockly.Msg.ARD_TIME_DELAY_MICROS = "microseconds";  // untranslated
Blockly.Msg.ARD_TIME_DELAY_MICRO_TIP = "Wait specific time in microseconds";  // untranslated
Blockly.Msg.ARD_TIME_DELAY_TIP = "Wait specific time in milliseconds";  // untranslated
Blockly.Msg.ARD_TIME_INF = "wait forever (end program)";  // untranslated
Blockly.Msg.ARD_TIME_INF_TIP = "Wait indefinitely, stopping the program.";  // untranslated
Blockly.Msg.ARD_TIME_MICROS = "current elapsed Time (microseconds)";  // untranslated
Blockly.Msg.ARD_TIME_MICROS_TIP = "Returns the number of microseconds since the Arduino board began running the current program. Has to be stored in a positive long integer";  // untranslated
Blockly.Msg.ARD_TIME_MILLIS = "current elapsed Time (milliseconds)";  // untranslated
Blockly.Msg.ARD_TIME_MILLIS_TIP = "Returns the number of milliseconds since the Arduino board began running the current program. Has to be stored in a positive long integer";  // untranslated
Blockly.Msg.ARD_TIME_MS = "milliseconds";  // untranslated
Blockly.Msg.ARD_TONEFREQ = "at frequency";  // untranslated
Blockly.Msg.ARD_TONE_FREQ = "frequency";  // untranslated
Blockly.Msg.ARD_TONE_PIN = "Tone PIN#";  // untranslated
Blockly.Msg.ARD_TONE_PIN_TIP = "Generate audio tones on a pin";  // untranslated
Blockly.Msg.ARD_TONE_TIP = "Sets tone on pin to specified frequency within range 31 - 65535";  // untranslated
Blockly.Msg.ARD_TONE_WARNING = "Frequency must be in range 31 - 65535";  // untranslated
Blockly.Msg.ARD_TYPE_ARRAY = "Array";  // untranslated
Blockly.Msg.ARD_TYPE_BOOL = "Boolean";  // untranslated
Blockly.Msg.ARD_TYPE_CHAR = "Character";  // untranslated
Blockly.Msg.ARD_TYPE_CHILDBLOCKMISSING = "ChildBlockMissing";  // untranslated
Blockly.Msg.ARD_TYPE_DECIMAL = "Decimal";  // untranslated
Blockly.Msg.ARD_TYPE_LONG = "Large Number";  // untranslated
Blockly.Msg.ARD_TYPE_NULL = "Null";  // untranslated
Blockly.Msg.ARD_TYPE_NUMBER = "Number";  // untranslated
Blockly.Msg.ARD_TYPE_SHORT = "Short Number";  // untranslated
Blockly.Msg.ARD_TYPE_TEXT = "Text";  // untranslated
Blockly.Msg.ARD_TYPE_UNDEF = "Undefined";  // untranslated
Blockly.Msg.ARD_VAR_AS = "as";  // untranslated
Blockly.Msg.ARD_VAR_AS_TIP = "Sets a value to a specific type";  // untranslated
Blockly.Msg.ARD_WRITE_TO = "to";  // untranslated
Blockly.Msg.NEW_INSTANCE = "New instance...";  // untranslated
Blockly.Msg.NEW_INSTANCE_TITLE = "New instance name:";  // untranslated
Blockly.Msg.RENAME_INSTANCE = "Rename instance...";  // untranslated
Blockly.Msg.RENAME_INSTANCE_TITLE = "Rename all '%1' instances to:";  // untranslated
Blockly.Msg.cases_add = "Fall";  // untranslated
Blockly.Msg.cases_condition = "Fall (Variable) = ";  // untranslated
Blockly.Msg.cases_do = "Führe aus";  // untranslated
Blockly.Msg.cases_switch = "Variable";  // untranslated
Blockly.Msg.mcubase_SD_COMPONENT = "SD-Block";  // untranslated
Blockly.Msg.mcubase_basic_blue = "Blau";  // untranslated
Blockly.Msg.mcubase_basic_green = "Grün";  // untranslated
Blockly.Msg.mcubase_basic_red = "Rot";  // untranslated
Blockly.Msg.mcubase_basic_state = "Status";  // untranslated
Blockly.Msg.mcubase_bmx055_accelerometer = "Beschleunigungs Sensor";  // untranslated
Blockly.Msg.mcubase_bmx055_accelerometer_tip = "Lage Sensor";  // untranslated
Blockly.Msg.mcubase_bmx055_compass = "Lage Sensor";  // untranslated
Blockly.Msg.mcubase_bmx055_compass_tip = "Lage Sensor";  // untranslated
Blockly.Msg.mcubase_bmx055_gyroscope = "Lage Sensor";  // untranslated
Blockly.Msg.mcubase_bmx055_gyroscope_tip = "Lage Sensor";  // untranslated
Blockly.Msg.mcubase_bmx055_x = "X-Richtung";  // untranslated
Blockly.Msg.mcubase_bmx055_y = "Y-Richtung";  // untranslated
Blockly.Msg.mcubase_button = "Drucktaster";  // untranslated
Blockly.Msg.mcubase_button_tip = "Drucktaster";  // untranslated
Blockly.Msg.mcubase_display_beginDisplay = "Display initialisieren";  // untranslated
Blockly.Msg.mcubase_display_black = "Schwarz";  // untranslated
Blockly.Msg.mcubase_display_clearDisplay = "Display löschen";  // untranslated
Blockly.Msg.mcubase_display_clearDisplay_tip = "Löscht den Inhalt des Displays";  // untranslated
Blockly.Msg.mcubase_display_color = "Schriftfarbe";  // untranslated
Blockly.Msg.mcubase_display_plotDisplay = "Diagram zeichnen";  // untranslated
Blockly.Msg.mcubase_display_plotTimeFrame = "Zeitabschnitt";  // untranslated
Blockly.Msg.mcubase_display_plotXLabel = "X-Achsen Beschriftung";  // untranslated
Blockly.Msg.mcubase_display_plotXRange1 = "X-Wertebereich Anfang";  // untranslated
Blockly.Msg.mcubase_display_plotXRange2 = "X-Wertebereich Ende";  // untranslated
Blockly.Msg.mcubase_display_plotXTick = "X-Linienabstand";  // untranslated
Blockly.Msg.mcubase_display_plotYLabel = "Y-Achsen Beschriftung";  // untranslated
Blockly.Msg.mcubase_display_plotYRange1 = "Y-Wertebereich Anfang";  // untranslated
Blockly.Msg.mcubase_display_plotYRange2 = "Y-Wertebereich Ende";  // untranslated
Blockly.Msg.mcubase_display_plotYTick = "Y-Linienabstand";  // untranslated
Blockly.Msg.mcubase_display_printDisplay = "";  // untranslated
Blockly.Msg.mcubase_display_printDisplay_tip = "zeigt Wert auf dem Display an.";  // untranslated
Blockly.Msg.mcubase_display_printDisplay_value = "Wert";  // untranslated
Blockly.Msg.mcubase_display_printDisplay_x = "x";  // untranslated
Blockly.Msg.mcubase_display_printDisplay_y = "y";  // untranslated
Blockly.Msg.mcubase_display_setSize = "Schriftgröße";  // untranslated
Blockly.Msg.mcubase_display_setSize_tip = "Ändere die Schriftgröße auf einen Wert zwischen 1 und 10.";  // untranslated
Blockly.Msg.mcubase_display_show = "Zeige auf dem Display";  // untranslated
Blockly.Msg.mcubase_display_show_tip = "Zeigt den Nachfolgenden Inhalt auf dem Bildschirm";  // untranslated
Blockly.Msg.mcubase_display_white = "Weiß";  // untranslated
Blockly.Msg.mcubase_foto = "Fotowiderstand";  // untranslated
Blockly.Msg.mcubase_foto_tip = "Fotowiderstand";  // untranslated
Blockly.Msg.mcubase_gps_alt = "Höhe über NN in m";  // untranslated
Blockly.Msg.mcubase_gps_getValues = "GPS Modul";  // untranslated
Blockly.Msg.mcubase_gps_getValues_tip = "ruft das GPS Signal ab";  // untranslated
Blockly.Msg.mcubase_gps_lat = "Breitengrad";  // untranslated
Blockly.Msg.mcubase_gps_lng = "Längengrad";  // untranslated
Blockly.Msg.mcubase_gps_speed = "Geschwindigkeit in km/h";  // untranslated
Blockly.Msg.mcubase_hum = "Luftfeuchtigkeit in %";  // untranslated
Blockly.Msg.mcubase_hum_tip = "Luftfeuchtigkeit";  // untranslated
Blockly.Msg.mcubase_interval = "ms";  // untranslated
Blockly.Msg.mcubase_interval_timer = "Messintervall";  // untranslated
Blockly.Msg.mcubase_interval_timer_tip = "Intervall";  // untranslated
Blockly.Msg.mcubase_ir = "Infrarot Abstandssensor";  // untranslated
Blockly.Msg.mcubase_ir_tip = "Infrarot Abstandssensor";  // untranslated
Blockly.Msg.mcubase_led = "LED an digital";  // untranslated
Blockly.Msg.mcubase_led_tip = "Einfache LED. Beim Anschluss sollte immer ein Vorwiderstand verwendet werden";  // untranslated
Blockly.Msg.mcubase_light = "Beleuchtungsstärke in Lux";  // untranslated
Blockly.Msg.mcubase_lux = "Helligkeitssensor";  // untranslated
Blockly.Msg.mcubase_lux_tip = "Helligkeitssensor";  // untranslated
Blockly.Msg.mcubase_off = "Aus";  // untranslated
Blockly.Msg.mcubase_on = "Ein";  // untranslated
Blockly.Msg.mcubase_osem_connection = "Verbinde mit openSenseMap";  // untranslated
Blockly.Msg.mcubase_osem_connection_tip = "stellt eine WLAN verbindung her";  // untranslated
Blockly.Msg.mcubase_output_filename = "Daten";  // untranslated
Blockly.Msg.mcubase_output_format = "Format:";  // untranslated
Blockly.Msg.mcubase_output_linebreak = "Zeilenumbruch";  // untranslated
Blockly.Msg.mcubase_output_networkid = "NetzwerkID";  // untranslated
Blockly.Msg.mcubase_output_password = "Passwort";  // untranslated
Blockly.Msg.mcubase_output_safetosd = "Auf SD Karte speichern";  // untranslated
Blockly.Msg.mcubase_output_safetosd_tip = "Speichert Messwerte auf SD Karte";  // untranslated
Blockly.Msg.mcubase_output_serialprint = "Auf Kommandozeile ausgeben";  // untranslated
Blockly.Msg.mcubase_output_timestamp = "Zeitstempel";  // untranslated
Blockly.Msg.mcubase_piezo = "Piezo an digital";  // untranslated
Blockly.Msg.mcubase_piezo_tip = "Piezo an digital PIN. Beim Anschluss sollte immer ein Vorwiderstand verwendet werden";  // untranslated
Blockly.Msg.mcubase_poti = "Potenziometer";  // untranslated
Blockly.Msg.mcubase_poti_tip = "Potenziometer";  // untranslated
Blockly.Msg.mcubase_pressure = "Luftdruck in Pa";  // untranslated
Blockly.Msg.mcubase_pressure_dimension = "Luftdruck in Pa";  // untranslated
Blockly.Msg.mcubase_pressure_sensor = "Luftdruck/Temperatur Sensor (BMP280)";  // untranslated
Blockly.Msg.mcubase_pressure_tip = "Luftdrucksensor";  // untranslated
Blockly.Msg.mcubase_rgb_led = "RGB-LED";  // untranslated
Blockly.Msg.mcubase_rgb_led_tip = "RGB-LED benötigt einen digitalen Pin und eine Stromkreis ";  // untranslated
Blockly.Msg.mcubase_sd_create_file = "Erstelle Datei auf SD-Karte";  // untranslated
Blockly.Msg.mcubase_sd_filename = "Daten";  // untranslated
Blockly.Msg.mcubase_sd_open_file = "Öffne eine Datei auf der SD-Karte";  // untranslated
Blockly.Msg.mcubase_sd_write_file = " Schreibe Daten auf SD-Karte";  // untranslated
Blockly.Msg.mcubase_sds011 = "Feinstaubsensor";  // untranslated
Blockly.Msg.mcubase_sds011_dimension = "in µg/m³ an";  // untranslated
Blockly.Msg.mcubase_sds011_pm10 = "PM10";  // untranslated
Blockly.Msg.mcubase_sds011_pm25 = "PM2.5";  // untranslated
Blockly.Msg.mcubase_sds011_serial1 = "Serial1";  // untranslated
Blockly.Msg.mcubase_sds011_serial2 = "Serial2";  // untranslated
Blockly.Msg.mcubase_sds011_tip = "Misst die Feinstaubbelastung";  // untranslated
Blockly.Msg.mcubase_send_mobile_to_osem = "Sende Messwert und Standort";  // untranslated
Blockly.Msg.mcubase_send_mobile_to_osem_tip = "Sende Messwert und Standort an die openSenseMap";  // untranslated
Blockly.Msg.mcubase_send_to_osem = "sende Messwert an die openSenseMap";  // untranslated
Blockly.Msg.mcubase_send_to_osem_tip = "sende Messwert an";  // untranslated
Blockly.Msg.mcubase_sensor = "Sensoren";  // untranslated
Blockly.Msg.mcubase_serial_tip = "Gibt Messwerte oder Daten auf dem Seriellen Monitor der Arduino IDE aus. Praktisch um ohne Display zu arbeiten";  // untranslated
Blockly.Msg.mcubase_sound = "Geräuschsensor";  // untranslated
Blockly.Msg.mcubase_sound_tip = "Geräuschsensor";  // untranslated
Blockly.Msg.mcubase_temp = "Temperatur in °C";  // untranslated
Blockly.Msg.mcubase_temp_hum = "Temperatur/Luftfeuchtigkeitssensor (HDC1080)";  // untranslated
Blockly.Msg.mcubase_temp_hum_tip = "Sensor misst Temperatur und Luftfeuchtigkeit";  // untranslated
Blockly.Msg.mcubase_ultrasonic = "Ultraschall Abstandssensor an Port";  // untranslated
Blockly.Msg.mcubase_ultrasonic_port_A = "A";  // untranslated
Blockly.Msg.mcubase_ultrasonic_port_B = "B";  // untranslated
Blockly.Msg.mcubase_ultrasonic_port_C = "C";  // untranslated
Blockly.Msg.mcubase_ultrasonic_tip = "Ultraschall Abstandssensor";  // untranslated
Blockly.Msg.mcubase_uv = "UV-Intensität in µW/cm²";  // untranslated
Blockly.Msg.mcubase_uv_light = "Licht Sichtbar + UV Sensor";  // untranslated
Blockly.Msg.mcubase_uv_light_tip = "Sensor misst UV-Licht oder Die Helligkeit";  // untranslated
Blockly.Msg.mcubase_value = "Messwert:";  // untranslated
Blockly.Msg.mcubase_wifi_tip = "stellt eine WLAN verbindung her";  // untranslated
Blockly.Msg.senseBox_SD_COMPONENT = "SD-Block";  // untranslated
Blockly.Msg.senseBox_basic_blue = "Blau";  // untranslated
Blockly.Msg.senseBox_basic_green = "Grün";  // untranslated
Blockly.Msg.senseBox_basic_red = "Rot";  // untranslated
Blockly.Msg.senseBox_basic_state = "Status";  // untranslated
Blockly.Msg.senseBox_bmx055_accelerometer = "Beschleunigungs Sensor";  // untranslated
Blockly.Msg.senseBox_bmx055_accelerometer_tip = "Lage Sensor";  // untranslated
Blockly.Msg.senseBox_bmx055_compass = "Lage Sensor";  // untranslated
Blockly.Msg.senseBox_bmx055_compass_tip = "Lage Sensor";  // untranslated
Blockly.Msg.senseBox_bmx055_gyroscope = "Lage Sensor";  // untranslated
Blockly.Msg.senseBox_bmx055_gyroscope_tip = "Lage Sensor";  // untranslated
Blockly.Msg.senseBox_bmx055_x = "X-Richtung";  // untranslated
Blockly.Msg.senseBox_bmx055_y = "Y-Richtung";  // untranslated
Blockly.Msg.senseBox_button = "Drucktaster";  // untranslated
Blockly.Msg.senseBox_button_tip = "Drucktaster";  // untranslated
Blockly.Msg.senseBox_display_beginDisplay = "Display initialisieren";  // untranslated
Blockly.Msg.senseBox_display_black = "Schwarz";  // untranslated
Blockly.Msg.senseBox_display_clearDisplay = "Display löschen";  // untranslated
Blockly.Msg.senseBox_display_clearDisplay_tip = "Löscht den Inhalt des Displays";  // untranslated
Blockly.Msg.senseBox_display_color = "Schriftfarbe";  // untranslated
Blockly.Msg.senseBox_display_plotDisplay = "Diagram zeichnen";  // untranslated
Blockly.Msg.senseBox_display_plotTimeFrame = "Zeitabschnitt";  // untranslated
Blockly.Msg.senseBox_display_plotXLabel = "X-Achsen Beschriftung";  // untranslated
Blockly.Msg.senseBox_display_plotXRange1 = "X-Wertebereich Anfang";  // untranslated
Blockly.Msg.senseBox_display_plotXRange2 = "X-Wertebereich Ende";  // untranslated
Blockly.Msg.senseBox_display_plotXTick = "X-Linienabstand";  // untranslated
Blockly.Msg.senseBox_display_plotYLabel = "Y-Achsen Beschriftung";  // untranslated
Blockly.Msg.senseBox_display_plotYRange1 = "Y-Wertebereich Anfang";  // untranslated
Blockly.Msg.senseBox_display_plotYRange2 = "Y-Wertebereich Ende";  // untranslated
Blockly.Msg.senseBox_display_plotYTick = "Y-Linienabstand";  // untranslated
Blockly.Msg.senseBox_display_printDisplay = "";  // untranslated
Blockly.Msg.senseBox_display_printDisplay_tip = "zeigt Wert auf dem Display an.";  // untranslated
Blockly.Msg.senseBox_display_printDisplay_value = "Wert";  // untranslated
Blockly.Msg.senseBox_display_printDisplay_x = "x";  // untranslated
Blockly.Msg.senseBox_display_printDisplay_y = "y";  // untranslated
Blockly.Msg.senseBox_display_setSize = "Schriftgröße";  // untranslated
Blockly.Msg.senseBox_display_setSize_tip = "Ändere die Schriftgröße auf einen Wert zwischen 1 und 10.";  // untranslated
Blockly.Msg.senseBox_display_white = "Weiß";  // untranslated
Blockly.Msg.senseBox_foto = "Fotowiderstand";  // untranslated
Blockly.Msg.senseBox_foto_tip = "Fotowiderstand";  // untranslated
Blockly.Msg.senseBox_gps_alt = "Höhe über NN in m";  // untranslated
Blockly.Msg.senseBox_gps_getValues = "GPS Modul";  // untranslated
Blockly.Msg.senseBox_gps_getValues_tip = "ruft das GPS Signal ab";  // untranslated
Blockly.Msg.senseBox_gps_lat = "Breitengrad";  // untranslated
Blockly.Msg.senseBox_gps_lng = "Längengrad";  // untranslated
Blockly.Msg.senseBox_gps_speed = "Geschwindigkeit in km/h";  // untranslated
Blockly.Msg.senseBox_hum = "Luftfeuchtigkeit in %";  // untranslated
Blockly.Msg.senseBox_hum_tip = "Luftfeuchtigkeit";  // untranslated
Blockly.Msg.senseBox_interval = "ms";  // untranslated
Blockly.Msg.senseBox_interval_timer = "Messintervall";  // untranslated
Blockly.Msg.senseBox_interval_timer_tip = "Intervall";  // untranslated
Blockly.Msg.senseBox_ir = "Infrarot Abstandssensor";  // untranslated
Blockly.Msg.senseBox_ir_tip = "Infrarot Abstandssensor";  // untranslated
Blockly.Msg.senseBox_led = "LED an digital";  // untranslated
Blockly.Msg.senseBox_led_tip = "Einfache LED. Beim Anschluss sollte immer ein Vorwiderstand verwendet werden";  // untranslated
Blockly.Msg.senseBox_light = "Beleuchtungsstärke in Lux";  // untranslated
Blockly.Msg.senseBox_lux = "Helligkeitssensor";  // untranslated
Blockly.Msg.senseBox_lux_tip = "Helligkeitssensor";  // untranslated
Blockly.Msg.senseBox_off = "Aus";  // untranslated
Blockly.Msg.senseBox_on = "Ein";  // untranslated
Blockly.Msg.senseBox_osem_connection = "Verbinde mit openSenseMap";  // untranslated
Blockly.Msg.senseBox_osem_connection_tip = "stellt eine WLAN verbindung her";  // untranslated
Blockly.Msg.senseBox_output_filename = "Daten";  // untranslated
Blockly.Msg.senseBox_output_format = "Format:";  // untranslated
Blockly.Msg.senseBox_output_linebreak = "Zeilenumbruch";  // untranslated
Blockly.Msg.senseBox_output_networkid = "NetzwerkID";  // untranslated
Blockly.Msg.senseBox_output_password = "Passwort";  // untranslated
Blockly.Msg.senseBox_output_safetosd = "Auf SD Karte speichern";  // untranslated
Blockly.Msg.senseBox_output_safetosd_tip = "Speichert Messwerte auf SD Karte";  // untranslated
Blockly.Msg.senseBox_output_serialprint = "Auf Kommandozeile ausgeben";  // untranslated
Blockly.Msg.senseBox_output_timestamp = "Zeitstempel";  // untranslated
Blockly.Msg.senseBox_piezo = "Piezo an digital";  // untranslated
Blockly.Msg.senseBox_piezo_tip = "Piezo an digital PIN. Beim Anschluss sollte immer ein Vorwiderstand verwendet werden";  // untranslated
Blockly.Msg.senseBox_poti = "Potenziometer";  // untranslated
Blockly.Msg.senseBox_poti_tip = "Potenziometer";  // untranslated
Blockly.Msg.senseBox_pressure = "Luftdruck in Pa";  // untranslated
Blockly.Msg.senseBox_pressure_dimension = "Luftdruck in Pa";  // untranslated
Blockly.Msg.senseBox_pressure_sensor = "Luftdruck/Temperatur Sensor (BMP280)";  // untranslated
Blockly.Msg.senseBox_pressure_tip = "Luftdrucksensor";  // untranslated
Blockly.Msg.senseBox_rgb_led = "RGB-LED";  // untranslated
Blockly.Msg.senseBox_rgb_led_tip = "RGB-LED benötigt einen digitalen Pin und eine Stromkreis ";  // untranslated
Blockly.Msg.senseBox_sd_create_file = "Erstelle Datei auf SD-Karte";  // untranslated
Blockly.Msg.senseBox_sd_open_file = "Öffne eine Datei auf der SD-Karte";  // untranslated
Blockly.Msg.senseBox_sd_write_file = " Schreibe Daten auf SD-Karte";  // untranslated
Blockly.Msg.senseBox_sds011 = "Feinstaubsensor";  // untranslated
Blockly.Msg.senseBox_sds011_dimension = "in µg/m³ an";  // untranslated
Blockly.Msg.senseBox_sds011_pm10 = "PM10";  // untranslated
Blockly.Msg.senseBox_sds011_pm25 = "PM2.5";  // untranslated
Blockly.Msg.senseBox_sds011_serial1 = "Serial1";  // untranslated
Blockly.Msg.senseBox_sds011_serial2 = "Serial2";  // untranslated
Blockly.Msg.senseBox_sds011_tip = "Misst die Feinstaubbelastung";  // untranslated
Blockly.Msg.senseBox_send_mobile_to_osem = "Sende Messwert und Standort";  // untranslated
Blockly.Msg.senseBox_send_mobile_to_osem_tip = "Sende Messwert und Standort an die openSenseMap";  // untranslated
Blockly.Msg.senseBox_send_to_osem = "sende Messwert an die openSenseMap";  // untranslated
Blockly.Msg.senseBox_send_to_osem_tip = "sende Messwert an";  // untranslated
Blockly.Msg.senseBox_sensor = "Sensoren";  // untranslated
Blockly.Msg.senseBox_serial_tip = "Gibt Messwerte oder Daten auf dem Seriellen Monitor der Arduino IDE aus. Praktisch um ohne Display zu arbeiten";  // untranslated
Blockly.Msg.senseBox_sound = "Geräuschsensor";  // untranslated
Blockly.Msg.senseBox_sound_tip = "Geräuschsensor";  // untranslated
Blockly.Msg.senseBox_temp = "Temperatur in °C";  // untranslated
Blockly.Msg.senseBox_temp_hum = "Temperatur/Luftfeuchtigkeitssensor (HDC1080)";  // untranslated
Blockly.Msg.senseBox_temp_hum_tip = "Sensor misst Temperatur und Luftfeuchtigkeit";  // untranslated
Blockly.Msg.senseBox_ultrasonic = "Ultraschall Abstandssensor an Port";  // untranslated
Blockly.Msg.senseBox_ultrasonic_port_A = "A";  // untranslated
Blockly.Msg.senseBox_ultrasonic_port_B = "B";  // untranslated
Blockly.Msg.senseBox_ultrasonic_port_C = "C";  // untranslated
Blockly.Msg.senseBox_ultrasonic_tip = "Ultraschall Abstandssensor";  // untranslated
Blockly.Msg.senseBox_uv = "UV-Intensität in µW/cm²";  // untranslated
Blockly.Msg.senseBox_uv_light = "Licht Sichtbar + UV Sensor";  // untranslated
Blockly.Msg.senseBox_uv_light_tip = "Sensor misst UV-Licht oder Die Helligkeit";  // untranslated
Blockly.Msg.senseBox_value = "Messwert:";  // untranslated
Blockly.Msg.senseBox_wifi_tip = "stellt eine WLAN verbindung her";  // untranslated
Blockly.Msg.sensebox_display_show = "Zeige auf dem Display";  // untranslated
Blockly.Msg.sensebox_display_show_tip = "Zeigt den Nachfolgenden Inhalt auf dem Bildschirm";  // untranslated
Blockly.Msg.sensebox_sd_filename = "Daten";  // untranslated
