// This file was automatically generated.  Do not modify.

'use strict';

goog.provide('Blockly.Msg.cs');

goog.require('Blockly.Msg');

Blockly.Msg.ADD_COMMENT = "Přidat komentář";
Blockly.Msg.AUTH = "Prosím udělte oprávnění této aplikaci aby jste mohli uložit a sdílet svou práci.";
Blockly.Msg.CHANGE_VALUE_TITLE = "Změnit hodnotu:";
Blockly.Msg.CHAT = "Psaním do tohoto políčka komunikujte se spolupracovníky!";
Blockly.Msg.CLEAN_UP = "Uspořádat bloky";
Blockly.Msg.COLLAPSE_ALL = "Sbalit bloky";
Blockly.Msg.COLLAPSE_BLOCK = "Sbalit blok";
Blockly.Msg.COLOUR_BLEND_COLOUR1 = "barva 1";
Blockly.Msg.COLOUR_BLEND_COLOUR2 = "barva 2";
Blockly.Msg.COLOUR_BLEND_HELPURL = "http://meyerweb.com/eric/tools/color-blend/";  // untranslated
Blockly.Msg.COLOUR_BLEND_RATIO = "poměr";
Blockly.Msg.COLOUR_BLEND_TITLE = "smíchat";
Blockly.Msg.COLOUR_BLEND_TOOLTIP = "Smíchá dvě barvy v daném poměru (0.0–1.0).";
Blockly.Msg.COLOUR_PICKER_HELPURL = "https://cs.wikipedia.org/wiki/Barva";
Blockly.Msg.COLOUR_PICKER_TOOLTIP = "Vyberte barvu z palety.";
Blockly.Msg.COLOUR_RANDOM_HELPURL = "http://randomcolour.com";  // untranslated
Blockly.Msg.COLOUR_RANDOM_TITLE = "náhodná barva";
Blockly.Msg.COLOUR_RANDOM_TOOLTIP = "Zvolte barvu náhodně.";
Blockly.Msg.COLOUR_RGB_BLUE = "modrá";
Blockly.Msg.COLOUR_RGB_GREEN = "zelená";
Blockly.Msg.COLOUR_RGB_HELPURL = "http://www.december.com/html/spec/colorper.html";  // untranslated
Blockly.Msg.COLOUR_RGB_RED = "červená";
Blockly.Msg.COLOUR_RGB_TITLE = "obarvěte barvou";
Blockly.Msg.COLOUR_RGB_TOOLTIP = "Vytvoř barvu se zadaným množstvím červené, zelené a modré.  Všechny hodnoty musí být mezi 0 a 100.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_HELPURL = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = "vyskočit ze smyčky";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = "pokračuj dalším opakováním smyčky";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = "Vyskoč z vnitřní smyčky.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = "Přeskoč zbytek této smyčky a pokračuj dalším opakováním.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_WARNING = "Upozornění: Tento blok může být použit pouze uvnitř smyčky.";
Blockly.Msg.CONTROLS_FOREACH_HELPURL = "https://github.com/google/blockly/wiki/Loops#for-each";  // untranslated
Blockly.Msg.CONTROLS_FOREACH_TITLE = "pro každou položku %1 v seznamu %2";
Blockly.Msg.CONTROLS_FOREACH_TOOLTIP = "Pro každou položku v seznamu nastavte do proměnné '%1' danou položku a proveďte nějaké operace.";
Blockly.Msg.CONTROLS_FOR_HELPURL = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
Blockly.Msg.CONTROLS_FOR_TITLE = "počítat s %1 od %2 do %3 po %4";
Blockly.Msg.CONTROLS_FOR_TOOLTIP = "Nechá proměnnou '%1' nabývat hodnot od počátečního do koncového čísla po daném přírůstku a provádí s ní příslušné bloky.";
Blockly.Msg.CONTROLS_IF_ELSEIF_TOOLTIP = "Přidat podmínku do \"pokud\" bloku.";
Blockly.Msg.CONTROLS_IF_ELSE_TOOLTIP = "Přidej konečnou podmínku zahrnující ostatní případy do bloku \"pokud\".";
Blockly.Msg.CONTROLS_IF_HELPURL = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
Blockly.Msg.CONTROLS_IF_IF_TOOLTIP = "Přidej, odstraň či uspořádej sekce k přenastavení tohoto bloku \"pokud\".";
Blockly.Msg.CONTROLS_IF_MSG_ELSE = "jinak";
Blockly.Msg.CONTROLS_IF_MSG_ELSEIF = "nebo pokud";
Blockly.Msg.CONTROLS_IF_MSG_IF = "pokud";
Blockly.Msg.CONTROLS_IF_TOOLTIP_1 = "Je-li hodnota pravda, proveď určité příkazy.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_2 = "Je-li hodnota pravda, proveď první blok příkazů.  V opačném případě proveď druhý blok příkazů.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_3 = "Je-li první hodnota pravdivá, proveď první blok příkazů. V opačném případě, je-li pravdivá druhá hodnota, proveď druhý blok příkazů.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_4 = "Je-li první hodnota pravda, proveď první blok příkazů.  Je-li druhá hodnota pravda, proveď druhý blok příkazů.  Pokud žádná hodnota není pravda, proveď poslední blok příkazů.";
Blockly.Msg.CONTROLS_REPEAT_HELPURL = "https://cs.wikipedia.org/wiki/Cyklus_pro";
Blockly.Msg.CONTROLS_REPEAT_INPUT_DO = "dělej";
Blockly.Msg.CONTROLS_REPEAT_TITLE = "opakuj %1 krát";
Blockly.Msg.CONTROLS_REPEAT_TOOLTIP = "Proveď určité příkazy několikrát.";
Blockly.Msg.CONTROLS_WHILEUNTIL_HELPURL = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = "opakovat dokud";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_WHILE = "opakovat když";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = "Dokud je hodnota nepravdivá, prováděj určité příkazy.";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = "Dokud je hodnota pravdivá, prováděj určité příkazy.";
Blockly.Msg.DELETE_ALL_BLOCKS = "Smazat všech %1 bloků?";
Blockly.Msg.DELETE_BLOCK = "Smazat blok";
Blockly.Msg.DELETE_X_BLOCKS = "Smazat %1 bloků";
Blockly.Msg.DISABLE_BLOCK = "Deaktivovat blok";
Blockly.Msg.DUPLICATE_BLOCK = "Duplikovat";
Blockly.Msg.ENABLE_BLOCK = "Povolit blok";
Blockly.Msg.EXPAND_ALL = "Rozbalit bloky";
Blockly.Msg.EXPAND_BLOCK = "Rozbalit blok";
Blockly.Msg.EXTERNAL_INPUTS = "vnější vstupy";
Blockly.Msg.HELP = "Nápověda";
Blockly.Msg.INLINE_INPUTS = "Vložené vstupy";
Blockly.Msg.LISTS_CREATE_EMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-empty-list";  // untranslated
Blockly.Msg.LISTS_CREATE_EMPTY_TITLE = "vytvořit prázdný seznam";
Blockly.Msg.LISTS_CREATE_EMPTY_TOOLTIP = "Vrátí seznam nulové délky, který neobsahuje žádné datové záznamy";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = "seznam";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TOOLTIP = "Přidat, odebrat nebo změnit pořadí oddílů tohoto seznamu bloku.";
Blockly.Msg.LISTS_CREATE_WITH_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg.LISTS_CREATE_WITH_INPUT_WITH = "vytvořit seznam s";
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TOOLTIP = "Přidat položku do seznamu.";
Blockly.Msg.LISTS_CREATE_WITH_TOOLTIP = "Vytvoř seznam s libovolným počtem položek.";
Blockly.Msg.LISTS_GET_INDEX_FIRST = "první";
Blockly.Msg.LISTS_GET_INDEX_FROM_END = "# od konce";
Blockly.Msg.LISTS_GET_INDEX_FROM_START = "#";
Blockly.Msg.LISTS_GET_INDEX_GET = "získat";
Blockly.Msg.LISTS_GET_INDEX_GET_REMOVE = "získat a odstranit";
Blockly.Msg.LISTS_GET_INDEX_LAST = "poslední";
Blockly.Msg.LISTS_GET_INDEX_RANDOM = "náhodné";
Blockly.Msg.LISTS_GET_INDEX_REMOVE = "odstranit";
Blockly.Msg.LISTS_GET_INDEX_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FIRST = "Vrátí první položku v seznamu.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_END = "Vrátí položku z určené pozice v seznamu.  #1 je poslední položka.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_START = "Vrátí položku z určené pozice v seznamu.  #1 je první položka.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_LAST = "Vrátí poslední položku v seznamu.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_RANDOM = "Vrátí náhodnou položku ze seznamu.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST = "Odstraní a vrátí první položku v seznamu.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_END = "Odstraní a vrátí položku z určené pozice v seznamu.  #1 je poslední položka.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_START = "Odstraní a vrátí položku z určené pozice v seznamu.  #1 je první položka.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST = "Odstraní a vrátí poslední položku v seznamu.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM = "Odstraní a vrátí náhodnou položku v seznamu.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST = "Odstraní první položku v seznamu.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_END = "Odstraní položku na konkrétním místu v seznamu. #1 je poslední položka.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_START = "Odebere položku na konkrétním místě v seznamu.  #1 je první položka.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST = "Odstraní poslední položku v seznamu.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM = "Odstraní náhodou položku v seznamu.";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_END = "do # od konce";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_START = "do #";
Blockly.Msg.LISTS_GET_SUBLIST_END_LAST = "jako poslední";
Blockly.Msg.LISTS_GET_SUBLIST_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_START_FIRST = "získat podseznam od první položky";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_END = "získat podseznam od # od konce";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_START = "získat podseznam od #";
Blockly.Msg.LISTS_GET_SUBLIST_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_TOOLTIP = "Vytvoří kopii určené části seznamu.";
Blockly.Msg.LISTS_INDEX_OF_FIRST = "najít první výskyt položky";
Blockly.Msg.LISTS_INDEX_OF_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
Blockly.Msg.LISTS_INDEX_OF_LAST = "najít poslední výskyt položky";
Blockly.Msg.LISTS_INDEX_OF_TOOLTIP = "Vrací index prvního/posledního výskytu položky v seznamu. Vrací 0, pokud položka nebyla nalezena.";
Blockly.Msg.LISTS_INLIST = "v seznamu";
Blockly.Msg.LISTS_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
Blockly.Msg.LISTS_ISEMPTY_TITLE = "%1 je prázdné";
Blockly.Msg.LISTS_ISEMPTY_TOOLTIP = "Vrátí hodnotu pravda, pokud je seznam prázdný.";
Blockly.Msg.LISTS_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
Blockly.Msg.LISTS_LENGTH_TITLE = "délka %1";
Blockly.Msg.LISTS_LENGTH_TOOLTIP = "Vrací počet položek v seznamu.";
Blockly.Msg.LISTS_REPEAT_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg.LISTS_REPEAT_TITLE = "vytvoř seznam s položkou %1 opakovanou %1 krát";
Blockly.Msg.LISTS_REPEAT_TOOLTIP = "Vytváří seznam obsahující danou hodnotu n-krát.";
Blockly.Msg.LISTS_SET_INDEX_HELPURL = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_INPUT_TO = "jako";
Blockly.Msg.LISTS_SET_INDEX_INSERT = "vložit na";
Blockly.Msg.LISTS_SET_INDEX_SET = "nastavit";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST = "Vložit položku na začátek seznamu.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_END = "Vloží položku na určenou pozici v seznamu.  #1 je poslední položka.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_START = "Vloží položku na určenou pozici v seznamu.  #1 je první položka.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_LAST = "Připojí položku na konec seznamu.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM = "Připojí položku náhodně do seznamu.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FIRST = "Nastaví první položku v seznamu.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_END = "Nastaví položku na konkrétní místo v seznamu. #1 je poslední položka.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_START = "Nastaví položku na konkrétní místo v seznamu. #1 je první položka.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_LAST = "Nastaví poslední položku v seznamu.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_RANDOM = "Nastaví náhodnou položku v seznamu.";
Blockly.Msg.LISTS_SORT_HELPURL = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";  // untranslated
Blockly.Msg.LISTS_SORT_ORDER_ASCENDING = "ascending";  // untranslated
Blockly.Msg.LISTS_SORT_ORDER_DESCENDING = "descending";  // untranslated
Blockly.Msg.LISTS_SORT_TITLE = "sort %1 %2 %3";  // untranslated
Blockly.Msg.LISTS_SORT_TOOLTIP = "Sort a copy of a list.";  // untranslated
Blockly.Msg.LISTS_SORT_TYPE_IGNORECASE = "alphabetic, ignore case";  // untranslated
Blockly.Msg.LISTS_SORT_TYPE_NUMERIC = "numeric";  // untranslated
Blockly.Msg.LISTS_SORT_TYPE_TEXT = "alphabetic";  // untranslated
Blockly.Msg.LISTS_SPLIT_HELPURL = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";  // untranslated
Blockly.Msg.LISTS_SPLIT_LIST_FROM_TEXT = "udělat z textu seznam";
Blockly.Msg.LISTS_SPLIT_TEXT_FROM_LIST = "udělat ze seznamu text";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_JOIN = "Spojit seznam textů do jednoho textu, rozdělaného oddělovači.";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_SPLIT = "Rozdělit text do seznamu textů, lámání na oddělovačích.";
Blockly.Msg.LISTS_SPLIT_WITH_DELIMITER = "s oddělovačem";
Blockly.Msg.LOGIC_BOOLEAN_FALSE = "nepravda";
Blockly.Msg.LOGIC_BOOLEAN_HELPURL = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
Blockly.Msg.LOGIC_BOOLEAN_TOOLTIP = "Vrací pravda nebo nepravda.";
Blockly.Msg.LOGIC_BOOLEAN_TRUE = "pravda";
Blockly.Msg.LOGIC_COMPARE_HELPURL = "https://cs.wikipedia.org/wiki/Nerovnost_(matematika)";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ = "Vrátí hodnotu pravda, pokud se oba vstupy rovnají jeden druhému.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT = "Navrátí hodnotu pravda, pokud první vstup je větší než druhý vstup.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE = "Navrátí hodnotu pravda, pokud je první vstup větší a nebo rovný druhému vstupu.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT = "Navrátí hodnotu pravda, pokud je první vstup menší než druhý vstup.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE = "Navrátí hodnotu pravda, pokud je první vstup menší a nebo rovný druhému vstupu.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ = "Vrátí hodnotu pravda, pokud se oba vstupy nerovnají sobě navzájem.";
Blockly.Msg.LOGIC_NEGATE_HELPURL = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
Blockly.Msg.LOGIC_NEGATE_TITLE = "ne %1";
Blockly.Msg.LOGIC_NEGATE_TOOLTIP = "Navrátí hodnotu pravda, pokud je vstup nepravda. Navrátí hodnotu nepravda, pokud je vstup pravda.";
Blockly.Msg.LOGIC_NULL = "prázdný";
Blockly.Msg.LOGIC_NULL_HELPURL = "https://en.wikipedia.org/wiki/Nullable_type";  // untranslated
Blockly.Msg.LOGIC_NULL_TOOLTIP = "Vrátí prázdnou hodnotu";
Blockly.Msg.LOGIC_OPERATION_AND = "a";
Blockly.Msg.LOGIC_OPERATION_HELPURL = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
Blockly.Msg.LOGIC_OPERATION_OR = "nebo";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_AND = "Vrátí hodnotu pravda, pokud oba dva vstupy jsou pravdivé.";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_OR = "Vrátí hodnotu pravda, pokud alespoň jeden ze vstupů má hodnotu pravda.";
Blockly.Msg.LOGIC_TERNARY_CONDITION = "test";
Blockly.Msg.LOGIC_TERNARY_HELPURL = "https://cs.wikipedia.org/wiki/Ternární operátor (programování)";
Blockly.Msg.LOGIC_TERNARY_IF_FALSE = "pokud nepravda";
Blockly.Msg.LOGIC_TERNARY_IF_TRUE = "pokud pravda";
Blockly.Msg.LOGIC_TERNARY_TOOLTIP = "Zkontroluje podmínku v \"testu\". Když je podmínka pravda, vrátí hodnotu \"pokud pravda\"; v opačném případě vrátí hodnotu \"pokud nepravda\".";
Blockly.Msg.MATH_ADDITION_SYMBOL = "+";  // untranslated
Blockly.Msg.MATH_ARITHMETIC_HELPURL = "https://cs.wikipedia.org/wiki/Aritmetika";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_ADD = "Vrátí součet dvou čísel.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_DIVIDE = "Vrátí podíl dvou čísel.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MINUS = "Vrátí rozdíl dvou čísel.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MULTIPLY = "Vrátí součin dvou čísel.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_POWER = "Vrátí první číslo umocněné na druhé číslo.";
Blockly.Msg.MATH_CHANGE_HELPURL = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";
Blockly.Msg.MATH_CHANGE_TITLE = "zaměň %1 za %2";
Blockly.Msg.MATH_CHANGE_TOOLTIP = "Přičti číslo k proměnné '%1'.";
Blockly.Msg.MATH_CONSTANT_HELPURL = "https://en.wikipedia.org/wiki/Mathematical_constant";
Blockly.Msg.MATH_CONSTANT_TOOLTIP = "Vraťte jednu z následujících konstant: π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…), or ∞ (nekonečno).";
Blockly.Msg.MATH_CONSTRAIN_HELPURL = "https://en.wikipedia.org/wiki/Clamping_%28graphics%29";  // untranslated
Blockly.Msg.MATH_CONSTRAIN_TITLE = "omez %1 na rozmezí od %2 do %3";
Blockly.Msg.MATH_CONSTRAIN_TOOLTIP = "Omezí číslo tak, aby bylo ve stanovených mezích (včetně).";
Blockly.Msg.MATH_DIVISION_SYMBOL = "÷";
Blockly.Msg.MATH_IS_DIVISIBLE_BY = "je dělitelné číslem";
Blockly.Msg.MATH_IS_EVEN = "je sudé";
Blockly.Msg.MATH_IS_NEGATIVE = "je záporné";
Blockly.Msg.MATH_IS_ODD = "je liché";
Blockly.Msg.MATH_IS_POSITIVE = "je kladné";
Blockly.Msg.MATH_IS_PRIME = "je prvočíslo";
Blockly.Msg.MATH_IS_TOOLTIP = "Kontrola, zda je číslo sudé, liché, prvočíslo, celé, kladné, záporné nebo zda je dělitelné daným číslem. Vrací pravdu nebo nepravdu.";
Blockly.Msg.MATH_IS_WHOLE = "je celé";
Blockly.Msg.MATH_MODULO_HELPURL = "https://cs.wikipedia.org/wiki/Modul%C3%A1rn%C3%AD_aritmetika";
Blockly.Msg.MATH_MODULO_TITLE = "zbytek po dělení %1 ÷ %2";
Blockly.Msg.MATH_MODULO_TOOLTIP = "Vrátí zbytek po dělení dvou čísel.";
Blockly.Msg.MATH_MULTIPLICATION_SYMBOL = "×";
Blockly.Msg.MATH_NUMBER_HELPURL = "https://cs.wikipedia.org/wiki/Číslo";
Blockly.Msg.MATH_NUMBER_TOOLTIP = "Číslo.";
Blockly.Msg.MATH_ONLIST_HELPURL = "";  // untranslated
Blockly.Msg.MATH_ONLIST_OPERATOR_AVERAGE = "průměr v seznamu";
Blockly.Msg.MATH_ONLIST_OPERATOR_MAX = "největší v seznamu";
Blockly.Msg.MATH_ONLIST_OPERATOR_MEDIAN = "medián v seznamu";
Blockly.Msg.MATH_ONLIST_OPERATOR_MIN = "nejmenší v seznamu";
Blockly.Msg.MATH_ONLIST_OPERATOR_MODE = "nejčastější ze seznamu";
Blockly.Msg.MATH_ONLIST_OPERATOR_RANDOM = "náhodná položka seznamu";
Blockly.Msg.MATH_ONLIST_OPERATOR_STD_DEV = "směrodatná odchylka ze seznamu";
Blockly.Msg.MATH_ONLIST_OPERATOR_SUM = "suma seznamu";
Blockly.Msg.MATH_ONLIST_TOOLTIP_AVERAGE = "Vrátí průměr (aritmetický průměr) číselných hodnot v seznamu.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MAX = "Vrátí největší číslo v seznamu.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MEDIAN = "Vrátí medián seznamu.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MIN = "Vrátí nejmenší číslo v seznamu.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MODE = "Vrátí seznam nejčastějších položek seznamu.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_RANDOM = "Vrátí náhodnou položku ze seznamu.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_STD_DEV = "Vrátí směrodatnou odchylku seznamu.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_SUM = "Vrátí součet všech čísel v seznamu.";
Blockly.Msg.MATH_POWER_SYMBOL = "^";
Blockly.Msg.MATH_RANDOM_FLOAT_HELPURL = "https://cs.wikipedia.org/wiki/Gener%C3%A1tor_n%C3%A1hodn%C3%BDch_%C4%8D%C3%ADsel";
Blockly.Msg.MATH_RANDOM_FLOAT_TITLE_RANDOM = "náhodné číslo mezi 0 (včetně) do 1";
Blockly.Msg.MATH_RANDOM_FLOAT_TOOLTIP = "Vrátí náhodné číslo mezi 0,0 (včetně) až 1,0";
Blockly.Msg.MATH_RANDOM_INT_HELPURL = "https://cs.wikipedia.org/wiki/Gener%C3%A1tor_n%C3%A1hodn%C3%BDch_%C4%8D%C3%ADsel";
Blockly.Msg.MATH_RANDOM_INT_TITLE = "náhodné celé číslo od %1 do %2";
Blockly.Msg.MATH_RANDOM_INT_TOOLTIP = "Vrací náhodné celé číslo mezi dvěma určenými mezemi, včetně mezních hodnot.";
Blockly.Msg.MATH_ROUND_HELPURL = "https://en.wikipedia.org/wiki/Rounding";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUND = "zaokrouhlit";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDDOWN = "zaokrouhlit dolů";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDUP = "zaokrouhlit nahoru";
Blockly.Msg.MATH_ROUND_TOOLTIP = "Zaokrouhlit číslo nahoru nebo dolů.";
Blockly.Msg.MATH_SINGLE_HELPURL = "https://cs.wikipedia.org/wiki/Druhá_odmocnina";
Blockly.Msg.MATH_SINGLE_OP_ABSOLUTE = "absolutní hodnota";
Blockly.Msg.MATH_SINGLE_OP_ROOT = "druhá odmocnina";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ABS = "Vrátí absolutní hodnotu čísla.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_EXP = "Vrátí mocninu čísla e.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LN = "Vrátí přirozený logaritmus čísla.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG10 = "Vrátí desítkový logaritmus čísla.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_NEG = "Vrátí zápornou hodnotu čísla.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_POW10 = "Vrátí mocninu čísla 10.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ROOT = "Vrátí druhou odmocninu čísla.";
Blockly.Msg.MATH_SUBTRACTION_SYMBOL = "-";
Blockly.Msg.MATH_TRIG_ACOS = "acos";
Blockly.Msg.MATH_TRIG_ASIN = "arcsin";
Blockly.Msg.MATH_TRIG_ATAN = "arctan";
Blockly.Msg.MATH_TRIG_COS = "cos";
Blockly.Msg.MATH_TRIG_HELPURL = "https://en.wikipedia.org/wiki/Trigonometric_functions";
Blockly.Msg.MATH_TRIG_SIN = "sin";
Blockly.Msg.MATH_TRIG_TAN = "tan";
Blockly.Msg.MATH_TRIG_TOOLTIP_ACOS = "Vrátí arkus kosinus čísla.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ASIN = "Vrátí arkus sinus čísla.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ATAN = "Vrátí arkus tangens čísla.";
Blockly.Msg.MATH_TRIG_TOOLTIP_COS = "Vrátí kosinus úhlu ve stupních.";
Blockly.Msg.MATH_TRIG_TOOLTIP_SIN = "Vrátí sinus úhlu ve stupních.";
Blockly.Msg.MATH_TRIG_TOOLTIP_TAN = "Vrátí tangens úhlu ve stupních.";
Blockly.Msg.ME = "Já";
Blockly.Msg.NEW_VARIABLE = "Nová proměnná...";
Blockly.Msg.NEW_VARIABLE_TITLE = "Nový název proměnné:";
Blockly.Msg.ORDINAL_NUMBER_SUFFIX = "";  // untranslated
Blockly.Msg.PROCEDURES_ALLOW_STATEMENTS = "povolit příkazy";
Blockly.Msg.PROCEDURES_BEFORE_PARAMS = "s:";
Blockly.Msg.PROCEDURES_CALLNORETURN_HELPURL = "https://cs.wikipedia.org/wiki/Funkce_(programov%C3%A1n%C3%AD)";
Blockly.Msg.PROCEDURES_CALLNORETURN_TOOLTIP = "Spustí uživatelem definovanou funkci '%1'.";
Blockly.Msg.PROCEDURES_CALLRETURN_HELPURL = "https://cs.wikipedia.org/wiki/Funkce_(programov%C3%A1n%C3%AD)";
Blockly.Msg.PROCEDURES_CALLRETURN_TOOLTIP = "Spustí uživatelem definovanou funkci '%1' a použije její výstup.";
Blockly.Msg.PROCEDURES_CALL_BEFORE_PARAMS = "s:";
Blockly.Msg.PROCEDURES_CREATE_DO = "Vytvořit '%1'";
Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT = "Popište tuto funkci...";
Blockly.Msg.PROCEDURES_DEFNORETURN_DO = "";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL = "https://cs.wikipedia.org/w/index.php?title=Funkce_(programování)";
Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE = "proveď něco";
Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE = "k provedení";
Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP = "Vytvořit funkci bez výstupu.";
Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL = "https://cs.wikipedia.org/w/index.php?title=Funkce_(programování)";
Blockly.Msg.PROCEDURES_DEFRETURN_RETURN = "navrátit";
Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP = "Vytvořit funkci s výstupem.";
Blockly.Msg.PROCEDURES_DEF_DUPLICATE_WARNING = "Upozornění: Tato funkce má duplicitní parametry.";
Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF = "Zvýraznit definici funkce";
Blockly.Msg.PROCEDURES_IFRETURN_HELPURL = "http://c2.com/cgi/wiki?GuardClause";
Blockly.Msg.PROCEDURES_IFRETURN_TOOLTIP = "Je-li hodnota pravda, pak vrátí druhou hodnotu.";
Blockly.Msg.PROCEDURES_IFRETURN_WARNING = "Varování: Tento blok může být použit pouze uvnitř definici funkce.";
Blockly.Msg.PROCEDURES_MUTATORARG_TITLE = "vstupní jméno:";
Blockly.Msg.PROCEDURES_MUTATORARG_TOOLTIP = "Přidat vstupy do funkce.";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TITLE = "vstupy";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TOOLTIP = "Přidat, odebrat nebo změnit pořadí vstupů této funkce.";
Blockly.Msg.REDO = "Redo";  // untranslated
Blockly.Msg.REMOVE_COMMENT = "Odstranit komentář";
Blockly.Msg.RENAME_VARIABLE = "Přejmenovat proměnnou...";
Blockly.Msg.RENAME_VARIABLE_TITLE = "Přejmenuj všech '%1' proměnných na:";
Blockly.Msg.TEXT_APPEND_APPENDTEXT = "přidat text";
Blockly.Msg.TEXT_APPEND_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_APPEND_TO = "do";
Blockly.Msg.TEXT_APPEND_TOOLTIP = "Přidá určitý text k proměnné '%1'.";
Blockly.Msg.TEXT_CHANGECASE_HELPURL = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_LOWERCASE = "na malá písmena";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_TITLECASE = "na Počáteční Velká Písmena";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_UPPERCASE = "na VELKÁ PÍSMENA";
Blockly.Msg.TEXT_CHANGECASE_TOOLTIP = "Vrátí kopii textu s jinou velikostí písmen.";
Blockly.Msg.TEXT_CHARAT_FIRST = "získat první písmeno";
Blockly.Msg.TEXT_CHARAT_FROM_END = "získat # písmeno od konce";
Blockly.Msg.TEXT_CHARAT_FROM_START = "získat písmeno #";
Blockly.Msg.TEXT_CHARAT_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
Blockly.Msg.TEXT_CHARAT_INPUT_INTEXT = "v textu";
Blockly.Msg.TEXT_CHARAT_LAST = "získat poslední písmeno";
Blockly.Msg.TEXT_CHARAT_RANDOM = "získat náhodné písmeno";
Blockly.Msg.TEXT_CHARAT_TAIL = "";  // untranslated
Blockly.Msg.TEXT_CHARAT_TOOLTIP = "Získat písmeno na konkrétní pozici.";
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TOOLTIP = "Přidat položku do textu.";
Blockly.Msg.TEXT_CREATE_JOIN_TITLE_JOIN = "spojit";
Blockly.Msg.TEXT_CREATE_JOIN_TOOLTIP = "Přidat, odebrat nebo změnit pořadí oddílů tohoto textového bloku.";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_END = "do # písmene od konce";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_START = "do písmene #";
Blockly.Msg.TEXT_GET_SUBSTRING_END_LAST = "do posledního písmene";
Blockly.Msg.TEXT_GET_SUBSTRING_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_INPUT_IN_TEXT = "v textu";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FIRST = "získat podřetězec od prvního písmene";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_END = "získat podřetězec od písmene # od konce";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_START = "získat podřetězec od písmene #";
Blockly.Msg.TEXT_GET_SUBSTRING_TAIL = "";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_TOOLTIP = "Získat zadanou část textu.";
Blockly.Msg.TEXT_INDEXOF_HELPURL = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
Blockly.Msg.TEXT_INDEXOF_INPUT_INTEXT = "v textu";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_FIRST = "najít první výskyt textu";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_LAST = "najít poslední výskyt textu";
Blockly.Msg.TEXT_INDEXOF_TAIL = "";  // untranslated
Blockly.Msg.TEXT_INDEXOF_TOOLTIP = "Vrátí index prvního/posledního výskytu prvního textu v druhém textu.  Pokud text není nalezen, vrátí hodnotu 0.";
Blockly.Msg.TEXT_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
Blockly.Msg.TEXT_ISEMPTY_TITLE = "%1 je prázdný";
Blockly.Msg.TEXT_ISEMPTY_TOOLTIP = "Vrátí pravda pokud je zadaný text prázdný.";
Blockly.Msg.TEXT_JOIN_HELPURL = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
Blockly.Msg.TEXT_JOIN_TITLE_CREATEWITH = "vytvořit text s";
Blockly.Msg.TEXT_JOIN_TOOLTIP = "Vytvoří kousek textu spojením libovolného počtu položek.";
Blockly.Msg.TEXT_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_LENGTH_TITLE = "délka %1";
Blockly.Msg.TEXT_LENGTH_TOOLTIP = "Vrátí počet písmen (včetně mezer) v zadaném textu.";
Blockly.Msg.TEXT_PRINT_HELPURL = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
Blockly.Msg.TEXT_PRINT_TITLE = "tisk %1";
Blockly.Msg.TEXT_PRINT_TOOLTIP = "Tisk zadaného textu, čísla nebo jiné hodnoty.";
Blockly.Msg.TEXT_PROMPT_HELPURL = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
Blockly.Msg.TEXT_PROMPT_TOOLTIP_NUMBER = "Výzva pro uživatele k zadání čísla.";
Blockly.Msg.TEXT_PROMPT_TOOLTIP_TEXT = "Výzva pro uživatele k zadání nějakého textu.";
Blockly.Msg.TEXT_PROMPT_TYPE_NUMBER = "výzva k zadání čísla se zprávou";
Blockly.Msg.TEXT_PROMPT_TYPE_TEXT = "výzva k zadání textu se zprávou";
Blockly.Msg.TEXT_TEXT_HELPURL = "https://cs.wikipedia.org/wiki/Textov%C3%BD_%C5%99et%C4%9Bzec";
Blockly.Msg.TEXT_TEXT_TOOLTIP = "Písmeno, slovo nebo řádek textu.";
Blockly.Msg.TEXT_TRIM_HELPURL = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
Blockly.Msg.TEXT_TRIM_OPERATOR_BOTH = "odstranit mezery z obou stran";
Blockly.Msg.TEXT_TRIM_OPERATOR_LEFT = "odstranit mezery z levé strany";
Blockly.Msg.TEXT_TRIM_OPERATOR_RIGHT = "odstranit mezery z pravé strany";
Blockly.Msg.TEXT_TRIM_TOOLTIP = "Vrátí kopii textu s odstraněnými mezerami z jednoho nebo obou konců.";
Blockly.Msg.TODAY = "Dnes";
Blockly.Msg.UNDO = "Undo";  // untranslated
Blockly.Msg.VARIABLES_DEFAULT_NAME = "položka";
Blockly.Msg.VARIABLES_GET_CREATE_SET = "Vytvořit \"nastavit %1\"";
Blockly.Msg.VARIABLES_GET_HELPURL = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
Blockly.Msg.VARIABLES_GET_TOOLTIP = "Vrátí hodnotu této proměnné.";
Blockly.Msg.VARIABLES_SET = "nastavit %1 na %2";
Blockly.Msg.VARIABLES_SET_CREATE_GET = "Vytvořit \"získat %1\"";
Blockly.Msg.VARIABLES_SET_HELPURL = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
Blockly.Msg.VARIABLES_SET_TOOLTIP = "Nastaví tuto proměnnou, aby se rovnala vstupu.";
Blockly.Msg.PROCEDURES_DEFRETURN_TITLE = Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE;
Blockly.Msg.CONTROLS_IF_IF_TITLE_IF = Blockly.Msg.CONTROLS_IF_MSG_IF;
Blockly.Msg.CONTROLS_WHILEUNTIL_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_MSG_THEN = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_ELSE_TITLE_ELSE = Blockly.Msg.CONTROLS_IF_MSG_ELSE;
Blockly.Msg.PROCEDURES_DEFRETURN_PROCEDURE = Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE;
Blockly.Msg.LISTS_GET_SUBLIST_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.LISTS_GET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.MATH_CHANGE_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.PROCEDURES_DEFRETURN_DO = Blockly.Msg.PROCEDURES_DEFNORETURN_DO;
Blockly.Msg.CONTROLS_IF_ELSEIF_TITLE_ELSEIF = Blockly.Msg.CONTROLS_IF_MSG_ELSEIF;
Blockly.Msg.LISTS_GET_INDEX_HELPURL = Blockly.Msg.LISTS_INDEX_OF_HELPURL;
Blockly.Msg.CONTROLS_FOREACH_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_SET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.CONTROLS_FOR_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TITLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.LISTS_INDEX_OF_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT = Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT;

// Ardublockly strings
Blockly.Msg.ARD_ANALOGREAD = "read analog pin#";  // untranslated
Blockly.Msg.ARD_ANALOGREAD_TIP = "Return value between 0 and 1024";  // untranslated
Blockly.Msg.ARD_ANALOGWRITE = "set analog pin#";  // untranslated
Blockly.Msg.ARD_ANALOGWRITE_TIP = "Write analog value between 0 and 255 to a specific PWM Port";  // untranslated
Blockly.Msg.ARD_BUILTIN_LED = "set built-in LED";  // untranslated
Blockly.Msg.ARD_BUILTIN_LED_TIP = "Light on or off for the built-in LED of the Arduino";  // untranslated
Blockly.Msg.ARD_COMPONENT_WARN1 = "A %1 configuration block with the same %2 name must be added to use this block!";  // untranslated
Blockly.Msg.ARD_DEFINE = "Define";  // untranslated
Blockly.Msg.ARD_DIGITALREAD = "read digital pin#";  // untranslated
Blockly.Msg.ARD_DIGITALREAD_TIP = "Read digital value on a pin: HIGH or LOW";  // untranslated
Blockly.Msg.ARD_DIGITALWRITE = "set digitial pin#";  // untranslated
Blockly.Msg.ARD_DIGITALWRITE_TIP = "Write digital value HIGH or LOW to a specific Port";  // untranslated
Blockly.Msg.ARD_FUN_RUN_LOOP = "Arduino loop forever:";  // untranslated
Blockly.Msg.ARD_FUN_RUN_SETUP = "Arduino run first:";  // untranslated
Blockly.Msg.ARD_FUN_RUN_TIP = "Defines the Arduino setup() and loop() functions.";  // untranslated
Blockly.Msg.ARD_HIGH = "HIGH";  // untranslated
Blockly.Msg.ARD_HIGHLOW_TIP = "Set a pin state logic High or Low.";  // untranslated
Blockly.Msg.ARD_LOW = "LOW";  // untranslated
Blockly.Msg.ARD_MAP = "Map";  // untranslated
Blockly.Msg.ARD_MAP_TIP = "Re-maps a number from [0-1024] to another.";  // untranslated
Blockly.Msg.ARD_MAP_VAL = "value to [0-";  // untranslated
Blockly.Msg.ARD_NOTONE = "Turn off tone on pin #";  // untranslated
Blockly.Msg.ARD_NOTONE_PIN = "No tone PIN#";  // untranslated
Blockly.Msg.ARD_NOTONE_PIN_TIP = "Stop generating a tone on a pin";  // untranslated
Blockly.Msg.ARD_NOTONE_TIP = "Turns the tone off on the selected pin";  // untranslated
Blockly.Msg.ARD_PIN_WARN1 = "Pin %1 is needed for %2 as pin %3. Already used as %4.";  // untranslated
Blockly.Msg.ARD_PULSETIMEOUT_TIP = "Measures the duration of a pulse on the selected pin, if it is within the time-out in microseconds.";  // untranslated
Blockly.Msg.ARD_PULSE_READ = "measure %1 pulse on pin #%2";  // untranslated
Blockly.Msg.ARD_PULSE_READ_TIMEOUT = "measure %1 pulse on pin #%2 (timeout after %3 μs)";  // untranslated
Blockly.Msg.ARD_PULSE_TIP = "Measures the duration of a pulse on the selected pin.";  // untranslated
Blockly.Msg.ARD_SERIAL_BPS = "bps";  // untranslated
Blockly.Msg.ARD_SERIAL_PRINT = "print";  // untranslated
Blockly.Msg.ARD_SERIAL_PRINT_NEWLINE = "add new line";  // untranslated
Blockly.Msg.ARD_SERIAL_PRINT_TIP = "Prints data to the console/serial port as human-readable ASCII text.";  // untranslated
Blockly.Msg.ARD_SERIAL_PRINT_WARN = "A setup block for %1 must be added to the workspace to use this block!";  // untranslated
Blockly.Msg.ARD_SERIAL_SETUP = "Setup";  // untranslated
Blockly.Msg.ARD_SERIAL_SETUP_TIP = "Selects the speed for a specific Serial peripheral";  // untranslated
Blockly.Msg.ARD_SERIAL_SPEED = ":  speed to";  // untranslated
Blockly.Msg.ARD_SERVO_READ = "read SERVO from PIN#";  // untranslated
Blockly.Msg.ARD_SERVO_READ_TIP = "Read a Servo angle";  // untranslated
Blockly.Msg.ARD_SERVO_WRITE = "set SERVO from Pin";  // untranslated
Blockly.Msg.ARD_SERVO_WRITE_DEG_180 = "Degrees (0~180)";  // untranslated
Blockly.Msg.ARD_SERVO_WRITE_TIP = "Set a Servo to an specified angle";  // untranslated
Blockly.Msg.ARD_SERVO_WRITE_TO = "to";  // untranslated
Blockly.Msg.ARD_SETTONE = "Set tone on pin #";  // untranslated
Blockly.Msg.ARD_SPI_SETUP = "Setup";  // untranslated
Blockly.Msg.ARD_SPI_SETUP_CONF = "configuration:";  // untranslated
Blockly.Msg.ARD_SPI_SETUP_DIVIDE = "clock divide";  // untranslated
Blockly.Msg.ARD_SPI_SETUP_LSBFIRST = "LSBFIRST";  // untranslated
Blockly.Msg.ARD_SPI_SETUP_MODE = "SPI mode (idle - edge)";  // untranslated
Blockly.Msg.ARD_SPI_SETUP_MODE0 = "0 (Low - Falling)";  // untranslated
Blockly.Msg.ARD_SPI_SETUP_MODE1 = "1 (Low - Rising)";  // untranslated
Blockly.Msg.ARD_SPI_SETUP_MODE2 = "2 (High - Falling)";  // untranslated
Blockly.Msg.ARD_SPI_SETUP_MODE3 = "3 (High - Rising)";  // untranslated
Blockly.Msg.ARD_SPI_SETUP_MSBFIRST = "MSBFIRST";  // untranslated
Blockly.Msg.ARD_SPI_SETUP_SHIFT = "data shift";  // untranslated
Blockly.Msg.ARD_SPI_SETUP_TIP = "Configures the SPI peripheral.";  // untranslated
Blockly.Msg.ARD_SPI_TRANSRETURN_TIP = "Send a SPI message to an specified slave device and get data back.";  // untranslated
Blockly.Msg.ARD_SPI_TRANS_NONE = "none";  // untranslated
Blockly.Msg.ARD_SPI_TRANS_SLAVE = "to slave pin";  // untranslated
Blockly.Msg.ARD_SPI_TRANS_TIP = "Send a SPI message to an specified slave device.";  // untranslated
Blockly.Msg.ARD_SPI_TRANS_VAL = "transfer";  // untranslated
Blockly.Msg.ARD_SPI_TRANS_WARN1 = "A setup block for %1 must be added to the workspace to use this block!";  // untranslated
Blockly.Msg.ARD_SPI_TRANS_WARN2 = "Old pin value %1 is no longer available.";  // untranslated
Blockly.Msg.ARD_STEPPER_COMPONENT = "stepper";  // untranslated
Blockly.Msg.ARD_STEPPER_DEFAULT_NAME = "MyStepper";  // untranslated
Blockly.Msg.ARD_STEPPER_FOUR_PINS = "4";  // untranslated
Blockly.Msg.ARD_STEPPER_MOTOR = "stepper motor:";  // untranslated
Blockly.Msg.ARD_STEPPER_NUMBER_OF_PINS = "Number of pins";  // untranslated
Blockly.Msg.ARD_STEPPER_PIN1 = "pin1#";  // untranslated
Blockly.Msg.ARD_STEPPER_PIN2 = "pin2#";  // untranslated
Blockly.Msg.ARD_STEPPER_PIN3 = "pin3#";  // untranslated
Blockly.Msg.ARD_STEPPER_PIN4 = "pin4#";  // untranslated
Blockly.Msg.ARD_STEPPER_REVOLVS = "how many steps per revolution";  // untranslated
Blockly.Msg.ARD_STEPPER_SETUP = "Setup stepper motor";  // untranslated
Blockly.Msg.ARD_STEPPER_SETUP_TIP = "Configures a stepper motor pinout and other settings.";  // untranslated
Blockly.Msg.ARD_STEPPER_SPEED = "set speed (rpm) to";  // untranslated
Blockly.Msg.ARD_STEPPER_STEP = "move stepper";  // untranslated
Blockly.Msg.ARD_STEPPER_STEPS = "steps";  // untranslated
Blockly.Msg.ARD_STEPPER_STEP_TIP = "Turns the stepper motor a specific number of steps.";  // untranslated
Blockly.Msg.ARD_STEPPER_TWO_PINS = "2";  // untranslated
Blockly.Msg.ARD_TIME_DELAY = "wait";  // untranslated
Blockly.Msg.ARD_TIME_DELAY_MICROS = "microseconds";  // untranslated
Blockly.Msg.ARD_TIME_DELAY_MICRO_TIP = "Wait specific time in microseconds";  // untranslated
Blockly.Msg.ARD_TIME_DELAY_TIP = "Wait specific time in milliseconds";  // untranslated
Blockly.Msg.ARD_TIME_INF = "wait forever (end program)";  // untranslated
Blockly.Msg.ARD_TIME_INF_TIP = "Wait indefinitely, stopping the program.";  // untranslated
Blockly.Msg.ARD_TIME_MICROS = "current elapsed Time (microseconds)";  // untranslated
Blockly.Msg.ARD_TIME_MICROS_TIP = "Returns the number of microseconds since the Arduino board began running the current program. Has to be stored in a positive long integer";  // untranslated
Blockly.Msg.ARD_TIME_MILLIS = "current elapsed Time (milliseconds)";  // untranslated
Blockly.Msg.ARD_TIME_MILLIS_TIP = "Returns the number of milliseconds since the Arduino board began running the current program. Has to be stored in a positive long integer";  // untranslated
Blockly.Msg.ARD_TIME_MS = "milliseconds";  // untranslated
Blockly.Msg.ARD_TONEFREQ = "at frequency";  // untranslated
Blockly.Msg.ARD_TONE_FREQ = "frequency";  // untranslated
Blockly.Msg.ARD_TONE_PIN = "Tone PIN#";  // untranslated
Blockly.Msg.ARD_TONE_PIN_TIP = "Generate audio tones on a pin";  // untranslated
Blockly.Msg.ARD_TONE_TIP = "Sets tone on pin to specified frequency within range 31 - 65535";  // untranslated
Blockly.Msg.ARD_TONE_WARNING = "Frequency must be in range 31 - 65535";  // untranslated
Blockly.Msg.ARD_TYPE_ARRAY = "Array";  // untranslated
Blockly.Msg.ARD_TYPE_BOOL = "Boolean";  // untranslated
Blockly.Msg.ARD_TYPE_CHAR = "Character";  // untranslated
Blockly.Msg.ARD_TYPE_CHILDBLOCKMISSING = "ChildBlockMissing";  // untranslated
Blockly.Msg.ARD_TYPE_DECIMAL = "Decimal";  // untranslated
Blockly.Msg.ARD_TYPE_LONG = "Large Number";  // untranslated
Blockly.Msg.ARD_TYPE_NULL = "Null";  // untranslated
Blockly.Msg.ARD_TYPE_NUMBER = "Number";  // untranslated
Blockly.Msg.ARD_TYPE_SHORT = "Short Number";  // untranslated
Blockly.Msg.ARD_TYPE_TEXT = "Text";  // untranslated
Blockly.Msg.ARD_TYPE_UNDEF = "Undefined";  // untranslated
Blockly.Msg.ARD_VAR_AS = "as";  // untranslated
Blockly.Msg.ARD_VAR_AS_TIP = "Sets a value to a specific type";  // untranslated
Blockly.Msg.ARD_WRITE_TO = "to";  // untranslated
Blockly.Msg.NEW_INSTANCE = "New instance...";  // untranslated
Blockly.Msg.NEW_INSTANCE_TITLE = "New instance name:";  // untranslated
Blockly.Msg.RENAME_INSTANCE = "Rename instance...";  // untranslated
Blockly.Msg.RENAME_INSTANCE_TITLE = "Rename all '%1' instances to:";  // untranslated
Blockly.Msg.cases_add = "Fall";  // untranslated
Blockly.Msg.cases_condition = "Fall (Variable) = ";  // untranslated
Blockly.Msg.cases_do = "Führe aus";  // untranslated
Blockly.Msg.cases_switch = "Variable";  // untranslated
Blockly.Msg.mcubase_SD_COMPONENT = "SD-Block";  // untranslated
Blockly.Msg.mcubase_basic_blue = "Blau";  // untranslated
Blockly.Msg.mcubase_basic_green = "Grün";  // untranslated
Blockly.Msg.mcubase_basic_red = "Rot";  // untranslated
Blockly.Msg.mcubase_basic_state = "Status";  // untranslated
Blockly.Msg.mcubase_bmx055_accelerometer = "Beschleunigungs Sensor";  // untranslated
Blockly.Msg.mcubase_bmx055_accelerometer_tip = "Lage Sensor";  // untranslated
Blockly.Msg.mcubase_bmx055_compass = "Lage Sensor";  // untranslated
Blockly.Msg.mcubase_bmx055_compass_tip = "Lage Sensor";  // untranslated
Blockly.Msg.mcubase_bmx055_gyroscope = "Lage Sensor";  // untranslated
Blockly.Msg.mcubase_bmx055_gyroscope_tip = "Lage Sensor";  // untranslated
Blockly.Msg.mcubase_bmx055_x = "X-Richtung";  // untranslated
Blockly.Msg.mcubase_bmx055_y = "Y-Richtung";  // untranslated
Blockly.Msg.mcubase_button = "Drucktaster";  // untranslated
Blockly.Msg.mcubase_button_tip = "Drucktaster";  // untranslated
Blockly.Msg.mcubase_display_beginDisplay = "Display initialisieren";  // untranslated
Blockly.Msg.mcubase_display_black = "Schwarz";  // untranslated
Blockly.Msg.mcubase_display_clearDisplay = "Display löschen";  // untranslated
Blockly.Msg.mcubase_display_clearDisplay_tip = "Löscht den Inhalt des Displays";  // untranslated
Blockly.Msg.mcubase_display_color = "Schriftfarbe";  // untranslated
Blockly.Msg.mcubase_display_plotDisplay = "Diagram zeichnen";  // untranslated
Blockly.Msg.mcubase_display_plotTimeFrame = "Zeitabschnitt";  // untranslated
Blockly.Msg.mcubase_display_plotXLabel = "X-Achsen Beschriftung";  // untranslated
Blockly.Msg.mcubase_display_plotXRange1 = "X-Wertebereich Anfang";  // untranslated
Blockly.Msg.mcubase_display_plotXRange2 = "X-Wertebereich Ende";  // untranslated
Blockly.Msg.mcubase_display_plotXTick = "X-Linienabstand";  // untranslated
Blockly.Msg.mcubase_display_plotYLabel = "Y-Achsen Beschriftung";  // untranslated
Blockly.Msg.mcubase_display_plotYRange1 = "Y-Wertebereich Anfang";  // untranslated
Blockly.Msg.mcubase_display_plotYRange2 = "Y-Wertebereich Ende";  // untranslated
Blockly.Msg.mcubase_display_plotYTick = "Y-Linienabstand";  // untranslated
Blockly.Msg.mcubase_display_printDisplay = "";  // untranslated
Blockly.Msg.mcubase_display_printDisplay_tip = "zeigt Wert auf dem Display an.";  // untranslated
Blockly.Msg.mcubase_display_printDisplay_value = "Wert";  // untranslated
Blockly.Msg.mcubase_display_printDisplay_x = "x";  // untranslated
Blockly.Msg.mcubase_display_printDisplay_y = "y";  // untranslated
Blockly.Msg.mcubase_display_setSize = "Schriftgröße";  // untranslated
Blockly.Msg.mcubase_display_setSize_tip = "Ändere die Schriftgröße auf einen Wert zwischen 1 und 10.";  // untranslated
Blockly.Msg.mcubase_display_show = "Zeige auf dem Display";  // untranslated
Blockly.Msg.mcubase_display_show_tip = "Zeigt den Nachfolgenden Inhalt auf dem Bildschirm";  // untranslated
Blockly.Msg.mcubase_display_white = "Weiß";  // untranslated
Blockly.Msg.mcubase_foto = "Fotowiderstand";  // untranslated
Blockly.Msg.mcubase_foto_tip = "Fotowiderstand";  // untranslated
Blockly.Msg.mcubase_gps_alt = "Höhe über NN in m";  // untranslated
Blockly.Msg.mcubase_gps_getValues = "GPS Modul";  // untranslated
Blockly.Msg.mcubase_gps_getValues_tip = "ruft das GPS Signal ab";  // untranslated
Blockly.Msg.mcubase_gps_lat = "Breitengrad";  // untranslated
Blockly.Msg.mcubase_gps_lng = "Längengrad";  // untranslated
Blockly.Msg.mcubase_gps_speed = "Geschwindigkeit in km/h";  // untranslated
Blockly.Msg.mcubase_hum = "Luftfeuchtigkeit in %";  // untranslated
Blockly.Msg.mcubase_hum_tip = "Luftfeuchtigkeit";  // untranslated
Blockly.Msg.mcubase_interval = "ms";  // untranslated
Blockly.Msg.mcubase_interval_timer = "Messintervall";  // untranslated
Blockly.Msg.mcubase_interval_timer_tip = "Intervall";  // untranslated
Blockly.Msg.mcubase_ir = "Infrarot Abstandssensor";  // untranslated
Blockly.Msg.mcubase_ir_tip = "Infrarot Abstandssensor";  // untranslated
Blockly.Msg.mcubase_led = "LED an digital";  // untranslated
Blockly.Msg.mcubase_led_tip = "Einfache LED. Beim Anschluss sollte immer ein Vorwiderstand verwendet werden";  // untranslated
Blockly.Msg.mcubase_light = "Beleuchtungsstärke in Lux";  // untranslated
Blockly.Msg.mcubase_lux = "Helligkeitssensor";  // untranslated
Blockly.Msg.mcubase_lux_tip = "Helligkeitssensor";  // untranslated
Blockly.Msg.mcubase_off = "Aus";  // untranslated
Blockly.Msg.mcubase_on = "Ein";  // untranslated
Blockly.Msg.mcubase_osem_connection = "Verbinde mit openSenseMap";  // untranslated
Blockly.Msg.mcubase_osem_connection_tip = "stellt eine WLAN verbindung her";  // untranslated
Blockly.Msg.mcubase_output_filename = "Daten";  // untranslated
Blockly.Msg.mcubase_output_format = "Format:";  // untranslated
Blockly.Msg.mcubase_output_linebreak = "Zeilenumbruch";  // untranslated
Blockly.Msg.mcubase_output_networkid = "NetzwerkID";  // untranslated
Blockly.Msg.mcubase_output_password = "Passwort";  // untranslated
Blockly.Msg.mcubase_output_safetosd = "Auf SD Karte speichern";  // untranslated
Blockly.Msg.mcubase_output_safetosd_tip = "Speichert Messwerte auf SD Karte";  // untranslated
Blockly.Msg.mcubase_output_serialprint = "Auf Kommandozeile ausgeben";  // untranslated
Blockly.Msg.mcubase_output_timestamp = "Zeitstempel";  // untranslated
Blockly.Msg.mcubase_piezo = "Piezo an digital";  // untranslated
Blockly.Msg.mcubase_piezo_tip = "Piezo an digital PIN. Beim Anschluss sollte immer ein Vorwiderstand verwendet werden";  // untranslated
Blockly.Msg.mcubase_poti = "Potenziometer";  // untranslated
Blockly.Msg.mcubase_poti_tip = "Potenziometer";  // untranslated
Blockly.Msg.mcubase_pressure = "Luftdruck in Pa";  // untranslated
Blockly.Msg.mcubase_pressure_dimension = "Luftdruck in Pa";  // untranslated
Blockly.Msg.mcubase_pressure_sensor = "Luftdruck/Temperatur Sensor (BMP280)";  // untranslated
Blockly.Msg.mcubase_pressure_tip = "Luftdrucksensor";  // untranslated
Blockly.Msg.mcubase_rgb_led = "RGB-LED";  // untranslated
Blockly.Msg.mcubase_rgb_led_tip = "RGB-LED benötigt einen digitalen Pin und eine Stromkreis ";  // untranslated
Blockly.Msg.mcubase_sd_create_file = "Erstelle Datei auf SD-Karte";  // untranslated
Blockly.Msg.mcubase_sd_filename = "Daten";  // untranslated
Blockly.Msg.mcubase_sd_open_file = "Öffne eine Datei auf der SD-Karte";  // untranslated
Blockly.Msg.mcubase_sd_write_file = " Schreibe Daten auf SD-Karte";  // untranslated
Blockly.Msg.mcubase_sds011 = "Feinstaubsensor";  // untranslated
Blockly.Msg.mcubase_sds011_dimension = "in µg/m³ an";  // untranslated
Blockly.Msg.mcubase_sds011_pm10 = "PM10";  // untranslated
Blockly.Msg.mcubase_sds011_pm25 = "PM2.5";  // untranslated
Blockly.Msg.mcubase_sds011_serial1 = "Serial1";  // untranslated
Blockly.Msg.mcubase_sds011_serial2 = "Serial2";  // untranslated
Blockly.Msg.mcubase_sds011_tip = "Misst die Feinstaubbelastung";  // untranslated
Blockly.Msg.mcubase_send_mobile_to_osem = "Sende Messwert und Standort";  // untranslated
Blockly.Msg.mcubase_send_mobile_to_osem_tip = "Sende Messwert und Standort an die openSenseMap";  // untranslated
Blockly.Msg.mcubase_send_to_osem = "sende Messwert an die openSenseMap";  // untranslated
Blockly.Msg.mcubase_send_to_osem_tip = "sende Messwert an";  // untranslated
Blockly.Msg.mcubase_sensor = "Sensoren";  // untranslated
Blockly.Msg.mcubase_serial_tip = "Gibt Messwerte oder Daten auf dem Seriellen Monitor der Arduino IDE aus. Praktisch um ohne Display zu arbeiten";  // untranslated
Blockly.Msg.mcubase_sound = "Geräuschsensor";  // untranslated
Blockly.Msg.mcubase_sound_tip = "Geräuschsensor";  // untranslated
Blockly.Msg.mcubase_temp = "Temperatur in °C";  // untranslated
Blockly.Msg.mcubase_temp_hum = "Temperatur/Luftfeuchtigkeitssensor (HDC1080)";  // untranslated
Blockly.Msg.mcubase_temp_hum_tip = "Sensor misst Temperatur und Luftfeuchtigkeit";  // untranslated
Blockly.Msg.mcubase_ultrasonic = "Ultraschall Abstandssensor an Port";  // untranslated
Blockly.Msg.mcubase_ultrasonic_port_A = "A";  // untranslated
Blockly.Msg.mcubase_ultrasonic_port_B = "B";  // untranslated
Blockly.Msg.mcubase_ultrasonic_port_C = "C";  // untranslated
Blockly.Msg.mcubase_ultrasonic_tip = "Ultraschall Abstandssensor";  // untranslated
Blockly.Msg.mcubase_uv = "UV-Intensität in µW/cm²";  // untranslated
Blockly.Msg.mcubase_uv_light = "Licht Sichtbar + UV Sensor";  // untranslated
Blockly.Msg.mcubase_uv_light_tip = "Sensor misst UV-Licht oder Die Helligkeit";  // untranslated
Blockly.Msg.mcubase_value = "Messwert:";  // untranslated
Blockly.Msg.mcubase_wifi_tip = "stellt eine WLAN verbindung her";  // untranslated
Blockly.Msg.senseBox_SD_COMPONENT = "SD-Block";  // untranslated
Blockly.Msg.senseBox_basic_blue = "Blau";  // untranslated
Blockly.Msg.senseBox_basic_green = "Grün";  // untranslated
Blockly.Msg.senseBox_basic_red = "Rot";  // untranslated
Blockly.Msg.senseBox_basic_state = "Status";  // untranslated
Blockly.Msg.senseBox_bmx055_accelerometer = "Beschleunigungs Sensor";  // untranslated
Blockly.Msg.senseBox_bmx055_accelerometer_tip = "Lage Sensor";  // untranslated
Blockly.Msg.senseBox_bmx055_compass = "Lage Sensor";  // untranslated
Blockly.Msg.senseBox_bmx055_compass_tip = "Lage Sensor";  // untranslated
Blockly.Msg.senseBox_bmx055_gyroscope = "Lage Sensor";  // untranslated
Blockly.Msg.senseBox_bmx055_gyroscope_tip = "Lage Sensor";  // untranslated
Blockly.Msg.senseBox_bmx055_x = "X-Richtung";  // untranslated
Blockly.Msg.senseBox_bmx055_y = "Y-Richtung";  // untranslated
Blockly.Msg.senseBox_button = "Drucktaster";  // untranslated
Blockly.Msg.senseBox_button_tip = "Drucktaster";  // untranslated
Blockly.Msg.senseBox_display_beginDisplay = "Display initialisieren";  // untranslated
Blockly.Msg.senseBox_display_black = "Schwarz";  // untranslated
Blockly.Msg.senseBox_display_clearDisplay = "Display löschen";  // untranslated
Blockly.Msg.senseBox_display_clearDisplay_tip = "Löscht den Inhalt des Displays";  // untranslated
Blockly.Msg.senseBox_display_color = "Schriftfarbe";  // untranslated
Blockly.Msg.senseBox_display_plotDisplay = "Diagram zeichnen";  // untranslated
Blockly.Msg.senseBox_display_plotTimeFrame = "Zeitabschnitt";  // untranslated
Blockly.Msg.senseBox_display_plotXLabel = "X-Achsen Beschriftung";  // untranslated
Blockly.Msg.senseBox_display_plotXRange1 = "X-Wertebereich Anfang";  // untranslated
Blockly.Msg.senseBox_display_plotXRange2 = "X-Wertebereich Ende";  // untranslated
Blockly.Msg.senseBox_display_plotXTick = "X-Linienabstand";  // untranslated
Blockly.Msg.senseBox_display_plotYLabel = "Y-Achsen Beschriftung";  // untranslated
Blockly.Msg.senseBox_display_plotYRange1 = "Y-Wertebereich Anfang";  // untranslated
Blockly.Msg.senseBox_display_plotYRange2 = "Y-Wertebereich Ende";  // untranslated
Blockly.Msg.senseBox_display_plotYTick = "Y-Linienabstand";  // untranslated
Blockly.Msg.senseBox_display_printDisplay = "";  // untranslated
Blockly.Msg.senseBox_display_printDisplay_tip = "zeigt Wert auf dem Display an.";  // untranslated
Blockly.Msg.senseBox_display_printDisplay_value = "Wert";  // untranslated
Blockly.Msg.senseBox_display_printDisplay_x = "x";  // untranslated
Blockly.Msg.senseBox_display_printDisplay_y = "y";  // untranslated
Blockly.Msg.senseBox_display_setSize = "Schriftgröße";  // untranslated
Blockly.Msg.senseBox_display_setSize_tip = "Ändere die Schriftgröße auf einen Wert zwischen 1 und 10.";  // untranslated
Blockly.Msg.senseBox_display_white = "Weiß";  // untranslated
Blockly.Msg.senseBox_foto = "Fotowiderstand";  // untranslated
Blockly.Msg.senseBox_foto_tip = "Fotowiderstand";  // untranslated
Blockly.Msg.senseBox_gps_alt = "Höhe über NN in m";  // untranslated
Blockly.Msg.senseBox_gps_getValues = "GPS Modul";  // untranslated
Blockly.Msg.senseBox_gps_getValues_tip = "ruft das GPS Signal ab";  // untranslated
Blockly.Msg.senseBox_gps_lat = "Breitengrad";  // untranslated
Blockly.Msg.senseBox_gps_lng = "Längengrad";  // untranslated
Blockly.Msg.senseBox_gps_speed = "Geschwindigkeit in km/h";  // untranslated
Blockly.Msg.senseBox_hum = "Luftfeuchtigkeit in %";  // untranslated
Blockly.Msg.senseBox_hum_tip = "Luftfeuchtigkeit";  // untranslated
Blockly.Msg.senseBox_interval = "ms";  // untranslated
Blockly.Msg.senseBox_interval_timer = "Messintervall";  // untranslated
Blockly.Msg.senseBox_interval_timer_tip = "Intervall";  // untranslated
Blockly.Msg.senseBox_ir = "Infrarot Abstandssensor";  // untranslated
Blockly.Msg.senseBox_ir_tip = "Infrarot Abstandssensor";  // untranslated
Blockly.Msg.senseBox_led = "LED an digital";  // untranslated
Blockly.Msg.senseBox_led_tip = "Einfache LED. Beim Anschluss sollte immer ein Vorwiderstand verwendet werden";  // untranslated
Blockly.Msg.senseBox_light = "Beleuchtungsstärke in Lux";  // untranslated
Blockly.Msg.senseBox_lux = "Helligkeitssensor";  // untranslated
Blockly.Msg.senseBox_lux_tip = "Helligkeitssensor";  // untranslated
Blockly.Msg.senseBox_off = "Aus";  // untranslated
Blockly.Msg.senseBox_on = "Ein";  // untranslated
Blockly.Msg.senseBox_osem_connection = "Verbinde mit openSenseMap";  // untranslated
Blockly.Msg.senseBox_osem_connection_tip = "stellt eine WLAN verbindung her";  // untranslated
Blockly.Msg.senseBox_output_filename = "Daten";  // untranslated
Blockly.Msg.senseBox_output_format = "Format:";  // untranslated
Blockly.Msg.senseBox_output_linebreak = "Zeilenumbruch";  // untranslated
Blockly.Msg.senseBox_output_networkid = "NetzwerkID";  // untranslated
Blockly.Msg.senseBox_output_password = "Passwort";  // untranslated
Blockly.Msg.senseBox_output_safetosd = "Auf SD Karte speichern";  // untranslated
Blockly.Msg.senseBox_output_safetosd_tip = "Speichert Messwerte auf SD Karte";  // untranslated
Blockly.Msg.senseBox_output_serialprint = "Auf Kommandozeile ausgeben";  // untranslated
Blockly.Msg.senseBox_output_timestamp = "Zeitstempel";  // untranslated
Blockly.Msg.senseBox_piezo = "Piezo an digital";  // untranslated
Blockly.Msg.senseBox_piezo_tip = "Piezo an digital PIN. Beim Anschluss sollte immer ein Vorwiderstand verwendet werden";  // untranslated
Blockly.Msg.senseBox_poti = "Potenziometer";  // untranslated
Blockly.Msg.senseBox_poti_tip = "Potenziometer";  // untranslated
Blockly.Msg.senseBox_pressure = "Luftdruck in Pa";  // untranslated
Blockly.Msg.senseBox_pressure_dimension = "Luftdruck in Pa";  // untranslated
Blockly.Msg.senseBox_pressure_sensor = "Luftdruck/Temperatur Sensor (BMP280)";  // untranslated
Blockly.Msg.senseBox_pressure_tip = "Luftdrucksensor";  // untranslated
Blockly.Msg.senseBox_rgb_led = "RGB-LED";  // untranslated
Blockly.Msg.senseBox_rgb_led_tip = "RGB-LED benötigt einen digitalen Pin und eine Stromkreis ";  // untranslated
Blockly.Msg.senseBox_sd_create_file = "Erstelle Datei auf SD-Karte";  // untranslated
Blockly.Msg.senseBox_sd_open_file = "Öffne eine Datei auf der SD-Karte";  // untranslated
Blockly.Msg.senseBox_sd_write_file = " Schreibe Daten auf SD-Karte";  // untranslated
Blockly.Msg.senseBox_sds011 = "Feinstaubsensor";  // untranslated
Blockly.Msg.senseBox_sds011_dimension = "in µg/m³ an";  // untranslated
Blockly.Msg.senseBox_sds011_pm10 = "PM10";  // untranslated
Blockly.Msg.senseBox_sds011_pm25 = "PM2.5";  // untranslated
Blockly.Msg.senseBox_sds011_serial1 = "Serial1";  // untranslated
Blockly.Msg.senseBox_sds011_serial2 = "Serial2";  // untranslated
Blockly.Msg.senseBox_sds011_tip = "Misst die Feinstaubbelastung";  // untranslated
Blockly.Msg.senseBox_send_mobile_to_osem = "Sende Messwert und Standort";  // untranslated
Blockly.Msg.senseBox_send_mobile_to_osem_tip = "Sende Messwert und Standort an die openSenseMap";  // untranslated
Blockly.Msg.senseBox_send_to_osem = "sende Messwert an die openSenseMap";  // untranslated
Blockly.Msg.senseBox_send_to_osem_tip = "sende Messwert an";  // untranslated
Blockly.Msg.senseBox_sensor = "Sensoren";  // untranslated
Blockly.Msg.senseBox_serial_tip = "Gibt Messwerte oder Daten auf dem Seriellen Monitor der Arduino IDE aus. Praktisch um ohne Display zu arbeiten";  // untranslated
Blockly.Msg.senseBox_sound = "Geräuschsensor";  // untranslated
Blockly.Msg.senseBox_sound_tip = "Geräuschsensor";  // untranslated
Blockly.Msg.senseBox_temp = "Temperatur in °C";  // untranslated
Blockly.Msg.senseBox_temp_hum = "Temperatur/Luftfeuchtigkeitssensor (HDC1080)";  // untranslated
Blockly.Msg.senseBox_temp_hum_tip = "Sensor misst Temperatur und Luftfeuchtigkeit";  // untranslated
Blockly.Msg.senseBox_ultrasonic = "Ultraschall Abstandssensor an Port";  // untranslated
Blockly.Msg.senseBox_ultrasonic_port_A = "A";  // untranslated
Blockly.Msg.senseBox_ultrasonic_port_B = "B";  // untranslated
Blockly.Msg.senseBox_ultrasonic_port_C = "C";  // untranslated
Blockly.Msg.senseBox_ultrasonic_tip = "Ultraschall Abstandssensor";  // untranslated
Blockly.Msg.senseBox_uv = "UV-Intensität in µW/cm²";  // untranslated
Blockly.Msg.senseBox_uv_light = "Licht Sichtbar + UV Sensor";  // untranslated
Blockly.Msg.senseBox_uv_light_tip = "Sensor misst UV-Licht oder Die Helligkeit";  // untranslated
Blockly.Msg.senseBox_value = "Messwert:";  // untranslated
Blockly.Msg.senseBox_wifi_tip = "stellt eine WLAN verbindung her";  // untranslated
Blockly.Msg.sensebox_display_show = "Zeige auf dem Display";  // untranslated
Blockly.Msg.sensebox_display_show_tip = "Zeigt den Nachfolgenden Inhalt auf dem Bildschirm";  // untranslated
Blockly.Msg.sensebox_sd_filename = "Daten";  // untranslated
