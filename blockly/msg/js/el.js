// This file was automatically generated.  Do not modify.

'use strict';

goog.provide('Blockly.Msg.el');

goog.require('Blockly.Msg');

Blockly.Msg.ADD_COMMENT = "Πρόσθεσε Το Σχόλιο";
Blockly.Msg.AUTH = "Παρακαλώ κάνε έγκριση της εφαρμογής για να επιτρέπεται  η αποθήκευση και κοινοποίηση της εργασίας σου.";
Blockly.Msg.CHANGE_VALUE_TITLE = "Άλλαξε την τιμή:";
Blockly.Msg.CHAT = "Μπορείς να μιλήσεις με τον συνεργάτη σου πληκτρολογώντας σ'αυτό το πλαίσιο!";
Blockly.Msg.CLEAN_UP = "Clean up Blocks";  // untranslated
Blockly.Msg.COLLAPSE_ALL = "Σύμπτυξτε Όλα Τα Μπλοκ";
Blockly.Msg.COLLAPSE_BLOCK = "Σύμπτυξε Το Μπλοκ";
Blockly.Msg.COLOUR_BLEND_COLOUR1 = "χρώμα 1";
Blockly.Msg.COLOUR_BLEND_COLOUR2 = "χρώμα 2";
Blockly.Msg.COLOUR_BLEND_HELPURL = "http://meyerweb.com/eric/tools/color-blend/";
Blockly.Msg.COLOUR_BLEND_RATIO = "αναλογία";
Blockly.Msg.COLOUR_BLEND_TITLE = "μείγμα";
Blockly.Msg.COLOUR_BLEND_TOOLTIP = "Συνδυάζει δύο χρώματα μαζί με μια δεδομένη αναλογία (0.0 - 1,0).";
Blockly.Msg.COLOUR_PICKER_HELPURL = "https://el.wikipedia.org/wiki/%CE%A7%CF%81%CF%8E%CE%BC%CE%B1";
Blockly.Msg.COLOUR_PICKER_TOOLTIP = "Επιτρέπει επιλογή χρώματος από την παλέτα.";
Blockly.Msg.COLOUR_RANDOM_HELPURL = "http://randomcolour.com";  // untranslated
Blockly.Msg.COLOUR_RANDOM_TITLE = "τυχαίο χρώμα";
Blockly.Msg.COLOUR_RANDOM_TOOLTIP = "Επιλέγει χρώμα τυχαία.";
Blockly.Msg.COLOUR_RGB_BLUE = "μπλε";
Blockly.Msg.COLOUR_RGB_GREEN = "πράσινο";
Blockly.Msg.COLOUR_RGB_HELPURL = "http://www.december.com/html/spec/colorper.html";
Blockly.Msg.COLOUR_RGB_RED = "κόκκινο";
Blockly.Msg.COLOUR_RGB_TITLE = "χρώμα με";
Blockly.Msg.COLOUR_RGB_TOOLTIP = "Δημιουργεί χρώμα με το συγκεκριμένο ποσό του κόκκινου, πράσινου και μπλε που ορίζεις. Όλες οι τιμές πρέπει να είναι μεταξύ 0 και 100.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_HELPURL = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = "φεύγει από το μπλοκ επαναλήψεως";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = "συνέχισε με την επόμενη επανάληψη του μπλοκ επαναλήψεως";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = "Ξεφεύγει (βγαίνει έξω) από την επανάληψη.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = "Παραλείπει το υπόλοιπο τμήμα αυτού του μπλοκ επαναλήψεως, και συνεχίζει με την επόμενη επανάληψη.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_WARNING = "Προειδοποίηση: Αυτό το μπλοκ μπορεί να χρησιμοποιηθεί μόνο μέσα σε μια επανάληψη.";
Blockly.Msg.CONTROLS_FOREACH_HELPURL = "https://github.com/google/blockly/wiki/Loops#for-each";  // untranslated
Blockly.Msg.CONTROLS_FOREACH_TITLE = "για κάθε στοιχείο %1 στη λίστα %2";
Blockly.Msg.CONTROLS_FOREACH_TOOLTIP = "Για κάθε στοιχείο σε μια λίστα, ορίζει τη μεταβλητή «%1» στο στοιχείο και, στη συνέχεια, εκτελεί κάποιες εντολές.";
Blockly.Msg.CONTROLS_FOR_HELPURL = "Blockly";
Blockly.Msg.CONTROLS_FOR_TITLE = "μέτρησε με %1 από το %2 έως το %3 ανά %4";
Blockly.Msg.CONTROLS_FOR_TOOLTIP = "Η μεταβλητή «%1» παίρνει τιμές ξεκινώντας από τον αριθμό έναρξης μέχρι τον αριθμό τέλους αυξάνοντας κάθε φορά με το καθορισμένο βήμα και εκτελώντας το καθορισμένο μπλοκ.";
Blockly.Msg.CONTROLS_IF_ELSEIF_TOOLTIP = "Πρόσθετει μια κατάσταση/συνθήκη στο μπλοκ «εάν».";
Blockly.Msg.CONTROLS_IF_ELSE_TOOLTIP = "Προσθέτει μια τελική κατάσταση/συνθήκη, που πιάνει όλες τις άλλες περιπτώσεις, στο μπλοκ «εάν».";
Blockly.Msg.CONTROLS_IF_HELPURL = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
Blockly.Msg.CONTROLS_IF_IF_TOOLTIP = "Προσθέτει, αφαιρεί ή αναδιατάσσει τα τμήματα για να αναδιαμορφώσει αυτό το μπλοκ «εάν».";
Blockly.Msg.CONTROLS_IF_MSG_ELSE = "αλλιώς";
Blockly.Msg.CONTROLS_IF_MSG_ELSEIF = "εναλλακτικά εάν";
Blockly.Msg.CONTROLS_IF_MSG_IF = "εάν";
Blockly.Msg.CONTROLS_IF_TOOLTIP_1 = "Αν μια τιμή είναι αληθής, τότε εκτελεί κάποιες εντολές.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_2 = "Αν μια τιμή είναι αληθής, τότε εκτελεί το πρώτο τμήμα εντολών. Διαφορετικά, εκτελεί το δεύτερο τμήμα εντολών.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_3 = "Αν η πρώτη τιμή είναι αληθής, τότε εκτελεί το πρώτο τμήμα εντολών. Διαφορετικά, αν η δεύτερη τιμή είναι αληθής, εκτελεί το δεύτερο μπλοκ εντολών.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_4 = "Αν η πρώτη τιμή είναι αληθής, τότε εκτελεί το πρώτο τμήμα εντολών.  Διαφορετικά, αν η δεύτερη τιμή είναι αληθής, εκτελεί το δεύτερο τμήμα εντολών. Αν καμία από τις τιμές δεν είναι αληθής, εκτελεί το τελευταίο τμήμα εντολών.";
Blockly.Msg.CONTROLS_REPEAT_HELPURL = "https://en.wikipedia.org/wiki/For_loop";
Blockly.Msg.CONTROLS_REPEAT_INPUT_DO = "κάνε";
Blockly.Msg.CONTROLS_REPEAT_TITLE = "επανάλαβε %1 φορές";
Blockly.Msg.CONTROLS_REPEAT_TOOLTIP = "Εκτελεί κάποιες εντολές αρκετές φορές.";
Blockly.Msg.CONTROLS_WHILEUNTIL_HELPURL = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = "επανάλαβε μέχρι";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_WHILE = "επανάλαβε ενώ";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = "Ενόσω μια τιμή είναι ψευδής, τότε εκτελεί κάποιες εντολές.";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = "Ενόσω μια τιμή είναι αληθής, τότε εκτελεί κάποιες εντολές.";
Blockly.Msg.DELETE_ALL_BLOCKS = "Να διαγραφούν και τα %1 μπλοκ?";
Blockly.Msg.DELETE_BLOCK = "Διέγραψε Το Μπλοκ";
Blockly.Msg.DELETE_X_BLOCKS = "Διέγραψε %1 Μπλοκ";
Blockly.Msg.DISABLE_BLOCK = "Απενεργοποίησε Το Μπλοκ";
Blockly.Msg.DUPLICATE_BLOCK = "Διπλότυπο";
Blockly.Msg.ENABLE_BLOCK = "Ενεργοποίησε Το Μπλοκ";
Blockly.Msg.EXPAND_ALL = "Επέκτεινε Όλα Τα Μπλοκ";
Blockly.Msg.EXPAND_BLOCK = "Επέκτεινε Το Μπλοκ";
Blockly.Msg.EXTERNAL_INPUTS = "Εξωτερικές Είσοδοι";
Blockly.Msg.HELP = "Βοήθεια";
Blockly.Msg.INLINE_INPUTS = "Εσωτερικές Είσοδοι";
Blockly.Msg.LISTS_CREATE_EMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-empty-list";
Blockly.Msg.LISTS_CREATE_EMPTY_TITLE = "δημιούργησε κενή λίστα";
Blockly.Msg.LISTS_CREATE_EMPTY_TOOLTIP = "Επιστρέφει μια λίστα, με μήκος 0, η οποία δεν περιέχει εγγραφές δεδομένων";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = "λίστα";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TOOLTIP = "Προσθέτει, αφαιρεί ή αναδιατάσσει τα τμήματα για να αναδιαμορφώσει αυτό το μπλοκ λίστας.";
Blockly.Msg.LISTS_CREATE_WITH_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg.LISTS_CREATE_WITH_INPUT_WITH = "δημιούργησε λίστα με";
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TOOLTIP = "Προσθέτει αντικείμενο στη λίστα.";
Blockly.Msg.LISTS_CREATE_WITH_TOOLTIP = "Δημιουργεί λίστα με οποιονδήποτε αριθμό αντικειμένων.";
Blockly.Msg.LISTS_GET_INDEX_FIRST = "πρώτο";
Blockly.Msg.LISTS_GET_INDEX_FROM_END = "# από το τέλος";
Blockly.Msg.LISTS_GET_INDEX_FROM_START = "#";
Blockly.Msg.LISTS_GET_INDEX_GET = "πάρε";
Blockly.Msg.LISTS_GET_INDEX_GET_REMOVE = "πάρε και αφαίρεσε";
Blockly.Msg.LISTS_GET_INDEX_LAST = "τελευταίο";
Blockly.Msg.LISTS_GET_INDEX_RANDOM = "τυχαίο";
Blockly.Msg.LISTS_GET_INDEX_REMOVE = "αφαίρεσε";
Blockly.Msg.LISTS_GET_INDEX_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FIRST = "Επιστρέφει το πρώτο στοιχείο σε μια λίστα.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_END = "Επιστρέφει το στοιχείο στην καθορισμένη θέση σε μια λίστα. Το #1 είναι το τελευταίο στοιχείο.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_START = "Επιστρέφει το στοιχείο στην καθορισμένη θέση σε μια λίστα. Το #1 είναι το πρώτο στοιχείο.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_LAST = "Επιστρέφει το τελευταίο στοιχείο σε μια λίστα.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_RANDOM = "Επιστρέφει ένα τυχαίο στοιχείο σε μια λίστα.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST = "Καταργεί και επιστρέφει το πρώτο στοιχείο σε μια λίστα.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_END = "Καταργεί και επιστρέφει το στοιχείο στην καθορισμένη θέση σε μια λίστα. Το #1 είναι το τελευταίο στοιχείο.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_START = "Καταργεί και επιστρέφει το στοιχείο στην καθορισμένη θέση σε μια λίστα. Το #1 είναι το πρώτο στοιχείο.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST = "Καταργεί και επιστρέφει το τελευταίο στοιχείο σε μια λίστα.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM = "Καταργεί και επιστρέφει ένα τυχαίο στοιχείο σε μια λίστα.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST = "Καταργεί το πρώτο στοιχείο σε μια λίστα.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_END = "Καταργεί το στοιχείο στην καθορισμένη θέση σε μια λίστα. Το #1 είναι το τελευταίο στοιχείο.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_START = "Καταργεί το στοιχείο στην καθορισμένη θέση σε μια λίστα. Το #1 είναι το πρώτο στοιχείο.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST = "Καταργεί το τελευταίο στοιχείο σε μια λίστα.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM = "Καταργεί ένα τυχαίο στοιχείο σε μια λίστα.";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_END = "έως # από το τέλος";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_START = "έως #";
Blockly.Msg.LISTS_GET_SUBLIST_END_LAST = "έως το τελευταίο";
Blockly.Msg.LISTS_GET_SUBLIST_HELPURL = "Blockly";
Blockly.Msg.LISTS_GET_SUBLIST_START_FIRST = "πάρε υπολίστα από την αρχή";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_END = "πάρε υπολίστα από # από το τέλος";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_START = "πάρε υπολίστα από #";
Blockly.Msg.LISTS_GET_SUBLIST_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_TOOLTIP = "Δημιουργεί ένα αντίγραφο του καθορισμένου τμήματος μιας λίστας.";
Blockly.Msg.LISTS_INDEX_OF_FIRST = "βρες την πρώτη εμφάνιση του στοιχείου";
Blockly.Msg.LISTS_INDEX_OF_HELPURL = "Blockly";
Blockly.Msg.LISTS_INDEX_OF_LAST = "βρες την τελευταία εμφάνιση του στοιχείου";
Blockly.Msg.LISTS_INDEX_OF_TOOLTIP = "Επιστρέφει τον δείκτη της πρώτης/τελευταίας εμφάνισης του στοιχείου στη λίστα.  Επιστρέφει τιμή 0, αν το στοιχείο δεν βρεθεί.";
Blockly.Msg.LISTS_INLIST = "στη λίστα";
Blockly.Msg.LISTS_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
Blockly.Msg.LISTS_ISEMPTY_TITLE = "το %1 είναι κενό";
Blockly.Msg.LISTS_ISEMPTY_TOOLTIP = "Επιστρέφει αληθής αν η λίστα είναι κενή.";
Blockly.Msg.LISTS_LENGTH_HELPURL = "Blockly";
Blockly.Msg.LISTS_LENGTH_TITLE = "το μήκος του %1";
Blockly.Msg.LISTS_LENGTH_TOOLTIP = "Επιστρέφει το μήκος μιας λίστας.";
Blockly.Msg.LISTS_REPEAT_HELPURL = "Blockly";
Blockly.Msg.LISTS_REPEAT_TITLE = "δημιούργησε λίστα με το στοιχείο %1 να επαναλαμβάνεται %2 φορές";
Blockly.Msg.LISTS_REPEAT_TOOLTIP = "Δημιουργεί μια λίστα που αποτελείται από την δεδομένη τιμή που επαναλαμβάνεται για συγκεκριμένο αριθμό επαναλήψεων.";
Blockly.Msg.LISTS_SET_INDEX_HELPURL = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_INPUT_TO = "σε";
Blockly.Msg.LISTS_SET_INDEX_INSERT = "είσαγε στο";
Blockly.Msg.LISTS_SET_INDEX_SET = "όρισε";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST = "Εισάγει το στοιχείο στην αρχή μιας λίστας.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_END = "Εισάγει το στοιχείο σε συγκεκριμένη θέση σε μια λίστα. Το #1 είναι το τελευταίο στοιχείο.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_START = "Εισάγει το στοιχείο στην καθορισμένη θέση σε μια λίστα. Το #1 είναι το πρώτο στοιχείο.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_LAST = "Αναθέτει το στοιχείο στο τέλος μιας λίστας.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM = "Εισάγει το στοιχείο τυχαία σε μια λίστα.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FIRST = "Ορίζει το πρώτο στοιχείο σε μια λίστα.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_END = "Ορίζει το στοιχείο στην καθορισμένη θέση σε μια λίστα. Το #1 είναι το τελευταίο στοιχείο.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_START = "Ορίζει το στοιχείο στην καθορισμένη θέση σε μια λίστα. Το #1 είναι το πρώτο στοιχείο.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_LAST = "Ορίζει το τελευταίο στοιχείο σε μια λίστα.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_RANDOM = "Ορίζει ένα τυχαίο στοιχείο σε μια λίστα.";
Blockly.Msg.LISTS_SORT_HELPURL = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";  // untranslated
Blockly.Msg.LISTS_SORT_ORDER_ASCENDING = "ascending";  // untranslated
Blockly.Msg.LISTS_SORT_ORDER_DESCENDING = "descending";  // untranslated
Blockly.Msg.LISTS_SORT_TITLE = "sort %1 %2 %3";  // untranslated
Blockly.Msg.LISTS_SORT_TOOLTIP = "Sort a copy of a list.";  // untranslated
Blockly.Msg.LISTS_SORT_TYPE_IGNORECASE = "alphabetic, ignore case";  // untranslated
Blockly.Msg.LISTS_SORT_TYPE_NUMERIC = "numeric";  // untranslated
Blockly.Msg.LISTS_SORT_TYPE_TEXT = "alphabetic";  // untranslated
Blockly.Msg.LISTS_SPLIT_HELPURL = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";  // untranslated
Blockly.Msg.LISTS_SPLIT_LIST_FROM_TEXT = "κάνετε λίστα από το κείμενο";
Blockly.Msg.LISTS_SPLIT_TEXT_FROM_LIST = "κάνετε κείμενο από τη λίστα";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_JOIN = "Ενώστε μια λίστα κειμένων σε ένα κείμενο, που χωρίζονται από ένα διαχωριστικό.";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_SPLIT = "Διαίρεση του κειμένου σε μια λίστα κειμένων, με σπάσιμο σε κάθε διαχωριστικό.";
Blockly.Msg.LISTS_SPLIT_WITH_DELIMITER = "με διαχωριστικό";
Blockly.Msg.LOGIC_BOOLEAN_FALSE = "ψευδής";
Blockly.Msg.LOGIC_BOOLEAN_HELPURL = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
Blockly.Msg.LOGIC_BOOLEAN_TOOLTIP = "Επιστρέφει είτε αληθής είτε ψευδής.";
Blockly.Msg.LOGIC_BOOLEAN_TRUE = "αληθής";
Blockly.Msg.LOGIC_COMPARE_HELPURL = "https://en.wikipedia.org/wiki/Inequality_(mathematics)";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ = "Επιστρέφει αληθής αν και οι δύο είσοδοι είναι ίσες μεταξύ τους.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT = "Επιστρέφει αληθής αν η πρώτη είσοδος είναι μεγαλύτερη από τη δεύτερη είσοδο.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE = "Επιστρέφει αληθής αν η πρώτη είσοδος είναι μικρότερη ή ίση με τη δεύτερη είσοδο.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT = "Επιστρέφει αληθής αν η πρώτη είσοδος είναι μικρότερη από τη δεύτερη είσοδο.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE = "Επιστρέφει αληθής αν η πρώτη είσοδος είναι μικρότερη από ή ίση με τη δεύτερη είσοδο.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ = "Επιστρέφει αληθής αν και οι δύο είσοδοι δεν είναι ίσες μεταξύ τους.";
Blockly.Msg.LOGIC_NEGATE_HELPURL = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
Blockly.Msg.LOGIC_NEGATE_TITLE = "όχι %1";
Blockly.Msg.LOGIC_NEGATE_TOOLTIP = "Επιστρέφει αληθής αν η είσοδος είναι ψευδής. Επιστρέφει ψευδής αν η είσοδος είναι αληθής.";
Blockly.Msg.LOGIC_NULL = "κενό";
Blockly.Msg.LOGIC_NULL_HELPURL = "https://en.wikipedia.org/wiki/Nullable_type";
Blockly.Msg.LOGIC_NULL_TOOLTIP = "Επιστρέφει κενό.";
Blockly.Msg.LOGIC_OPERATION_AND = "και";
Blockly.Msg.LOGIC_OPERATION_HELPURL = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
Blockly.Msg.LOGIC_OPERATION_OR = "ή";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_AND = "Επιστρέφει αληθής αν και οι δύο είσοδοι είναι αληθής.";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_OR = "Επιστρέφει αληθής αν τουλάχιστον μια από τις εισόδους είναι αληθής.";
Blockly.Msg.LOGIC_TERNARY_CONDITION = "έλεγχος";
Blockly.Msg.LOGIC_TERNARY_HELPURL = "https://en.wikipedia.org/wiki/%3F:";
Blockly.Msg.LOGIC_TERNARY_IF_FALSE = "εάν είναι ψευδής";
Blockly.Msg.LOGIC_TERNARY_IF_TRUE = "εάν είναι αληθής";
Blockly.Msg.LOGIC_TERNARY_TOOLTIP = "Ελέγχει την κατάσταση/συνθήκη στον «έλεγχο». Αν η κατάσταση/συνθήκη είναι αληθής, επιστρέφει την τιμή «εάν αληθής», διαφορετικά επιστρέφει την τιμή «εάν ψευδής».";
Blockly.Msg.MATH_ADDITION_SYMBOL = "+";
Blockly.Msg.MATH_ARITHMETIC_HELPURL = "https://el.wikipedia.org/wiki/%CE%91%CF%81%CE%B9%CE%B8%CE%BC%CE%B7%CF%84%CE%B9%CE%BA%CE%AE";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_ADD = "Επιστρέφει το άθροισμα των δύο αριθμών.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_DIVIDE = "Επιστρέφει το πηλίκο των δύο αριθμών.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MINUS = "Επιστρέφει τη διαφορά των δύο αριθμών.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MULTIPLY = "Επιστρέφει το γινόμενο των δύο αριθμών.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_POWER = "Επιστρέφει τον πρώτο αριθμό υψωμένο στη δύναμη του δεύτερου αριθμού.";
Blockly.Msg.MATH_CHANGE_HELPURL = "https://el.wikipedia.org/wiki/%CE%A0%CF%81%CF%8C%CF%83%CE%B8%CE%B5%CF%83%CE%B7";
Blockly.Msg.MATH_CHANGE_TITLE = "άλλαξε %1 από %2";
Blockly.Msg.MATH_CHANGE_TOOLTIP = "Προσθέτει έναν αριθμό στη μεταβλητή «%1».";
Blockly.Msg.MATH_CONSTANT_HELPURL = "https://en.wikipedia.org/wiki/Mathematical_constant";
Blockly.Msg.MATH_CONSTANT_TOOLTIP = "Επιστρέφει μία από τις κοινές σταθερές: π (3.141...), e (2.718...), φ (1.618...), sqrt(2) (1.414...), sqrt(½) (0.707...), ή ∞ (άπειρο).";
Blockly.Msg.MATH_CONSTRAIN_HELPURL = "https://en.wikipedia.org/wiki/Clamping_%28graphics%29";  // untranslated
Blockly.Msg.MATH_CONSTRAIN_TITLE = "περιόρισε %1 χαμηλή %2 υψηλή %3";
Blockly.Msg.MATH_CONSTRAIN_TOOLTIP = "Περιορίζει έναν αριθμό μεταξύ των προβλεπόμενων ορίων (χωρίς αποκλεισμούς).";
Blockly.Msg.MATH_DIVISION_SYMBOL = "÷";
Blockly.Msg.MATH_IS_DIVISIBLE_BY = "είναι διαιρετός από το";
Blockly.Msg.MATH_IS_EVEN = "είναι άρτιος";
Blockly.Msg.MATH_IS_NEGATIVE = "είναι αρνητικός";
Blockly.Msg.MATH_IS_ODD = "είναι περιττός";
Blockly.Msg.MATH_IS_POSITIVE = "είναι θετικός";
Blockly.Msg.MATH_IS_PRIME = "είναι πρώτος";
Blockly.Msg.MATH_IS_TOOLTIP = "Ελέγχει αν ένας αριθμός είναι άρτιος, περιττός, πρώτος, ακέραιος, θετικός, αρνητικός, ή αν είναι διαιρετός από έναν ορισμένο αριθμό. Επιστρέφει αληθής ή ψευδής.";
Blockly.Msg.MATH_IS_WHOLE = "είναι ακέραιος";
Blockly.Msg.MATH_MODULO_HELPURL = "https://en.wikipedia.org/wiki/Modulo_operation";
Blockly.Msg.MATH_MODULO_TITLE = "υπόλοιπο της %1 ÷ %2";
Blockly.Msg.MATH_MODULO_TOOLTIP = "Επιστρέφει το υπόλοιπο της διαίρεσης των δύο αριθμών.";
Blockly.Msg.MATH_MULTIPLICATION_SYMBOL = "×";
Blockly.Msg.MATH_NUMBER_HELPURL = "https://el.wikipedia.org/wiki/%CE%91%CF%81%CE%B9%CE%B8%CE%BC%CF%8C%CF%82";
Blockly.Msg.MATH_NUMBER_TOOLTIP = "Ένας αριθμός.";
Blockly.Msg.MATH_ONLIST_HELPURL = "";  // untranslated
Blockly.Msg.MATH_ONLIST_OPERATOR_AVERAGE = "μέσος όρος λίστας";
Blockly.Msg.MATH_ONLIST_OPERATOR_MAX = "μεγαλύτερος λίστας";
Blockly.Msg.MATH_ONLIST_OPERATOR_MEDIAN = "διάμεσος λίστας";
Blockly.Msg.MATH_ONLIST_OPERATOR_MIN = "μικρότερος λίστας";
Blockly.Msg.MATH_ONLIST_OPERATOR_MODE = "μορφές λίστας";
Blockly.Msg.MATH_ONLIST_OPERATOR_RANDOM = "τυχαίο στοιχείο λίστας";
Blockly.Msg.MATH_ONLIST_OPERATOR_STD_DEV = "τυπική απόκλιση λίστας";
Blockly.Msg.MATH_ONLIST_OPERATOR_SUM = "άθροισμα λίστας";
Blockly.Msg.MATH_ONLIST_TOOLTIP_AVERAGE = "Επιστρέφει τον αριθμητικό μέσο όρο από τις αριθμητικές τιμές στη λίστα.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MAX = "Επιστρέφει τον μεγαλύτερο αριθμό στη λίστα.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MEDIAN = "Επιστρέφει τον διάμεσο της λίστας.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MIN = "Επιστρέφει τον μικρότερο αριθμό στη λίστα.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MODE = "Επιστρέφει μια λίστα με τα πιο κοινά στοιχεία στη λίστα.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_RANDOM = "Επιστρέφει ένα τυχαίο στοιχείο από τη λίστα.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_STD_DEV = "Επιστρέφει την τυπική απόκλιση της λίστας.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_SUM = "Επιστρέφει το άθροισμα όλων των αριθμών στη λίστα.";
Blockly.Msg.MATH_POWER_SYMBOL = "^ ύψωση σε δύναμη";
Blockly.Msg.MATH_RANDOM_FLOAT_HELPURL = "https://el.wikipedia.org/wiki/%CE%93%CE%B5%CE%BD%CE%BD%CE%AE%CF%84%CF%81%CE%B9%CE%B1_%CE%A4%CF%85%CF%87%CE%B1%CE%AF%CF%89%CE%BD_%CE%91%CF%81%CE%B9%CE%B8%CE%BC%CF%8E%CE%BD";
Blockly.Msg.MATH_RANDOM_FLOAT_TITLE_RANDOM = "τυχαίο κλάσμα";
Blockly.Msg.MATH_RANDOM_FLOAT_TOOLTIP = "Επιστρέψει ένα τυχαία κλάσμα μεταξύ 0,0 (κλειστό) και 1,0 (ανοικτό).";
Blockly.Msg.MATH_RANDOM_INT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg.MATH_RANDOM_INT_TITLE = "τυχαίος ακέραιος από το %1 έως το %2";
Blockly.Msg.MATH_RANDOM_INT_TOOLTIP = "Επιστρέφει έναν τυχαίο ακέραιο αριθμό μεταξύ δύο συγκεκριμένων ορίων (εντός - συμπεριλαμβανομένων και των ακραίων τιμών).";
Blockly.Msg.MATH_ROUND_HELPURL = "https://en.wikipedia.org/wiki/Rounding";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUND = "στρογγυλοποίησε";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDDOWN = "στρογγυλοποίησε προς τα κάτω";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDUP = "στρογγυλοποίησε προς τα πάνω";
Blockly.Msg.MATH_ROUND_TOOLTIP = "Στρογγυλοποιεί έναν αριθμό προς τα πάνω ή προς τα κάτω.";
Blockly.Msg.MATH_SINGLE_HELPURL = "https://el.wikipedia.org/wiki/%CE%A4%CE%B5%CF%84%CF%81%CE%B1%CE%B3%CF%89%CE%BD%CE%B9%CE%BA%CE%AE_%CF%81%CE%AF%CE%B6%CE%B1";
Blockly.Msg.MATH_SINGLE_OP_ABSOLUTE = "απόλυτη";
Blockly.Msg.MATH_SINGLE_OP_ROOT = "τετραγωνική ρίζα";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ABS = "Επιστρέφει την απόλυτη τιμή ενός αριθμού.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_EXP = "Επιστρέφει το e υψωμένο στη δύναμη ενός αριθμού.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LN = "Επιστρέφει τον νεπέρειο λογάριθμο ενός αριθμού.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG10 = "Επιστρέφει τον λογάριθμο με βάση το 10 ενός αριθμού.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_NEG = "Επιστρέφει την αρνητική ενός αριθμού.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_POW10 = "Επιστρέφει το 10 υψωμένο στη δύναμη ενός αριθμού.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ROOT = "Επιστρέφει την τετραγωνική ρίζα ενός αριθμού.";
Blockly.Msg.MATH_SUBTRACTION_SYMBOL = "-";
Blockly.Msg.MATH_TRIG_ACOS = "acos";
Blockly.Msg.MATH_TRIG_ASIN = "asin";
Blockly.Msg.MATH_TRIG_ATAN = "atan";
Blockly.Msg.MATH_TRIG_COS = "συν";
Blockly.Msg.MATH_TRIG_HELPURL = "https://el.wikipedia.org/wiki/%CE%A4%CF%81%CE%B9%CE%B3%CF%89%CE%BD%CE%BF%CE%BC%CE%B5%CF%84%CF%81%CE%B9%CE%BA%CE%AE_%CF%83%CF%85%CE%BD%CE%AC%CF%81%CF%84%CE%B7%CF%83%CE%B7";
Blockly.Msg.MATH_TRIG_SIN = "ημ";
Blockly.Msg.MATH_TRIG_TAN = "εφ";
Blockly.Msg.MATH_TRIG_TOOLTIP_ACOS = "Επιστρέφει το τόξο συνημίτονου ενός αριθμού.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ASIN = "Επιστρέφει το τόξο ημίτονου ενός αριθμού.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ATAN = "Επιστρέφει το τόξο εφαπτομένης ενός αριθμού.";
Blockly.Msg.MATH_TRIG_TOOLTIP_COS = "Επιστρέφει το συνημίτονο ενός βαθμού (όχι ακτινίου).";
Blockly.Msg.MATH_TRIG_TOOLTIP_SIN = "Επιστρέφει το ημίτονο ενός βαθμού (όχι ακτινίου).";
Blockly.Msg.MATH_TRIG_TOOLTIP_TAN = "Επιστρέφει την εφαπτομένη ενός βαθμού (όχι ακτινίου).";
Blockly.Msg.ME = "Εγώ";
Blockly.Msg.NEW_VARIABLE = "Νέα μεταβλητή...";
Blockly.Msg.NEW_VARIABLE_TITLE = "Νέο όνομα μεταβλητής:";
Blockly.Msg.ORDINAL_NUMBER_SUFFIX = "";  // untranslated
Blockly.Msg.PROCEDURES_ALLOW_STATEMENTS = "να επιτρέπονται οι δηλώσεις";
Blockly.Msg.PROCEDURES_BEFORE_PARAMS = "με:";
Blockly.Msg.PROCEDURES_CALLNORETURN_HELPURL = "https://el.wikipedia.org/wiki/%CE%94%CE%B9%CE%B1%CE%B4%CE%B9%CE%BA%CE%B1%CF%83%CE%AF%CE%B1_%28%CF%85%CF%80%CE%BF%CE%BB%CE%BF%CE%B3%CE%B9%CF%83%CF%84%CE%AD%CF%82%29";
Blockly.Msg.PROCEDURES_CALLNORETURN_TOOLTIP = "Εκτελεί την ορισμένη από τον χρήστη συνάρτηση «%1».";
Blockly.Msg.PROCEDURES_CALLRETURN_HELPURL = "https://el.wikipedia.org/wiki/%CE%94%CE%B9%CE%B1%CE%B4%CE%B9%CE%BA%CE%B1%CF%83%CE%AF%CE%B1_%28%CF%85%CF%80%CE%BF%CE%BB%CE%BF%CE%B3%CE%B9%CF%83%CF%84%CE%AD%CF%82%29";
Blockly.Msg.PROCEDURES_CALLRETURN_TOOLTIP = "Εκτελεί την ορισμένη από τον χρήστη συνάρτηση «%1» και χρησιμοποίησε την έξοδό της.";
Blockly.Msg.PROCEDURES_CALL_BEFORE_PARAMS = "με:";
Blockly.Msg.PROCEDURES_CREATE_DO = "Δημιούργησε «%1»";
Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT = "Describe this function...";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_DO = "";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE = "κάνε κάτι";
Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE = "στο";
Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP = "Δημιουργεί μια συνάρτηση χωρίς έξοδο.";
Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_DEFRETURN_RETURN = "επέστρεψε";
Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP = "Δημιουργεί μια συνάρτηση με μια έξοδο.";
Blockly.Msg.PROCEDURES_DEF_DUPLICATE_WARNING = "Προειδοποίηση: Αυτή η συνάρτηση έχει διπλότυπες παραμέτρους.";
Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF = "Επισημάνετε τον ορισμό συνάρτησης";
Blockly.Msg.PROCEDURES_IFRETURN_HELPURL = "http://c2.com/cgi/wiki?GuardClause";  // untranslated
Blockly.Msg.PROCEDURES_IFRETURN_TOOLTIP = "Αν μια τιμή είναι αληθής, τότε επιστρέφει τη δεύτερη τιμή.";
Blockly.Msg.PROCEDURES_IFRETURN_WARNING = "Προειδοποίηση: Αυτό το μπλοκ μπορεί να χρησιμοποιηθεί μόνο στον ορισμό μιας συνάρτησης.";
Blockly.Msg.PROCEDURES_MUTATORARG_TITLE = "όνομα εισόδου:";
Blockly.Msg.PROCEDURES_MUTATORARG_TOOLTIP = "Πρόσθεσε μια είσοδος στη συνάρτηση";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TITLE = "είσοδοι";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TOOLTIP = "Προσθέτει, αφαιρεί ή αναδιατάσσει εισόδους σε αυτήν τη λειτουργία";
Blockly.Msg.REDO = "Redo";  // untranslated
Blockly.Msg.REMOVE_COMMENT = "Αφαίρεσε Το Σχόλιο";
Blockly.Msg.RENAME_VARIABLE = "Μετονόμασε τη μεταβλητή...";
Blockly.Msg.RENAME_VARIABLE_TITLE = "Μετονόμασε όλες τις μεταβλητές «%1» σε:";
Blockly.Msg.TEXT_APPEND_APPENDTEXT = "ανάθεσε κείμενο";
Blockly.Msg.TEXT_APPEND_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_APPEND_TO = "έως";
Blockly.Msg.TEXT_APPEND_TOOLTIP = "Αναθέτει κείμενο στη μεταβλητή «%1».";
Blockly.Msg.TEXT_CHANGECASE_HELPURL = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_LOWERCASE = "σε πεζά";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_TITLECASE = "σε Λέξεις Με Πρώτα Κεφαλαία";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_UPPERCASE = "σε ΚΕΦΑΛΑΙΑ";
Blockly.Msg.TEXT_CHANGECASE_TOOLTIP = "Επιστρέφει ένα αντίγραφο του κειμένου σε διαφορετική μορφή γραμμάτων.";
Blockly.Msg.TEXT_CHARAT_FIRST = "πάρε το πρώτο γράμμα";
Blockly.Msg.TEXT_CHARAT_FROM_END = "πάρε το γράμμα # από το τέλος";
Blockly.Msg.TEXT_CHARAT_FROM_START = "πάρε το γράμμα #";
Blockly.Msg.TEXT_CHARAT_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
Blockly.Msg.TEXT_CHARAT_INPUT_INTEXT = "στο κείμενο";
Blockly.Msg.TEXT_CHARAT_LAST = "πάρε το τελευταίο γράμμα";
Blockly.Msg.TEXT_CHARAT_RANDOM = "πάρε τυχαίο γράμμα";
Blockly.Msg.TEXT_CHARAT_TAIL = "";  // untranslated
Blockly.Msg.TEXT_CHARAT_TOOLTIP = "Επιστρέφει το γράμμα στην καθορισμένη θέση.";
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TOOLTIP = "Προσθέτει ένα στοιχείο στο κείμενο.";
Blockly.Msg.TEXT_CREATE_JOIN_TITLE_JOIN = "ένωσε";
Blockly.Msg.TEXT_CREATE_JOIN_TOOLTIP = "Προσθέτει, αφαιρεί ή αναδιατάσσει τους τομείς για να αναδιαμορφώσει αυτό το μπλοκ κειμένου.";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_END = "μέχρι το # γράμμα από το τέλος";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_START = "μέχρι το # γράμμα";
Blockly.Msg.TEXT_GET_SUBSTRING_END_LAST = "μέχρι το τελευταίο γράμμα";
Blockly.Msg.TEXT_GET_SUBSTRING_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_INPUT_IN_TEXT = "στο κείμενο";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FIRST = "πάρε τη δευτερεύουσα συμβολοσειρά από το πρώτο γράμμα";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_END = "πάρε τη δευτερεύουσα συμβολοσειρά από το # γράμμα από το τέλος";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_START = "πάρε τη δευτερεύουσα συμβολοσειρά από το # γράμμα";
Blockly.Msg.TEXT_GET_SUBSTRING_TAIL = "";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_TOOLTIP = "Επιστρέφει ένα συγκεκριμένο τμήμα του κειμένου.";
Blockly.Msg.TEXT_INDEXOF_HELPURL = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
Blockly.Msg.TEXT_INDEXOF_INPUT_INTEXT = "στο κείμενο";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_FIRST = "βρες την πρώτη εμφάνιση του κειμένου";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_LAST = "βρες την τελευταία εμφάνιση του κειμένου";
Blockly.Msg.TEXT_INDEXOF_TAIL = "";  // untranslated
Blockly.Msg.TEXT_INDEXOF_TOOLTIP = "Επιστρέφει τον δείκτη της πρώτης/τελευταίας εμφάνισης του πρώτου κειμένου στο δεύτερο κείμενο.  Επιστρέφει τιμή 0, αν δε βρει το κείμενο.";
Blockly.Msg.TEXT_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
Blockly.Msg.TEXT_ISEMPTY_TITLE = "το %1 είναι κενό";
Blockly.Msg.TEXT_ISEMPTY_TOOLTIP = "Επιστρέφει αληθής αν το παρεχόμενο κείμενο είναι κενό.";
Blockly.Msg.TEXT_JOIN_HELPURL = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
Blockly.Msg.TEXT_JOIN_TITLE_CREATEWITH = "δημιούργησε κείμενο με";
Blockly.Msg.TEXT_JOIN_TOOLTIP = "Δημιουργεί ένα κομμάτι κειμένου ενώνοντας έναν  απεριόριστο αριθμό αντικειμένων.";
Blockly.Msg.TEXT_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_LENGTH_TITLE = "το μήκος του %1";
Blockly.Msg.TEXT_LENGTH_TOOLTIP = "Επιστρέφει το πλήθος των γραμμάτων (συμπεριλαμβανομένων και των κενών διαστημάτων) στο παρεχόμενο κείμενο.";
Blockly.Msg.TEXT_PRINT_HELPURL = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
Blockly.Msg.TEXT_PRINT_TITLE = "εκτύπωσε %1";
Blockly.Msg.TEXT_PRINT_TOOLTIP = "Εκτυπώνει το καθορισμένο κείμενο, αριθμό ή άλλη τιμή.";
Blockly.Msg.TEXT_PROMPT_HELPURL = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
Blockly.Msg.TEXT_PROMPT_TOOLTIP_NUMBER = "Δημιουργεί προτροπή για τον χρήστη για να δώσει ένα αριθμό.";
Blockly.Msg.TEXT_PROMPT_TOOLTIP_TEXT = "Δημιουργεί προτροπή για το χρήστη για να δώσει κάποιο κείμενο.";
Blockly.Msg.TEXT_PROMPT_TYPE_NUMBER = "πρότρεψε με μήνυμα για να δοθεί αριθμός";
Blockly.Msg.TEXT_PROMPT_TYPE_TEXT = "πρότρεψε με μήνυμα για να δοθεί κείμενο";
Blockly.Msg.TEXT_TEXT_HELPURL = "https://el.wikipedia.org/wiki/%CE%A3%CF%85%CE%BC%CE%B2%CE%BF%CE%BB%CE%BF%CF%83%CE%B5%CE%B9%CF%81%CE%AC";
Blockly.Msg.TEXT_TEXT_TOOLTIP = "Ένα γράμμα, μια λέξη ή μια γραμμή κειμένου.";
Blockly.Msg.TEXT_TRIM_HELPURL = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
Blockly.Msg.TEXT_TRIM_OPERATOR_BOTH = "περίκοψε τα κενά και από τις δυο πλευρές του";
Blockly.Msg.TEXT_TRIM_OPERATOR_LEFT = "περίκοψε τα κενά από την αριστερή πλευρά του";
Blockly.Msg.TEXT_TRIM_OPERATOR_RIGHT = "περίκοψε τα κενά από την δεξιά πλευρά του";
Blockly.Msg.TEXT_TRIM_TOOLTIP = "Επιστρέφει ένα αντίγραφο του κειμένου με αφαιρεμένα τα κενά από το ένα ή και τα δύο άκρα.";
Blockly.Msg.TODAY = "Σήμερα";
Blockly.Msg.UNDO = "Undo";  // untranslated
Blockly.Msg.VARIABLES_DEFAULT_NAME = "αντικείμενο";
Blockly.Msg.VARIABLES_GET_CREATE_SET = "Δημιούργησε «όρισε %1»";
Blockly.Msg.VARIABLES_GET_HELPURL = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
Blockly.Msg.VARIABLES_GET_TOOLTIP = "Επιστρέφει την τιμή αυτής της μεταβλητής.";
Blockly.Msg.VARIABLES_SET = "όρισε %1 μέχρι το %2";
Blockly.Msg.VARIABLES_SET_CREATE_GET = "Δημιούργησε «πάρε %1»";
Blockly.Msg.VARIABLES_SET_HELPURL = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
Blockly.Msg.VARIABLES_SET_TOOLTIP = "Ορίζει αυτή τη μεταβλητή να είναι ίση με την είσοδο.";
Blockly.Msg.PROCEDURES_DEFRETURN_TITLE = Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE;
Blockly.Msg.CONTROLS_IF_IF_TITLE_IF = Blockly.Msg.CONTROLS_IF_MSG_IF;
Blockly.Msg.CONTROLS_WHILEUNTIL_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_MSG_THEN = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_ELSE_TITLE_ELSE = Blockly.Msg.CONTROLS_IF_MSG_ELSE;
Blockly.Msg.PROCEDURES_DEFRETURN_PROCEDURE = Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE;
Blockly.Msg.LISTS_GET_SUBLIST_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.LISTS_GET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.MATH_CHANGE_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.PROCEDURES_DEFRETURN_DO = Blockly.Msg.PROCEDURES_DEFNORETURN_DO;
Blockly.Msg.CONTROLS_IF_ELSEIF_TITLE_ELSEIF = Blockly.Msg.CONTROLS_IF_MSG_ELSEIF;
Blockly.Msg.LISTS_GET_INDEX_HELPURL = Blockly.Msg.LISTS_INDEX_OF_HELPURL;
Blockly.Msg.CONTROLS_FOREACH_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_SET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.CONTROLS_FOR_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TITLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.LISTS_INDEX_OF_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT = Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT;

// Ardublockly strings
Blockly.Msg.ARD_ANALOGREAD = "read analog pin#";  // untranslated
Blockly.Msg.ARD_ANALOGREAD_TIP = "Return value between 0 and 1024";  // untranslated
Blockly.Msg.ARD_ANALOGWRITE = "set analog pin#";  // untranslated
Blockly.Msg.ARD_ANALOGWRITE_TIP = "Write analog value between 0 and 255 to a specific PWM Port";  // untranslated
Blockly.Msg.ARD_BUILTIN_LED = "set built-in LED";  // untranslated
Blockly.Msg.ARD_BUILTIN_LED_TIP = "Light on or off for the built-in LED of the Arduino";  // untranslated
Blockly.Msg.ARD_COMPONENT_WARN1 = "A %1 configuration block with the same %2 name must be added to use this block!";  // untranslated
Blockly.Msg.ARD_DEFINE = "Define";  // untranslated
Blockly.Msg.ARD_DIGITALREAD = "read digital pin#";  // untranslated
Blockly.Msg.ARD_DIGITALREAD_TIP = "Read digital value on a pin: HIGH or LOW";  // untranslated
Blockly.Msg.ARD_DIGITALWRITE = "set digitial pin#";  // untranslated
Blockly.Msg.ARD_DIGITALWRITE_TIP = "Write digital value HIGH or LOW to a specific Port";  // untranslated
Blockly.Msg.ARD_FUN_RUN_LOOP = "Arduino loop forever:";  // untranslated
Blockly.Msg.ARD_FUN_RUN_SETUP = "Arduino run first:";  // untranslated
Blockly.Msg.ARD_FUN_RUN_TIP = "Defines the Arduino setup() and loop() functions.";  // untranslated
Blockly.Msg.ARD_HIGH = "HIGH";  // untranslated
Blockly.Msg.ARD_HIGHLOW_TIP = "Set a pin state logic High or Low.";  // untranslated
Blockly.Msg.ARD_LOW = "LOW";  // untranslated
Blockly.Msg.ARD_MAP = "Map";  // untranslated
Blockly.Msg.ARD_MAP_TIP = "Re-maps a number from [0-1024] to another.";  // untranslated
Blockly.Msg.ARD_MAP_VAL = "value to [0-";  // untranslated
Blockly.Msg.ARD_NOTONE = "Turn off tone on pin #";  // untranslated
Blockly.Msg.ARD_NOTONE_PIN = "No tone PIN#";  // untranslated
Blockly.Msg.ARD_NOTONE_PIN_TIP = "Stop generating a tone on a pin";  // untranslated
Blockly.Msg.ARD_NOTONE_TIP = "Turns the tone off on the selected pin";  // untranslated
Blockly.Msg.ARD_PIN_WARN1 = "Pin %1 is needed for %2 as pin %3. Already used as %4.";  // untranslated
Blockly.Msg.ARD_PULSETIMEOUT_TIP = "Measures the duration of a pulse on the selected pin, if it is within the time-out in microseconds.";  // untranslated
Blockly.Msg.ARD_PULSE_READ = "measure %1 pulse on pin #%2";  // untranslated
Blockly.Msg.ARD_PULSE_READ_TIMEOUT = "measure %1 pulse on pin #%2 (timeout after %3 μs)";  // untranslated
Blockly.Msg.ARD_PULSE_TIP = "Measures the duration of a pulse on the selected pin.";  // untranslated
Blockly.Msg.ARD_SERIAL_BPS = "bps";  // untranslated
Blockly.Msg.ARD_SERIAL_PRINT = "print";  // untranslated
Blockly.Msg.ARD_SERIAL_PRINT_NEWLINE = "add new line";  // untranslated
Blockly.Msg.ARD_SERIAL_PRINT_TIP = "Prints data to the console/serial port as human-readable ASCII text.";  // untranslated
Blockly.Msg.ARD_SERIAL_PRINT_WARN = "A setup block for %1 must be added to the workspace to use this block!";  // untranslated
Blockly.Msg.ARD_SERIAL_SETUP = "Setup";  // untranslated
Blockly.Msg.ARD_SERIAL_SETUP_TIP = "Selects the speed for a specific Serial peripheral";  // untranslated
Blockly.Msg.ARD_SERIAL_SPEED = ":  speed to";  // untranslated
Blockly.Msg.ARD_SERVO_READ = "read SERVO from PIN#";  // untranslated
Blockly.Msg.ARD_SERVO_READ_TIP = "Read a Servo angle";  // untranslated
Blockly.Msg.ARD_SERVO_WRITE = "set SERVO from Pin";  // untranslated
Blockly.Msg.ARD_SERVO_WRITE_DEG_180 = "Degrees (0~180)";  // untranslated
Blockly.Msg.ARD_SERVO_WRITE_TIP = "Set a Servo to an specified angle";  // untranslated
Blockly.Msg.ARD_SERVO_WRITE_TO = "to";  // untranslated
Blockly.Msg.ARD_SETTONE = "Set tone on pin #";  // untranslated
Blockly.Msg.ARD_SPI_SETUP = "Setup";  // untranslated
Blockly.Msg.ARD_SPI_SETUP_CONF = "configuration:";  // untranslated
Blockly.Msg.ARD_SPI_SETUP_DIVIDE = "clock divide";  // untranslated
Blockly.Msg.ARD_SPI_SETUP_LSBFIRST = "LSBFIRST";  // untranslated
Blockly.Msg.ARD_SPI_SETUP_MODE = "SPI mode (idle - edge)";  // untranslated
Blockly.Msg.ARD_SPI_SETUP_MODE0 = "0 (Low - Falling)";  // untranslated
Blockly.Msg.ARD_SPI_SETUP_MODE1 = "1 (Low - Rising)";  // untranslated
Blockly.Msg.ARD_SPI_SETUP_MODE2 = "2 (High - Falling)";  // untranslated
Blockly.Msg.ARD_SPI_SETUP_MODE3 = "3 (High - Rising)";  // untranslated
Blockly.Msg.ARD_SPI_SETUP_MSBFIRST = "MSBFIRST";  // untranslated
Blockly.Msg.ARD_SPI_SETUP_SHIFT = "data shift";  // untranslated
Blockly.Msg.ARD_SPI_SETUP_TIP = "Configures the SPI peripheral.";  // untranslated
Blockly.Msg.ARD_SPI_TRANSRETURN_TIP = "Send a SPI message to an specified slave device and get data back.";  // untranslated
Blockly.Msg.ARD_SPI_TRANS_NONE = "none";  // untranslated
Blockly.Msg.ARD_SPI_TRANS_SLAVE = "to slave pin";  // untranslated
Blockly.Msg.ARD_SPI_TRANS_TIP = "Send a SPI message to an specified slave device.";  // untranslated
Blockly.Msg.ARD_SPI_TRANS_VAL = "transfer";  // untranslated
Blockly.Msg.ARD_SPI_TRANS_WARN1 = "A setup block for %1 must be added to the workspace to use this block!";  // untranslated
Blockly.Msg.ARD_SPI_TRANS_WARN2 = "Old pin value %1 is no longer available.";  // untranslated
Blockly.Msg.ARD_STEPPER_COMPONENT = "stepper";  // untranslated
Blockly.Msg.ARD_STEPPER_DEFAULT_NAME = "MyStepper";  // untranslated
Blockly.Msg.ARD_STEPPER_FOUR_PINS = "4";  // untranslated
Blockly.Msg.ARD_STEPPER_MOTOR = "stepper motor:";  // untranslated
Blockly.Msg.ARD_STEPPER_NUMBER_OF_PINS = "Number of pins";  // untranslated
Blockly.Msg.ARD_STEPPER_PIN1 = "pin1#";  // untranslated
Blockly.Msg.ARD_STEPPER_PIN2 = "pin2#";  // untranslated
Blockly.Msg.ARD_STEPPER_PIN3 = "pin3#";  // untranslated
Blockly.Msg.ARD_STEPPER_PIN4 = "pin4#";  // untranslated
Blockly.Msg.ARD_STEPPER_REVOLVS = "how many steps per revolution";  // untranslated
Blockly.Msg.ARD_STEPPER_SETUP = "Setup stepper motor";  // untranslated
Blockly.Msg.ARD_STEPPER_SETUP_TIP = "Configures a stepper motor pinout and other settings.";  // untranslated
Blockly.Msg.ARD_STEPPER_SPEED = "set speed (rpm) to";  // untranslated
Blockly.Msg.ARD_STEPPER_STEP = "move stepper";  // untranslated
Blockly.Msg.ARD_STEPPER_STEPS = "steps";  // untranslated
Blockly.Msg.ARD_STEPPER_STEP_TIP = "Turns the stepper motor a specific number of steps.";  // untranslated
Blockly.Msg.ARD_STEPPER_TWO_PINS = "2";  // untranslated
Blockly.Msg.ARD_TIME_DELAY = "wait";  // untranslated
Blockly.Msg.ARD_TIME_DELAY_MICROS = "microseconds";  // untranslated
Blockly.Msg.ARD_TIME_DELAY_MICRO_TIP = "Wait specific time in microseconds";  // untranslated
Blockly.Msg.ARD_TIME_DELAY_TIP = "Wait specific time in milliseconds";  // untranslated
Blockly.Msg.ARD_TIME_INF = "wait forever (end program)";  // untranslated
Blockly.Msg.ARD_TIME_INF_TIP = "Wait indefinitely, stopping the program.";  // untranslated
Blockly.Msg.ARD_TIME_MICROS = "current elapsed Time (microseconds)";  // untranslated
Blockly.Msg.ARD_TIME_MICROS_TIP = "Returns the number of microseconds since the Arduino board began running the current program. Has to be stored in a positive long integer";  // untranslated
Blockly.Msg.ARD_TIME_MILLIS = "current elapsed Time (milliseconds)";  // untranslated
Blockly.Msg.ARD_TIME_MILLIS_TIP = "Returns the number of milliseconds since the Arduino board began running the current program. Has to be stored in a positive long integer";  // untranslated
Blockly.Msg.ARD_TIME_MS = "milliseconds";  // untranslated
Blockly.Msg.ARD_TONEFREQ = "at frequency";  // untranslated
Blockly.Msg.ARD_TONE_FREQ = "frequency";  // untranslated
Blockly.Msg.ARD_TONE_PIN = "Tone PIN#";  // untranslated
Blockly.Msg.ARD_TONE_PIN_TIP = "Generate audio tones on a pin";  // untranslated
Blockly.Msg.ARD_TONE_TIP = "Sets tone on pin to specified frequency within range 31 - 65535";  // untranslated
Blockly.Msg.ARD_TONE_WARNING = "Frequency must be in range 31 - 65535";  // untranslated
Blockly.Msg.ARD_TYPE_ARRAY = "Array";  // untranslated
Blockly.Msg.ARD_TYPE_BOOL = "Boolean";  // untranslated
Blockly.Msg.ARD_TYPE_CHAR = "Character";  // untranslated
Blockly.Msg.ARD_TYPE_CHILDBLOCKMISSING = "ChildBlockMissing";  // untranslated
Blockly.Msg.ARD_TYPE_DECIMAL = "Decimal";  // untranslated
Blockly.Msg.ARD_TYPE_LONG = "Large Number";  // untranslated
Blockly.Msg.ARD_TYPE_NULL = "Null";  // untranslated
Blockly.Msg.ARD_TYPE_NUMBER = "Number";  // untranslated
Blockly.Msg.ARD_TYPE_SHORT = "Short Number";  // untranslated
Blockly.Msg.ARD_TYPE_TEXT = "Text";  // untranslated
Blockly.Msg.ARD_TYPE_UNDEF = "Undefined";  // untranslated
Blockly.Msg.ARD_VAR_AS = "as";  // untranslated
Blockly.Msg.ARD_VAR_AS_TIP = "Sets a value to a specific type";  // untranslated
Blockly.Msg.ARD_WRITE_TO = "to";  // untranslated
Blockly.Msg.NEW_INSTANCE = "New instance...";  // untranslated
Blockly.Msg.NEW_INSTANCE_TITLE = "New instance name:";  // untranslated
Blockly.Msg.RENAME_INSTANCE = "Rename instance...";  // untranslated
Blockly.Msg.RENAME_INSTANCE_TITLE = "Rename all '%1' instances to:";  // untranslated
Blockly.Msg.cases_add = "Fall";  // untranslated
Blockly.Msg.cases_condition = "Fall (Variable) = ";  // untranslated
Blockly.Msg.cases_do = "Führe aus";  // untranslated
Blockly.Msg.cases_switch = "Variable";  // untranslated
Blockly.Msg.mcubase_SD_COMPONENT = "SD-Block";  // untranslated
Blockly.Msg.mcubase_basic_blue = "Blau";  // untranslated
Blockly.Msg.mcubase_basic_green = "Grün";  // untranslated
Blockly.Msg.mcubase_basic_red = "Rot";  // untranslated
Blockly.Msg.mcubase_basic_state = "Status";  // untranslated
Blockly.Msg.mcubase_bmx055_accelerometer = "Beschleunigungs Sensor";  // untranslated
Blockly.Msg.mcubase_bmx055_accelerometer_tip = "Lage Sensor";  // untranslated
Blockly.Msg.mcubase_bmx055_compass = "Lage Sensor";  // untranslated
Blockly.Msg.mcubase_bmx055_compass_tip = "Lage Sensor";  // untranslated
Blockly.Msg.mcubase_bmx055_gyroscope = "Lage Sensor";  // untranslated
Blockly.Msg.mcubase_bmx055_gyroscope_tip = "Lage Sensor";  // untranslated
Blockly.Msg.mcubase_bmx055_x = "X-Richtung";  // untranslated
Blockly.Msg.mcubase_bmx055_y = "Y-Richtung";  // untranslated
Blockly.Msg.mcubase_button = "Drucktaster";  // untranslated
Blockly.Msg.mcubase_button_tip = "Drucktaster";  // untranslated
Blockly.Msg.mcubase_display_beginDisplay = "Display initialisieren";  // untranslated
Blockly.Msg.mcubase_display_black = "Schwarz";  // untranslated
Blockly.Msg.mcubase_display_clearDisplay = "Display löschen";  // untranslated
Blockly.Msg.mcubase_display_clearDisplay_tip = "Löscht den Inhalt des Displays";  // untranslated
Blockly.Msg.mcubase_display_color = "Schriftfarbe";  // untranslated
Blockly.Msg.mcubase_display_plotDisplay = "Diagram zeichnen";  // untranslated
Blockly.Msg.mcubase_display_plotTimeFrame = "Zeitabschnitt";  // untranslated
Blockly.Msg.mcubase_display_plotXLabel = "X-Achsen Beschriftung";  // untranslated
Blockly.Msg.mcubase_display_plotXRange1 = "X-Wertebereich Anfang";  // untranslated
Blockly.Msg.mcubase_display_plotXRange2 = "X-Wertebereich Ende";  // untranslated
Blockly.Msg.mcubase_display_plotXTick = "X-Linienabstand";  // untranslated
Blockly.Msg.mcubase_display_plotYLabel = "Y-Achsen Beschriftung";  // untranslated
Blockly.Msg.mcubase_display_plotYRange1 = "Y-Wertebereich Anfang";  // untranslated
Blockly.Msg.mcubase_display_plotYRange2 = "Y-Wertebereich Ende";  // untranslated
Blockly.Msg.mcubase_display_plotYTick = "Y-Linienabstand";  // untranslated
Blockly.Msg.mcubase_display_printDisplay = "";  // untranslated
Blockly.Msg.mcubase_display_printDisplay_tip = "zeigt Wert auf dem Display an.";  // untranslated
Blockly.Msg.mcubase_display_printDisplay_value = "Wert";  // untranslated
Blockly.Msg.mcubase_display_printDisplay_x = "x";  // untranslated
Blockly.Msg.mcubase_display_printDisplay_y = "y";  // untranslated
Blockly.Msg.mcubase_display_setSize = "Schriftgröße";  // untranslated
Blockly.Msg.mcubase_display_setSize_tip = "Ändere die Schriftgröße auf einen Wert zwischen 1 und 10.";  // untranslated
Blockly.Msg.mcubase_display_show = "Zeige auf dem Display";  // untranslated
Blockly.Msg.mcubase_display_show_tip = "Zeigt den Nachfolgenden Inhalt auf dem Bildschirm";  // untranslated
Blockly.Msg.mcubase_display_white = "Weiß";  // untranslated
Blockly.Msg.mcubase_foto = "Fotowiderstand";  // untranslated
Blockly.Msg.mcubase_foto_tip = "Fotowiderstand";  // untranslated
Blockly.Msg.mcubase_gps_alt = "Höhe über NN in m";  // untranslated
Blockly.Msg.mcubase_gps_getValues = "GPS Modul";  // untranslated
Blockly.Msg.mcubase_gps_getValues_tip = "ruft das GPS Signal ab";  // untranslated
Blockly.Msg.mcubase_gps_lat = "Breitengrad";  // untranslated
Blockly.Msg.mcubase_gps_lng = "Längengrad";  // untranslated
Blockly.Msg.mcubase_gps_speed = "Geschwindigkeit in km/h";  // untranslated
Blockly.Msg.mcubase_hum = "Luftfeuchtigkeit in %";  // untranslated
Blockly.Msg.mcubase_hum_tip = "Luftfeuchtigkeit";  // untranslated
Blockly.Msg.mcubase_interval = "ms";  // untranslated
Blockly.Msg.mcubase_interval_timer = "Messintervall";  // untranslated
Blockly.Msg.mcubase_interval_timer_tip = "Intervall";  // untranslated
Blockly.Msg.mcubase_ir = "Infrarot Abstandssensor";  // untranslated
Blockly.Msg.mcubase_ir_tip = "Infrarot Abstandssensor";  // untranslated
Blockly.Msg.mcubase_led = "LED an digital";  // untranslated
Blockly.Msg.mcubase_led_tip = "Einfache LED. Beim Anschluss sollte immer ein Vorwiderstand verwendet werden";  // untranslated
Blockly.Msg.mcubase_light = "Beleuchtungsstärke in Lux";  // untranslated
Blockly.Msg.mcubase_lux = "Helligkeitssensor";  // untranslated
Blockly.Msg.mcubase_lux_tip = "Helligkeitssensor";  // untranslated
Blockly.Msg.mcubase_off = "Aus";  // untranslated
Blockly.Msg.mcubase_on = "Ein";  // untranslated
Blockly.Msg.mcubase_osem_connection = "Verbinde mit openSenseMap";  // untranslated
Blockly.Msg.mcubase_osem_connection_tip = "stellt eine WLAN verbindung her";  // untranslated
Blockly.Msg.mcubase_output_filename = "Daten";  // untranslated
Blockly.Msg.mcubase_output_format = "Format:";  // untranslated
Blockly.Msg.mcubase_output_linebreak = "Zeilenumbruch";  // untranslated
Blockly.Msg.mcubase_output_networkid = "NetzwerkID";  // untranslated
Blockly.Msg.mcubase_output_password = "Passwort";  // untranslated
Blockly.Msg.mcubase_output_safetosd = "Auf SD Karte speichern";  // untranslated
Blockly.Msg.mcubase_output_safetosd_tip = "Speichert Messwerte auf SD Karte";  // untranslated
Blockly.Msg.mcubase_output_serialprint = "Auf Kommandozeile ausgeben";  // untranslated
Blockly.Msg.mcubase_output_timestamp = "Zeitstempel";  // untranslated
Blockly.Msg.mcubase_piezo = "Piezo an digital";  // untranslated
Blockly.Msg.mcubase_piezo_tip = "Piezo an digital PIN. Beim Anschluss sollte immer ein Vorwiderstand verwendet werden";  // untranslated
Blockly.Msg.mcubase_poti = "Potenziometer";  // untranslated
Blockly.Msg.mcubase_poti_tip = "Potenziometer";  // untranslated
Blockly.Msg.mcubase_pressure = "Luftdruck in Pa";  // untranslated
Blockly.Msg.mcubase_pressure_dimension = "Luftdruck in Pa";  // untranslated
Blockly.Msg.mcubase_pressure_sensor = "Luftdruck/Temperatur Sensor (BMP280)";  // untranslated
Blockly.Msg.mcubase_pressure_tip = "Luftdrucksensor";  // untranslated
Blockly.Msg.mcubase_rgb_led = "RGB-LED";  // untranslated
Blockly.Msg.mcubase_rgb_led_tip = "RGB-LED benötigt einen digitalen Pin und eine Stromkreis ";  // untranslated
Blockly.Msg.mcubase_sd_create_file = "Erstelle Datei auf SD-Karte";  // untranslated
Blockly.Msg.mcubase_sd_filename = "Daten";  // untranslated
Blockly.Msg.mcubase_sd_open_file = "Öffne eine Datei auf der SD-Karte";  // untranslated
Blockly.Msg.mcubase_sd_write_file = " Schreibe Daten auf SD-Karte";  // untranslated
Blockly.Msg.mcubase_sds011 = "Feinstaubsensor";  // untranslated
Blockly.Msg.mcubase_sds011_dimension = "in µg/m³ an";  // untranslated
Blockly.Msg.mcubase_sds011_pm10 = "PM10";  // untranslated
Blockly.Msg.mcubase_sds011_pm25 = "PM2.5";  // untranslated
Blockly.Msg.mcubase_sds011_serial1 = "Serial1";  // untranslated
Blockly.Msg.mcubase_sds011_serial2 = "Serial2";  // untranslated
Blockly.Msg.mcubase_sds011_tip = "Misst die Feinstaubbelastung";  // untranslated
Blockly.Msg.mcubase_send_mobile_to_osem = "Sende Messwert und Standort";  // untranslated
Blockly.Msg.mcubase_send_mobile_to_osem_tip = "Sende Messwert und Standort an die openSenseMap";  // untranslated
Blockly.Msg.mcubase_send_to_osem = "sende Messwert an die openSenseMap";  // untranslated
Blockly.Msg.mcubase_send_to_osem_tip = "sende Messwert an";  // untranslated
Blockly.Msg.mcubase_sensor = "Sensoren";  // untranslated
Blockly.Msg.mcubase_serial_tip = "Gibt Messwerte oder Daten auf dem Seriellen Monitor der Arduino IDE aus. Praktisch um ohne Display zu arbeiten";  // untranslated
Blockly.Msg.mcubase_sound = "Geräuschsensor";  // untranslated
Blockly.Msg.mcubase_sound_tip = "Geräuschsensor";  // untranslated
Blockly.Msg.mcubase_temp = "Temperatur in °C";  // untranslated
Blockly.Msg.mcubase_temp_hum = "Temperatur/Luftfeuchtigkeitssensor (HDC1080)";  // untranslated
Blockly.Msg.mcubase_temp_hum_tip = "Sensor misst Temperatur und Luftfeuchtigkeit";  // untranslated
Blockly.Msg.mcubase_ultrasonic = "Ultraschall Abstandssensor an Port";  // untranslated
Blockly.Msg.mcubase_ultrasonic_port_A = "A";  // untranslated
Blockly.Msg.mcubase_ultrasonic_port_B = "B";  // untranslated
Blockly.Msg.mcubase_ultrasonic_port_C = "C";  // untranslated
Blockly.Msg.mcubase_ultrasonic_tip = "Ultraschall Abstandssensor";  // untranslated
Blockly.Msg.mcubase_uv = "UV-Intensität in µW/cm²";  // untranslated
Blockly.Msg.mcubase_uv_light = "Licht Sichtbar + UV Sensor";  // untranslated
Blockly.Msg.mcubase_uv_light_tip = "Sensor misst UV-Licht oder Die Helligkeit";  // untranslated
Blockly.Msg.mcubase_value = "Messwert:";  // untranslated
Blockly.Msg.mcubase_wifi_tip = "stellt eine WLAN verbindung her";  // untranslated
Blockly.Msg.senseBox_SD_COMPONENT = "SD-Block";  // untranslated
Blockly.Msg.senseBox_basic_blue = "Blau";  // untranslated
Blockly.Msg.senseBox_basic_green = "Grün";  // untranslated
Blockly.Msg.senseBox_basic_red = "Rot";  // untranslated
Blockly.Msg.senseBox_basic_state = "Status";  // untranslated
Blockly.Msg.senseBox_bmx055_accelerometer = "Beschleunigungs Sensor";  // untranslated
Blockly.Msg.senseBox_bmx055_accelerometer_tip = "Lage Sensor";  // untranslated
Blockly.Msg.senseBox_bmx055_compass = "Lage Sensor";  // untranslated
Blockly.Msg.senseBox_bmx055_compass_tip = "Lage Sensor";  // untranslated
Blockly.Msg.senseBox_bmx055_gyroscope = "Lage Sensor";  // untranslated
Blockly.Msg.senseBox_bmx055_gyroscope_tip = "Lage Sensor";  // untranslated
Blockly.Msg.senseBox_bmx055_x = "X-Richtung";  // untranslated
Blockly.Msg.senseBox_bmx055_y = "Y-Richtung";  // untranslated
Blockly.Msg.senseBox_button = "Drucktaster";  // untranslated
Blockly.Msg.senseBox_button_tip = "Drucktaster";  // untranslated
Blockly.Msg.senseBox_display_beginDisplay = "Display initialisieren";  // untranslated
Blockly.Msg.senseBox_display_black = "Schwarz";  // untranslated
Blockly.Msg.senseBox_display_clearDisplay = "Display löschen";  // untranslated
Blockly.Msg.senseBox_display_clearDisplay_tip = "Löscht den Inhalt des Displays";  // untranslated
Blockly.Msg.senseBox_display_color = "Schriftfarbe";  // untranslated
Blockly.Msg.senseBox_display_plotDisplay = "Diagram zeichnen";  // untranslated
Blockly.Msg.senseBox_display_plotTimeFrame = "Zeitabschnitt";  // untranslated
Blockly.Msg.senseBox_display_plotXLabel = "X-Achsen Beschriftung";  // untranslated
Blockly.Msg.senseBox_display_plotXRange1 = "X-Wertebereich Anfang";  // untranslated
Blockly.Msg.senseBox_display_plotXRange2 = "X-Wertebereich Ende";  // untranslated
Blockly.Msg.senseBox_display_plotXTick = "X-Linienabstand";  // untranslated
Blockly.Msg.senseBox_display_plotYLabel = "Y-Achsen Beschriftung";  // untranslated
Blockly.Msg.senseBox_display_plotYRange1 = "Y-Wertebereich Anfang";  // untranslated
Blockly.Msg.senseBox_display_plotYRange2 = "Y-Wertebereich Ende";  // untranslated
Blockly.Msg.senseBox_display_plotYTick = "Y-Linienabstand";  // untranslated
Blockly.Msg.senseBox_display_printDisplay = "";  // untranslated
Blockly.Msg.senseBox_display_printDisplay_tip = "zeigt Wert auf dem Display an.";  // untranslated
Blockly.Msg.senseBox_display_printDisplay_value = "Wert";  // untranslated
Blockly.Msg.senseBox_display_printDisplay_x = "x";  // untranslated
Blockly.Msg.senseBox_display_printDisplay_y = "y";  // untranslated
Blockly.Msg.senseBox_display_setSize = "Schriftgröße";  // untranslated
Blockly.Msg.senseBox_display_setSize_tip = "Ändere die Schriftgröße auf einen Wert zwischen 1 und 10.";  // untranslated
Blockly.Msg.senseBox_display_white = "Weiß";  // untranslated
Blockly.Msg.senseBox_foto = "Fotowiderstand";  // untranslated
Blockly.Msg.senseBox_foto_tip = "Fotowiderstand";  // untranslated
Blockly.Msg.senseBox_gps_alt = "Höhe über NN in m";  // untranslated
Blockly.Msg.senseBox_gps_getValues = "GPS Modul";  // untranslated
Blockly.Msg.senseBox_gps_getValues_tip = "ruft das GPS Signal ab";  // untranslated
Blockly.Msg.senseBox_gps_lat = "Breitengrad";  // untranslated
Blockly.Msg.senseBox_gps_lng = "Längengrad";  // untranslated
Blockly.Msg.senseBox_gps_speed = "Geschwindigkeit in km/h";  // untranslated
Blockly.Msg.senseBox_hum = "Luftfeuchtigkeit in %";  // untranslated
Blockly.Msg.senseBox_hum_tip = "Luftfeuchtigkeit";  // untranslated
Blockly.Msg.senseBox_interval = "ms";  // untranslated
Blockly.Msg.senseBox_interval_timer = "Messintervall";  // untranslated
Blockly.Msg.senseBox_interval_timer_tip = "Intervall";  // untranslated
Blockly.Msg.senseBox_ir = "Infrarot Abstandssensor";  // untranslated
Blockly.Msg.senseBox_ir_tip = "Infrarot Abstandssensor";  // untranslated
Blockly.Msg.senseBox_led = "LED an digital";  // untranslated
Blockly.Msg.senseBox_led_tip = "Einfache LED. Beim Anschluss sollte immer ein Vorwiderstand verwendet werden";  // untranslated
Blockly.Msg.senseBox_light = "Beleuchtungsstärke in Lux";  // untranslated
Blockly.Msg.senseBox_lux = "Helligkeitssensor";  // untranslated
Blockly.Msg.senseBox_lux_tip = "Helligkeitssensor";  // untranslated
Blockly.Msg.senseBox_off = "Aus";  // untranslated
Blockly.Msg.senseBox_on = "Ein";  // untranslated
Blockly.Msg.senseBox_osem_connection = "Verbinde mit openSenseMap";  // untranslated
Blockly.Msg.senseBox_osem_connection_tip = "stellt eine WLAN verbindung her";  // untranslated
Blockly.Msg.senseBox_output_filename = "Daten";  // untranslated
Blockly.Msg.senseBox_output_format = "Format:";  // untranslated
Blockly.Msg.senseBox_output_linebreak = "Zeilenumbruch";  // untranslated
Blockly.Msg.senseBox_output_networkid = "NetzwerkID";  // untranslated
Blockly.Msg.senseBox_output_password = "Passwort";  // untranslated
Blockly.Msg.senseBox_output_safetosd = "Auf SD Karte speichern";  // untranslated
Blockly.Msg.senseBox_output_safetosd_tip = "Speichert Messwerte auf SD Karte";  // untranslated
Blockly.Msg.senseBox_output_serialprint = "Auf Kommandozeile ausgeben";  // untranslated
Blockly.Msg.senseBox_output_timestamp = "Zeitstempel";  // untranslated
Blockly.Msg.senseBox_piezo = "Piezo an digital";  // untranslated
Blockly.Msg.senseBox_piezo_tip = "Piezo an digital PIN. Beim Anschluss sollte immer ein Vorwiderstand verwendet werden";  // untranslated
Blockly.Msg.senseBox_poti = "Potenziometer";  // untranslated
Blockly.Msg.senseBox_poti_tip = "Potenziometer";  // untranslated
Blockly.Msg.senseBox_pressure = "Luftdruck in Pa";  // untranslated
Blockly.Msg.senseBox_pressure_dimension = "Luftdruck in Pa";  // untranslated
Blockly.Msg.senseBox_pressure_sensor = "Luftdruck/Temperatur Sensor (BMP280)";  // untranslated
Blockly.Msg.senseBox_pressure_tip = "Luftdrucksensor";  // untranslated
Blockly.Msg.senseBox_rgb_led = "RGB-LED";  // untranslated
Blockly.Msg.senseBox_rgb_led_tip = "RGB-LED benötigt einen digitalen Pin und eine Stromkreis ";  // untranslated
Blockly.Msg.senseBox_sd_create_file = "Erstelle Datei auf SD-Karte";  // untranslated
Blockly.Msg.senseBox_sd_open_file = "Öffne eine Datei auf der SD-Karte";  // untranslated
Blockly.Msg.senseBox_sd_write_file = " Schreibe Daten auf SD-Karte";  // untranslated
Blockly.Msg.senseBox_sds011 = "Feinstaubsensor";  // untranslated
Blockly.Msg.senseBox_sds011_dimension = "in µg/m³ an";  // untranslated
Blockly.Msg.senseBox_sds011_pm10 = "PM10";  // untranslated
Blockly.Msg.senseBox_sds011_pm25 = "PM2.5";  // untranslated
Blockly.Msg.senseBox_sds011_serial1 = "Serial1";  // untranslated
Blockly.Msg.senseBox_sds011_serial2 = "Serial2";  // untranslated
Blockly.Msg.senseBox_sds011_tip = "Misst die Feinstaubbelastung";  // untranslated
Blockly.Msg.senseBox_send_mobile_to_osem = "Sende Messwert und Standort";  // untranslated
Blockly.Msg.senseBox_send_mobile_to_osem_tip = "Sende Messwert und Standort an die openSenseMap";  // untranslated
Blockly.Msg.senseBox_send_to_osem = "sende Messwert an die openSenseMap";  // untranslated
Blockly.Msg.senseBox_send_to_osem_tip = "sende Messwert an";  // untranslated
Blockly.Msg.senseBox_sensor = "Sensoren";  // untranslated
Blockly.Msg.senseBox_serial_tip = "Gibt Messwerte oder Daten auf dem Seriellen Monitor der Arduino IDE aus. Praktisch um ohne Display zu arbeiten";  // untranslated
Blockly.Msg.senseBox_sound = "Geräuschsensor";  // untranslated
Blockly.Msg.senseBox_sound_tip = "Geräuschsensor";  // untranslated
Blockly.Msg.senseBox_temp = "Temperatur in °C";  // untranslated
Blockly.Msg.senseBox_temp_hum = "Temperatur/Luftfeuchtigkeitssensor (HDC1080)";  // untranslated
Blockly.Msg.senseBox_temp_hum_tip = "Sensor misst Temperatur und Luftfeuchtigkeit";  // untranslated
Blockly.Msg.senseBox_ultrasonic = "Ultraschall Abstandssensor an Port";  // untranslated
Blockly.Msg.senseBox_ultrasonic_port_A = "A";  // untranslated
Blockly.Msg.senseBox_ultrasonic_port_B = "B";  // untranslated
Blockly.Msg.senseBox_ultrasonic_port_C = "C";  // untranslated
Blockly.Msg.senseBox_ultrasonic_tip = "Ultraschall Abstandssensor";  // untranslated
Blockly.Msg.senseBox_uv = "UV-Intensität in µW/cm²";  // untranslated
Blockly.Msg.senseBox_uv_light = "Licht Sichtbar + UV Sensor";  // untranslated
Blockly.Msg.senseBox_uv_light_tip = "Sensor misst UV-Licht oder Die Helligkeit";  // untranslated
Blockly.Msg.senseBox_value = "Messwert:";  // untranslated
Blockly.Msg.senseBox_wifi_tip = "stellt eine WLAN verbindung her";  // untranslated
Blockly.Msg.sensebox_display_show = "Zeige auf dem Display";  // untranslated
Blockly.Msg.sensebox_display_show_tip = "Zeigt den Nachfolgenden Inhalt auf dem Bildschirm";  // untranslated
Blockly.Msg.sensebox_sd_filename = "Daten";  // untranslated
