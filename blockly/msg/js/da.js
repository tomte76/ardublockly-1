// This file was automatically generated.  Do not modify.

'use strict';

goog.provide('Blockly.Msg.da');

goog.require('Blockly.Msg');

Blockly.Msg.ADD_COMMENT = "Tilføj kommentar";
Blockly.Msg.AUTH = "Tillad venligst at denne app muliggør at du kan gemme dit arbejde og at du kan dele det.";
Blockly.Msg.CHANGE_VALUE_TITLE = "Skift værdi:";
Blockly.Msg.CHAT = "Chat med din samarbejdspartner ved at skrive i denne boks!";
Blockly.Msg.CLEAN_UP = "Ryd op i blokke";
Blockly.Msg.COLLAPSE_ALL = "Fold blokkene sammen";
Blockly.Msg.COLLAPSE_BLOCK = "Fold blokken sammen";
Blockly.Msg.COLOUR_BLEND_COLOUR1 = "farve 1";
Blockly.Msg.COLOUR_BLEND_COLOUR2 = "farve 2";
Blockly.Msg.COLOUR_BLEND_HELPURL = "http://meyerweb.com/eric/tools/color-blend/";  // untranslated
Blockly.Msg.COLOUR_BLEND_RATIO = "i forholdet";
Blockly.Msg.COLOUR_BLEND_TITLE = "bland";
Blockly.Msg.COLOUR_BLEND_TOOLTIP = "Blander to farver sammen i et bestemt forhold (0.0 - 1.0).";
Blockly.Msg.COLOUR_PICKER_HELPURL = "https://da.wikipedia.org/wiki/Farve";
Blockly.Msg.COLOUR_PICKER_TOOLTIP = "Vælg en farve fra paletten.";
Blockly.Msg.COLOUR_RANDOM_HELPURL = "http://randomcolour.com";  // untranslated
Blockly.Msg.COLOUR_RANDOM_TITLE = "tilfældig farve";
Blockly.Msg.COLOUR_RANDOM_TOOLTIP = "Vælg en tilfældig farve.";
Blockly.Msg.COLOUR_RGB_BLUE = "blå";
Blockly.Msg.COLOUR_RGB_GREEN = "grøn";
Blockly.Msg.COLOUR_RGB_HELPURL = "http://www.december.com/html/spec/colorper.html";  // untranslated
Blockly.Msg.COLOUR_RGB_RED = "rød";
Blockly.Msg.COLOUR_RGB_TITLE = "farve med";
Blockly.Msg.COLOUR_RGB_TOOLTIP = "Lav en farve med den angivne mængde af rød, grøn og blå. Alle værdier skal være mellem 0 og 100.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_HELPURL = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = "bryd ud af løkken";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = "fortsæt med den næste gentagelse i løkken";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = "Bryd ud af den omgivende løkke.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = "Spring resten af denne løkke over, og fortsæt med den næste gentagelse.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_WARNING = "Advarsel: Denne blok kan kun bruges i en løkke.";
Blockly.Msg.CONTROLS_FOREACH_HELPURL = "https://github.com/google/blockly/wiki/Loops#for-each";  // untranslated
Blockly.Msg.CONTROLS_FOREACH_TITLE = "for hvert element %1 i listen %2";
Blockly.Msg.CONTROLS_FOREACH_TOOLTIP = "For hvert element i en liste, sæt variablen '%1' til elementet, og udfør derefter nogle kommandoer.";
Blockly.Msg.CONTROLS_FOR_HELPURL = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
Blockly.Msg.CONTROLS_FOR_TITLE = "tæl med %1 fra %2 til %3 med %4";
Blockly.Msg.CONTROLS_FOR_TOOLTIP = "Få variablen \"%1\" til at have værdierne fra startværdien til slutværdien, mens der tælles med det angivne interval, og udfør de angivne blokke.";
Blockly.Msg.CONTROLS_IF_ELSEIF_TOOLTIP = "Tilføj en betingelse til denne \"hvis\" blok.";
Blockly.Msg.CONTROLS_IF_ELSE_TOOLTIP = "Tilføj en sidste fang-alt betingelse, til denne \"hvis\" blok.";
Blockly.Msg.CONTROLS_IF_HELPURL = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
Blockly.Msg.CONTROLS_IF_IF_TOOLTIP = "Tilføj, fjern eller byt om på rækkefølgen af delene for at konfigurere denne \"hvis\" blok.";
Blockly.Msg.CONTROLS_IF_MSG_ELSE = "ellers";
Blockly.Msg.CONTROLS_IF_MSG_ELSEIF = "ellers hvis";
Blockly.Msg.CONTROLS_IF_MSG_IF = "hvis";
Blockly.Msg.CONTROLS_IF_TOOLTIP_1 = "Hvis en værdi er sand, så udfør nogle kommandoer.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_2 = "Hvis en værdi er sand, så udfør den første blok af kommandoer. Ellers udfør den anden blok af kommandoer.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_3 = "Hvis den første værdi er sand, så udfør den første blok af kommandoer.  Ellers, hvis den anden værdi er sand, så udfør den anden blok af kommandoer.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_4 = "Hvis den første værdi er sand, så udfør den første blok af kommandoer. Ellers, hvis den anden værdi er sand, så udfør den anden blok af kommandoer. Hvis ingen af værdierne er sande, så udfør den sidste blok af kommandoer.";
Blockly.Msg.CONTROLS_REPEAT_HELPURL = "https://da.wikipedia.org/wiki/For-l%C3%B8kke";
Blockly.Msg.CONTROLS_REPEAT_INPUT_DO = "udfør";
Blockly.Msg.CONTROLS_REPEAT_TITLE = "gentag %1 gange";
Blockly.Msg.CONTROLS_REPEAT_TOOLTIP = "Udfør nogle kommandoer flere gange.";
Blockly.Msg.CONTROLS_WHILEUNTIL_HELPURL = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = "gentag indtil";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_WHILE = "gentag sålænge";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = "Udfør nogle kommandoer, sålænge en værdi er falsk.";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = "Udfør nogle kommandoer, sålænge en værdi er sand.";
Blockly.Msg.DELETE_ALL_BLOCKS = "Slet alle %1 blokke?";
Blockly.Msg.DELETE_BLOCK = "Slet blok";
Blockly.Msg.DELETE_X_BLOCKS = "Slet %1 blokke";
Blockly.Msg.DISABLE_BLOCK = "Deaktivér blok";
Blockly.Msg.DUPLICATE_BLOCK = "Duplikér";
Blockly.Msg.ENABLE_BLOCK = "Aktivér blok";
Blockly.Msg.EXPAND_ALL = "Fold blokkene ud";
Blockly.Msg.EXPAND_BLOCK = "Fold blokken ud";
Blockly.Msg.EXTERNAL_INPUTS = "Udvendige inputs";
Blockly.Msg.HELP = "Hjælp";
Blockly.Msg.INLINE_INPUTS = "Indlejrede inputs";
Blockly.Msg.LISTS_CREATE_EMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-empty-list";  // untranslated
Blockly.Msg.LISTS_CREATE_EMPTY_TITLE = "opret en tom liste";
Blockly.Msg.LISTS_CREATE_EMPTY_TOOLTIP = "Returnerer en liste af længde 0, som ikke indeholder nogen data";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = "liste";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TOOLTIP = "Tilføj, fjern eller byt om på rækkefølgen af delene for at konfigurere denne blok.";
Blockly.Msg.LISTS_CREATE_WITH_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg.LISTS_CREATE_WITH_INPUT_WITH = "opret liste med";
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TOOLTIP = "Føj et element til listen.";
Blockly.Msg.LISTS_CREATE_WITH_TOOLTIP = "Opret en liste med et vilkårligt antal elementer.";
Blockly.Msg.LISTS_GET_INDEX_FIRST = "første";
Blockly.Msg.LISTS_GET_INDEX_FROM_END = "# fra slutningen";
Blockly.Msg.LISTS_GET_INDEX_FROM_START = "#";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_GET = "hent";
Blockly.Msg.LISTS_GET_INDEX_GET_REMOVE = "hent og fjern";
Blockly.Msg.LISTS_GET_INDEX_LAST = "sidste";
Blockly.Msg.LISTS_GET_INDEX_RANDOM = "tilfældig";
Blockly.Msg.LISTS_GET_INDEX_REMOVE = "fjern";
Blockly.Msg.LISTS_GET_INDEX_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FIRST = "Returnerer det første element i en liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_END = "Returnerer elementet på den angivne position på en liste. #1 er det sidste element.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_START = "Returnerer elementet på den angivne position på en liste. #1 er det første element.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_LAST = "Returnerer den sidste element i en liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_RANDOM = "Returnerer et tilfældigt element i en liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST = "Fjerner og returnerer det første element i en liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_END = "Fjerner og returnerer elementet på den angivne position på en liste. #1 er det sidste element.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_START = "Fjerner og returnerer elementet på den angivne position på en liste. #1 er det første element.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST = "Fjerner og returnerer det sidste element i en liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM = "Fjerner og returnerer et tilfældigt element i en liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST = "Fjerner det første element i en liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_END = "Fjerner elementet på den angivne position på en liste. #1 er det sidste element.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_START = "Fjerner elementet på den angivne position på en liste. #1 er det første element.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST = "Fjerner sidste element i en liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM = "Fjerner et tilfældigt element i en liste.";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_END = "til # fra slutningen";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_START = "til #";
Blockly.Msg.LISTS_GET_SUBLIST_END_LAST = "til sidste";
Blockly.Msg.LISTS_GET_SUBLIST_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_START_FIRST = "hent underliste fra første";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_END = "hent underliste fra # fra slutningen";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_START = "hent underliste fra #";
Blockly.Msg.LISTS_GET_SUBLIST_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_TOOLTIP = "Opretter en kopi af den angivne del af en liste.";
Blockly.Msg.LISTS_INDEX_OF_FIRST = "find første forekomst af elementet";
Blockly.Msg.LISTS_INDEX_OF_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
Blockly.Msg.LISTS_INDEX_OF_LAST = "find sidste forekomst af elementet";
Blockly.Msg.LISTS_INDEX_OF_TOOLTIP = "Returnerer indeks for første/sidste forekomst af elementet i listen. Returnerer 0, hvis elementet ikke kan findes.";
Blockly.Msg.LISTS_INLIST = "i listen";
Blockly.Msg.LISTS_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
Blockly.Msg.LISTS_ISEMPTY_TITLE = "%1 er tom";
Blockly.Msg.LISTS_ISEMPTY_TOOLTIP = "Returnerer sand, hvis listen er tom.";
Blockly.Msg.LISTS_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
Blockly.Msg.LISTS_LENGTH_TITLE = "længden af %1";
Blockly.Msg.LISTS_LENGTH_TOOLTIP = "Returnerer længden af en liste.";
Blockly.Msg.LISTS_REPEAT_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg.LISTS_REPEAT_TITLE = "opret liste med elementet %1 gentaget %2 gange";
Blockly.Msg.LISTS_REPEAT_TOOLTIP = "Opretter en liste bestående af den givne værdi gentaget et bestemt antal gange.";
Blockly.Msg.LISTS_SET_INDEX_HELPURL = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_INPUT_TO = "som";
Blockly.Msg.LISTS_SET_INDEX_INSERT = "indsæt ved";
Blockly.Msg.LISTS_SET_INDEX_SET = "sæt";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST = "Indsætter elementet i starten af en liste.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_END = "Indsætter elementet på den angivne position i en liste. #1 er det sidste element.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_START = "Indsætter elementet på den angivne position i en liste. #1 er det første element.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_LAST = "Føj elementet til slutningen af en liste.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM = "Indsætter elementet tilfældigt i en liste.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FIRST = "Sætter det første element i en liste.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_END = "Sætter elementet på den angivne position i en liste. #1 er det sidste element.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_START = "Sætter elementet på den angivne position i en liste. #1 er det første element.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_LAST = "Sætter det sidste element i en liste.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_RANDOM = "Sætter et tilfældigt element i en liste.";
Blockly.Msg.LISTS_SORT_HELPURL = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";  // untranslated
Blockly.Msg.LISTS_SORT_ORDER_ASCENDING = "ascending";  // untranslated
Blockly.Msg.LISTS_SORT_ORDER_DESCENDING = "descending";  // untranslated
Blockly.Msg.LISTS_SORT_TITLE = "sort %1 %2 %3";  // untranslated
Blockly.Msg.LISTS_SORT_TOOLTIP = "Sort a copy of a list.";  // untranslated
Blockly.Msg.LISTS_SORT_TYPE_IGNORECASE = "alphabetic, ignore case";  // untranslated
Blockly.Msg.LISTS_SORT_TYPE_NUMERIC = "numeric";  // untranslated
Blockly.Msg.LISTS_SORT_TYPE_TEXT = "alphabetic";  // untranslated
Blockly.Msg.LISTS_SPLIT_HELPURL = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";  // untranslated
Blockly.Msg.LISTS_SPLIT_LIST_FROM_TEXT = "lav tekst til liste";
Blockly.Msg.LISTS_SPLIT_TEXT_FROM_LIST = "lav liste til tekst";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_JOIN = "Saml en liste af tekster til én tekst, der er adskilt af et skilletegn.";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_SPLIT = "Bryd tekst op i en liste af tekster med brud ved hvert skilletegn.";
Blockly.Msg.LISTS_SPLIT_WITH_DELIMITER = "med skilletegn";
Blockly.Msg.LOGIC_BOOLEAN_FALSE = "falsk";
Blockly.Msg.LOGIC_BOOLEAN_HELPURL = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
Blockly.Msg.LOGIC_BOOLEAN_TOOLTIP = "Returnerer enten sand eller falsk.";
Blockly.Msg.LOGIC_BOOLEAN_TRUE = "sand";
Blockly.Msg.LOGIC_COMPARE_HELPURL = "https://da.wikipedia.org/wiki/Ulighed_(matematik)";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ = "Returnere sand, hvis begge inputs er lig med hinanden.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT = "Returnere sand, hvis det første input er større end det andet input.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE = "Returnere sand, hvis det første input er større end eller lig med det andet input.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT = "Returnere sand, hvis det første input er mindre end det andet input.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE = "Returnere sand, hvis det første input er mindre end eller lig med det andet input.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ = "Returnere sand, hvis begge inputs ikke er lig med hinanden.";
Blockly.Msg.LOGIC_NEGATE_HELPURL = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
Blockly.Msg.LOGIC_NEGATE_TITLE = "ikke %1";
Blockly.Msg.LOGIC_NEGATE_TOOLTIP = "Returnerer sand, hvis input er falsk. Returnerer falsk, hvis input er sandt.";
Blockly.Msg.LOGIC_NULL = "null";
Blockly.Msg.LOGIC_NULL_HELPURL = "https://en.wikipedia.org/wiki/Nullable_type";  // untranslated
Blockly.Msg.LOGIC_NULL_TOOLTIP = "Returnerer null.";
Blockly.Msg.LOGIC_OPERATION_AND = "og";
Blockly.Msg.LOGIC_OPERATION_HELPURL = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
Blockly.Msg.LOGIC_OPERATION_OR = "eller";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_AND = "Returnere sand, hvis begge inputs er sande.";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_OR = "Returnere sand, hvis mindst et af inputtene er sande.";
Blockly.Msg.LOGIC_TERNARY_CONDITION = "test";
Blockly.Msg.LOGIC_TERNARY_HELPURL = "https://en.wikipedia.org/wiki/%3F:";  // untranslated
Blockly.Msg.LOGIC_TERNARY_IF_FALSE = "hvis falsk";
Blockly.Msg.LOGIC_TERNARY_IF_TRUE = "hvis sand";
Blockly.Msg.LOGIC_TERNARY_TOOLTIP = "Kontrollér betingelsen i 'test'. Hvis betingelsen er sand, returnér \"hvis sand\" værdien; ellers returnér \"hvis falsk\" værdien.";
Blockly.Msg.MATH_ADDITION_SYMBOL = "+";  // untranslated
Blockly.Msg.MATH_ARITHMETIC_HELPURL = "https://da.wikipedia.org/wiki/Aritmetik";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_ADD = "Returnere summen af de to tal.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_DIVIDE = "Returnere kvotienten af de to tal.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MINUS = "Returnere forskellen mellem de to tal.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MULTIPLY = "Returnere produktet af de to tal.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_POWER = "Returnere det første tal opløftet til potensen af det andet tal.";
Blockly.Msg.MATH_CHANGE_HELPURL = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";
Blockly.Msg.MATH_CHANGE_TITLE = "skift %1 med %2";
Blockly.Msg.MATH_CHANGE_TOOLTIP = "Læg et tal til variablen '%1'.";
Blockly.Msg.MATH_CONSTANT_HELPURL = "https://da.wikipedia.org/wiki/Matematisk_konstant";
Blockly.Msg.MATH_CONSTANT_TOOLTIP = "Returnere en af de ofte brugte konstanter: π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(2) (1.414…), sqrt(½) (0.707…) eller ∞ (uendeligt).";
Blockly.Msg.MATH_CONSTRAIN_HELPURL = "https://en.wikipedia.org/wiki/Clamping_%28graphics%29";  // untranslated
Blockly.Msg.MATH_CONSTRAIN_TITLE = "begræns %1 til mellem %2 og %3";
Blockly.Msg.MATH_CONSTRAIN_TOOLTIP = "Begræns et tal til at være mellem de angivne grænser (inklusiv).";
Blockly.Msg.MATH_DIVISION_SYMBOL = ":";
Blockly.Msg.MATH_IS_DIVISIBLE_BY = "er deleligt med";
Blockly.Msg.MATH_IS_EVEN = "er lige";
Blockly.Msg.MATH_IS_NEGATIVE = "er negativt";
Blockly.Msg.MATH_IS_ODD = "er ulige";
Blockly.Msg.MATH_IS_POSITIVE = "er positivt";
Blockly.Msg.MATH_IS_PRIME = "er et primtal";
Blockly.Msg.MATH_IS_TOOLTIP = "Kontrollere, om et tal er lige, ulige, primtal, helt, positivt, negativt, eller om det er deleligt med bestemt tal. Returnere sandt eller falskt.";
Blockly.Msg.MATH_IS_WHOLE = "er helt";
Blockly.Msg.MATH_MODULO_HELPURL = "https://da.wikipedia.org/wiki/Modulo";
Blockly.Msg.MATH_MODULO_TITLE = "resten af %1 ÷ %2";
Blockly.Msg.MATH_MODULO_TOOLTIP = "Returner resten fra at dividere de to tal.";
Blockly.Msg.MATH_MULTIPLICATION_SYMBOL = "×";  // untranslated
Blockly.Msg.MATH_NUMBER_HELPURL = "https://da.wikipedia.org/wiki/Tal";
Blockly.Msg.MATH_NUMBER_TOOLTIP = "Et tal.";
Blockly.Msg.MATH_ONLIST_HELPURL = "";  // untranslated
Blockly.Msg.MATH_ONLIST_OPERATOR_AVERAGE = "gennemsnit af listen";
Blockly.Msg.MATH_ONLIST_OPERATOR_MAX = "største tal i listen";
Blockly.Msg.MATH_ONLIST_OPERATOR_MEDIAN = "listens median";
Blockly.Msg.MATH_ONLIST_OPERATOR_MIN = "mindste tal i listen";
Blockly.Msg.MATH_ONLIST_OPERATOR_MODE = "listens typetal";
Blockly.Msg.MATH_ONLIST_OPERATOR_RANDOM = "tilfældigt element fra listen";
Blockly.Msg.MATH_ONLIST_OPERATOR_STD_DEV = "standardafvigelsen for listen";
Blockly.Msg.MATH_ONLIST_OPERATOR_SUM = "summen af listen";
Blockly.Msg.MATH_ONLIST_TOOLTIP_AVERAGE = "Returner gennemsnittet (middelværdien) af de numeriske værdier i listen.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MAX = "Returner det største tal i listen.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MEDIAN = "Returner listens median.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MIN = "Returner det mindste tal i listen.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MODE = "Returner en liste over de mest almindelige elementer på listen.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_RANDOM = "Returner et tilfældigt element fra listen.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_STD_DEV = "Returner standardafvigelsen for listen.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_SUM = "Returner summen af alle tal i listen.";
Blockly.Msg.MATH_POWER_SYMBOL = "^";  // untranslated
Blockly.Msg.MATH_RANDOM_FLOAT_HELPURL = "https://da.wikipedia.org/wiki/Tilfældighedsgenerator";
Blockly.Msg.MATH_RANDOM_FLOAT_TITLE_RANDOM = "tilfældigt decimaltal (mellem 0 og 1)";
Blockly.Msg.MATH_RANDOM_FLOAT_TOOLTIP = "Returner et tilfældigt decimaltal mellem 0,0 (inklusiv) og 1,0 (eksklusiv).";
Blockly.Msg.MATH_RANDOM_INT_HELPURL = "https://da.wikipedia.org/wiki/Tilfældighedsgenerator";
Blockly.Msg.MATH_RANDOM_INT_TITLE = "tilfældigt heltal mellem %1 og %2";
Blockly.Msg.MATH_RANDOM_INT_TOOLTIP = "Returner et tilfældigt heltal mellem de to angivne grænser (inklusiv).";
Blockly.Msg.MATH_ROUND_HELPURL = "https://da.wikipedia.org/wiki/Afrunding";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUND = "afrund";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDDOWN = "rund ned";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDUP = "rund op";
Blockly.Msg.MATH_ROUND_TOOLTIP = "Runde et tal op eller ned.";
Blockly.Msg.MATH_SINGLE_HELPURL = "https://da.wikipedia.org/wiki/Kvadratrod";
Blockly.Msg.MATH_SINGLE_OP_ABSOLUTE = "absolut";
Blockly.Msg.MATH_SINGLE_OP_ROOT = "kvadratrod";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ABS = "Returnere den absolutte værdi af et tal.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_EXP = "Returnere e til potensen af et tal.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LN = "Returnere den naturlige logaritme af et tal.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG10 = "Returnere 10-talslogaritmen af et tal.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_NEG = "Returnere negationen af et tal.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_POW10 = "Returnere 10 til potensen af et tal.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ROOT = "Returnere kvadratroden af et tal.";
Blockly.Msg.MATH_SUBTRACTION_SYMBOL = "-";  // untranslated
Blockly.Msg.MATH_TRIG_ACOS = "acos";  // untranslated
Blockly.Msg.MATH_TRIG_ASIN = "asin";  // untranslated
Blockly.Msg.MATH_TRIG_ATAN = "atan";  // untranslated
Blockly.Msg.MATH_TRIG_COS = "cos";  // untranslated
Blockly.Msg.MATH_TRIG_HELPURL = "https://da.wikipedia.org/wiki/Trigonometrisk_funktion";
Blockly.Msg.MATH_TRIG_SIN = "sin";  // untranslated
Blockly.Msg.MATH_TRIG_TAN = "tan";  // untranslated
Blockly.Msg.MATH_TRIG_TOOLTIP_ACOS = "Returnere arcus cosinus af et tal.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ASIN = "Returnere arcus sinus af et tal.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ATAN = "Returnere arcus tangens af et tal.";
Blockly.Msg.MATH_TRIG_TOOLTIP_COS = "Returnere cosinus af en vinkel (i grader).";
Blockly.Msg.MATH_TRIG_TOOLTIP_SIN = "Returnere sinus af en vinkel (i grader).";
Blockly.Msg.MATH_TRIG_TOOLTIP_TAN = "Returnere tangens af en vinkel (i grader).";
Blockly.Msg.ME = "Mig";
Blockly.Msg.NEW_VARIABLE = "Ny variabel...";
Blockly.Msg.NEW_VARIABLE_TITLE = "Navn til den nye variabel:";
Blockly.Msg.ORDINAL_NUMBER_SUFFIX = "";  // untranslated
Blockly.Msg.PROCEDURES_ALLOW_STATEMENTS = "tillad erklæringer";
Blockly.Msg.PROCEDURES_BEFORE_PARAMS = "med:";
Blockly.Msg.PROCEDURES_CALLNORETURN_HELPURL = "https://da.wikipedia.org/wiki/Funktion_%28programmering%29";
Blockly.Msg.PROCEDURES_CALLNORETURN_TOOLTIP = "Kør den brugerdefinerede funktion '%1'.";
Blockly.Msg.PROCEDURES_CALLRETURN_HELPURL = "https://da.wikipedia.org/wiki/Funktion_%28programmering%29";
Blockly.Msg.PROCEDURES_CALLRETURN_TOOLTIP = "Kør den brugerdefinerede funktion '%1' og brug dens returværdi.";
Blockly.Msg.PROCEDURES_CALL_BEFORE_PARAMS = "med:";
Blockly.Msg.PROCEDURES_CREATE_DO = "Opret '%1'";
Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT = "Beskriv denne funktion...";
Blockly.Msg.PROCEDURES_DEFNORETURN_DO = "";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE = "gøre noget";
Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE = "for at";
Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP = "Opretter en funktion der ikke har nogen returværdi.";
Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";  // untranslated
Blockly.Msg.PROCEDURES_DEFRETURN_RETURN = "returnér";
Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP = "Opretter en funktion der har en returværdi.";
Blockly.Msg.PROCEDURES_DEF_DUPLICATE_WARNING = "Advarsel: Denne funktion har dublerede parametre.";
Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF = "Markér funktionsdefinitionen";
Blockly.Msg.PROCEDURES_IFRETURN_HELPURL = "http://c2.com/cgi/wiki?GuardClause";
Blockly.Msg.PROCEDURES_IFRETURN_TOOLTIP = "Hvis en værdi er sand, så returnér en anden værdi.";
Blockly.Msg.PROCEDURES_IFRETURN_WARNING = "Advarsel: Denne blok kan kun anvendes inden for en funktionsdefinition.";
Blockly.Msg.PROCEDURES_MUTATORARG_TITLE = "parameternavn:";
Blockly.Msg.PROCEDURES_MUTATORARG_TOOLTIP = "Tilføj en parameter til funktionen.";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TITLE = "parametre";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TOOLTIP = "Tilføje, fjerne eller ændre rækkefølgen af parametre til denne funktion.";
Blockly.Msg.REDO = "Redo";  // untranslated
Blockly.Msg.REMOVE_COMMENT = "Fjern kommentar";
Blockly.Msg.RENAME_VARIABLE = "Omdøb variabel...";
Blockly.Msg.RENAME_VARIABLE_TITLE = "Omdøb alle '%1' variabler til:";
Blockly.Msg.TEXT_APPEND_APPENDTEXT = "tilføj tekst";
Blockly.Msg.TEXT_APPEND_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_APPEND_TO = "til";
Blockly.Msg.TEXT_APPEND_TOOLTIP = "Tilføj noget tekst til variablen '%1'.";
Blockly.Msg.TEXT_CHANGECASE_HELPURL = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_LOWERCASE = "til små bogstaver";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_TITLECASE = "til Stort Begyndelsesbogstav";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_UPPERCASE = "til STORE BOGSTAVER";
Blockly.Msg.TEXT_CHANGECASE_TOOLTIP = "Returner en kopi af teksten hvor bogstaverne enten er udelukkende store eller små, eller hvor første bogstav i hvert ord er stort.";
Blockly.Msg.TEXT_CHARAT_FIRST = "hent første bogstav";
Blockly.Msg.TEXT_CHARAT_FROM_END = "hent bogstav # fra slutningen";
Blockly.Msg.TEXT_CHARAT_FROM_START = "hent bogstav #";
Blockly.Msg.TEXT_CHARAT_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
Blockly.Msg.TEXT_CHARAT_INPUT_INTEXT = "i teksten";
Blockly.Msg.TEXT_CHARAT_LAST = "hent sidste bogstav";
Blockly.Msg.TEXT_CHARAT_RANDOM = "hent tilfældigt bogstav";
Blockly.Msg.TEXT_CHARAT_TAIL = "";  // untranslated
Blockly.Msg.TEXT_CHARAT_TOOLTIP = "Returnerer bogstavet på den angivne placering.";
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TOOLTIP = "Føj et element til teksten.";
Blockly.Msg.TEXT_CREATE_JOIN_TITLE_JOIN = "sammenføj";
Blockly.Msg.TEXT_CREATE_JOIN_TOOLTIP = "Tilføj, fjern eller byt om på rækkefølgen af delene for at konfigurere denne tekstblok.";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_END = "til bogstav # fra slutningen";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_START = "til bogstav #";
Blockly.Msg.TEXT_GET_SUBSTRING_END_LAST = "til sidste bogstav";
Blockly.Msg.TEXT_GET_SUBSTRING_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_INPUT_IN_TEXT = "i teksten";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FIRST = "hent delstreng fra første bogstav";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_END = "hent delstreng fra bogstav # fra slutningen";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_START = "hent delstreng fra bogstav #";
Blockly.Msg.TEXT_GET_SUBSTRING_TAIL = "";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_TOOLTIP = "Returnerer den angivne del af teksten.";
Blockly.Msg.TEXT_INDEXOF_HELPURL = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
Blockly.Msg.TEXT_INDEXOF_INPUT_INTEXT = "i teksten";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_FIRST = "find første forekomst af teksten";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_LAST = "find sidste forekomst af teksten";
Blockly.Msg.TEXT_INDEXOF_TAIL = "";  // untranslated
Blockly.Msg.TEXT_INDEXOF_TOOLTIP = "Returnerer indeks for første/sidste forekomst af første tekst i den anden tekst.  Returnerer 0, hvis teksten ikke kan findes.";
Blockly.Msg.TEXT_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
Blockly.Msg.TEXT_ISEMPTY_TITLE = "%1 er tom";
Blockly.Msg.TEXT_ISEMPTY_TOOLTIP = "Returnerer sand, hvis den angivne tekst er tom.";
Blockly.Msg.TEXT_JOIN_HELPURL = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
Blockly.Msg.TEXT_JOIN_TITLE_CREATEWITH = "lav en tekst med";
Blockly.Msg.TEXT_JOIN_TOOLTIP = "Lav et stykke tekst ved at sætte et antal elementer sammen.";
Blockly.Msg.TEXT_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_LENGTH_TITLE = "længden af %1";
Blockly.Msg.TEXT_LENGTH_TOOLTIP = "Returnerer antallet af bogstaver (herunder mellemrum) i den angivne tekst.";
Blockly.Msg.TEXT_PRINT_HELPURL = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
Blockly.Msg.TEXT_PRINT_TITLE = "skriv %1";
Blockly.Msg.TEXT_PRINT_TOOLTIP = "Skriv den angivne tekst, tal eller anden værdi.";
Blockly.Msg.TEXT_PROMPT_HELPURL = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
Blockly.Msg.TEXT_PROMPT_TOOLTIP_NUMBER = "Spørg brugeren efter et tal";
Blockly.Msg.TEXT_PROMPT_TOOLTIP_TEXT = "Spørg brugeren efter en tekst";
Blockly.Msg.TEXT_PROMPT_TYPE_NUMBER = "spørg efter et tal med meddelelsen";
Blockly.Msg.TEXT_PROMPT_TYPE_TEXT = "spørg efter tekst med meddelelsen";
Blockly.Msg.TEXT_TEXT_HELPURL = "https://da.wikipedia.org/wiki/Tekststreng";
Blockly.Msg.TEXT_TEXT_TOOLTIP = "En bogstav, et ord eller en linje med tekst.";
Blockly.Msg.TEXT_TRIM_HELPURL = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
Blockly.Msg.TEXT_TRIM_OPERATOR_BOTH = "fjern mellemrum fra begge sider af";
Blockly.Msg.TEXT_TRIM_OPERATOR_LEFT = "fjern mellemrum fra venstre side af";
Blockly.Msg.TEXT_TRIM_OPERATOR_RIGHT = "fjern mellemrum fra højre side af";
Blockly.Msg.TEXT_TRIM_TOOLTIP = "Returner en kopi af teksten med mellemrum fjernet fra den ene eller begge sider.";
Blockly.Msg.TODAY = "I dag";
Blockly.Msg.UNDO = "Undo";  // untranslated
Blockly.Msg.VARIABLES_DEFAULT_NAME = "element";
Blockly.Msg.VARIABLES_GET_CREATE_SET = "Opret 'sæt %1'";
Blockly.Msg.VARIABLES_GET_HELPURL = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
Blockly.Msg.VARIABLES_GET_TOOLTIP = "Returnerer værdien af denne variabel.";
Blockly.Msg.VARIABLES_SET = "sæt %1 til %2";
Blockly.Msg.VARIABLES_SET_CREATE_GET = "Opret 'hent %1'";
Blockly.Msg.VARIABLES_SET_HELPURL = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
Blockly.Msg.VARIABLES_SET_TOOLTIP = "Sætter denne variabel til at være lig med input.";
Blockly.Msg.PROCEDURES_DEFRETURN_TITLE = Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE;
Blockly.Msg.CONTROLS_IF_IF_TITLE_IF = Blockly.Msg.CONTROLS_IF_MSG_IF;
Blockly.Msg.CONTROLS_WHILEUNTIL_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_MSG_THEN = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_ELSE_TITLE_ELSE = Blockly.Msg.CONTROLS_IF_MSG_ELSE;
Blockly.Msg.PROCEDURES_DEFRETURN_PROCEDURE = Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE;
Blockly.Msg.LISTS_GET_SUBLIST_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.LISTS_GET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.MATH_CHANGE_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.PROCEDURES_DEFRETURN_DO = Blockly.Msg.PROCEDURES_DEFNORETURN_DO;
Blockly.Msg.CONTROLS_IF_ELSEIF_TITLE_ELSEIF = Blockly.Msg.CONTROLS_IF_MSG_ELSEIF;
Blockly.Msg.LISTS_GET_INDEX_HELPURL = Blockly.Msg.LISTS_INDEX_OF_HELPURL;
Blockly.Msg.CONTROLS_FOREACH_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_SET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.CONTROLS_FOR_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TITLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.LISTS_INDEX_OF_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT = Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT;

// Ardublockly strings
Blockly.Msg.ARD_ANALOGREAD = "read analog pin#";  // untranslated
Blockly.Msg.ARD_ANALOGREAD_TIP = "Return value between 0 and 1024";  // untranslated
Blockly.Msg.ARD_ANALOGWRITE = "set analog pin#";  // untranslated
Blockly.Msg.ARD_ANALOGWRITE_TIP = "Write analog value between 0 and 255 to a specific PWM Port";  // untranslated
Blockly.Msg.ARD_BUILTIN_LED = "set built-in LED";  // untranslated
Blockly.Msg.ARD_BUILTIN_LED_TIP = "Light on or off for the built-in LED of the Arduino";  // untranslated
Blockly.Msg.ARD_COMPONENT_WARN1 = "A %1 configuration block with the same %2 name must be added to use this block!";  // untranslated
Blockly.Msg.ARD_DEFINE = "Define";  // untranslated
Blockly.Msg.ARD_DIGITALREAD = "read digital pin#";  // untranslated
Blockly.Msg.ARD_DIGITALREAD_TIP = "Read digital value on a pin: HIGH or LOW";  // untranslated
Blockly.Msg.ARD_DIGITALWRITE = "set digitial pin#";  // untranslated
Blockly.Msg.ARD_DIGITALWRITE_TIP = "Write digital value HIGH or LOW to a specific Port";  // untranslated
Blockly.Msg.ARD_FUN_RUN_LOOP = "Arduino loop forever:";  // untranslated
Blockly.Msg.ARD_FUN_RUN_SETUP = "Arduino run first:";  // untranslated
Blockly.Msg.ARD_FUN_RUN_TIP = "Defines the Arduino setup() and loop() functions.";  // untranslated
Blockly.Msg.ARD_HIGH = "HIGH";  // untranslated
Blockly.Msg.ARD_HIGHLOW_TIP = "Set a pin state logic High or Low.";  // untranslated
Blockly.Msg.ARD_LOW = "LOW";  // untranslated
Blockly.Msg.ARD_MAP = "Map";  // untranslated
Blockly.Msg.ARD_MAP_TIP = "Re-maps a number from [0-1024] to another.";  // untranslated
Blockly.Msg.ARD_MAP_VAL = "value to [0-";  // untranslated
Blockly.Msg.ARD_NOTONE = "Turn off tone on pin #";  // untranslated
Blockly.Msg.ARD_NOTONE_PIN = "No tone PIN#";  // untranslated
Blockly.Msg.ARD_NOTONE_PIN_TIP = "Stop generating a tone on a pin";  // untranslated
Blockly.Msg.ARD_NOTONE_TIP = "Turns the tone off on the selected pin";  // untranslated
Blockly.Msg.ARD_PIN_WARN1 = "Pin %1 is needed for %2 as pin %3. Already used as %4.";  // untranslated
Blockly.Msg.ARD_PULSETIMEOUT_TIP = "Measures the duration of a pulse on the selected pin, if it is within the time-out in microseconds.";  // untranslated
Blockly.Msg.ARD_PULSE_READ = "measure %1 pulse on pin #%2";  // untranslated
Blockly.Msg.ARD_PULSE_READ_TIMEOUT = "measure %1 pulse on pin #%2 (timeout after %3 μs)";  // untranslated
Blockly.Msg.ARD_PULSE_TIP = "Measures the duration of a pulse on the selected pin.";  // untranslated
Blockly.Msg.ARD_SERIAL_BPS = "bps";  // untranslated
Blockly.Msg.ARD_SERIAL_PRINT = "print";  // untranslated
Blockly.Msg.ARD_SERIAL_PRINT_NEWLINE = "add new line";  // untranslated
Blockly.Msg.ARD_SERIAL_PRINT_TIP = "Prints data to the console/serial port as human-readable ASCII text.";  // untranslated
Blockly.Msg.ARD_SERIAL_PRINT_WARN = "A setup block for %1 must be added to the workspace to use this block!";  // untranslated
Blockly.Msg.ARD_SERIAL_SETUP = "Setup";  // untranslated
Blockly.Msg.ARD_SERIAL_SETUP_TIP = "Selects the speed for a specific Serial peripheral";  // untranslated
Blockly.Msg.ARD_SERIAL_SPEED = ":  speed to";  // untranslated
Blockly.Msg.ARD_SERVO_READ = "read SERVO from PIN#";  // untranslated
Blockly.Msg.ARD_SERVO_READ_TIP = "Read a Servo angle";  // untranslated
Blockly.Msg.ARD_SERVO_WRITE = "set SERVO from Pin";  // untranslated
Blockly.Msg.ARD_SERVO_WRITE_DEG_180 = "Degrees (0~180)";  // untranslated
Blockly.Msg.ARD_SERVO_WRITE_TIP = "Set a Servo to an specified angle";  // untranslated
Blockly.Msg.ARD_SERVO_WRITE_TO = "to";  // untranslated
Blockly.Msg.ARD_SETTONE = "Set tone on pin #";  // untranslated
Blockly.Msg.ARD_SPI_SETUP = "Setup";  // untranslated
Blockly.Msg.ARD_SPI_SETUP_CONF = "configuration:";  // untranslated
Blockly.Msg.ARD_SPI_SETUP_DIVIDE = "clock divide";  // untranslated
Blockly.Msg.ARD_SPI_SETUP_LSBFIRST = "LSBFIRST";  // untranslated
Blockly.Msg.ARD_SPI_SETUP_MODE = "SPI mode (idle - edge)";  // untranslated
Blockly.Msg.ARD_SPI_SETUP_MODE0 = "0 (Low - Falling)";  // untranslated
Blockly.Msg.ARD_SPI_SETUP_MODE1 = "1 (Low - Rising)";  // untranslated
Blockly.Msg.ARD_SPI_SETUP_MODE2 = "2 (High - Falling)";  // untranslated
Blockly.Msg.ARD_SPI_SETUP_MODE3 = "3 (High - Rising)";  // untranslated
Blockly.Msg.ARD_SPI_SETUP_MSBFIRST = "MSBFIRST";  // untranslated
Blockly.Msg.ARD_SPI_SETUP_SHIFT = "data shift";  // untranslated
Blockly.Msg.ARD_SPI_SETUP_TIP = "Configures the SPI peripheral.";  // untranslated
Blockly.Msg.ARD_SPI_TRANSRETURN_TIP = "Send a SPI message to an specified slave device and get data back.";  // untranslated
Blockly.Msg.ARD_SPI_TRANS_NONE = "none";  // untranslated
Blockly.Msg.ARD_SPI_TRANS_SLAVE = "to slave pin";  // untranslated
Blockly.Msg.ARD_SPI_TRANS_TIP = "Send a SPI message to an specified slave device.";  // untranslated
Blockly.Msg.ARD_SPI_TRANS_VAL = "transfer";  // untranslated
Blockly.Msg.ARD_SPI_TRANS_WARN1 = "A setup block for %1 must be added to the workspace to use this block!";  // untranslated
Blockly.Msg.ARD_SPI_TRANS_WARN2 = "Old pin value %1 is no longer available.";  // untranslated
Blockly.Msg.ARD_STEPPER_COMPONENT = "stepper";  // untranslated
Blockly.Msg.ARD_STEPPER_DEFAULT_NAME = "MyStepper";  // untranslated
Blockly.Msg.ARD_STEPPER_FOUR_PINS = "4";  // untranslated
Blockly.Msg.ARD_STEPPER_MOTOR = "stepper motor:";  // untranslated
Blockly.Msg.ARD_STEPPER_NUMBER_OF_PINS = "Number of pins";  // untranslated
Blockly.Msg.ARD_STEPPER_PIN1 = "pin1#";  // untranslated
Blockly.Msg.ARD_STEPPER_PIN2 = "pin2#";  // untranslated
Blockly.Msg.ARD_STEPPER_PIN3 = "pin3#";  // untranslated
Blockly.Msg.ARD_STEPPER_PIN4 = "pin4#";  // untranslated
Blockly.Msg.ARD_STEPPER_REVOLVS = "how many steps per revolution";  // untranslated
Blockly.Msg.ARD_STEPPER_SETUP = "Setup stepper motor";  // untranslated
Blockly.Msg.ARD_STEPPER_SETUP_TIP = "Configures a stepper motor pinout and other settings.";  // untranslated
Blockly.Msg.ARD_STEPPER_SPEED = "set speed (rpm) to";  // untranslated
Blockly.Msg.ARD_STEPPER_STEP = "move stepper";  // untranslated
Blockly.Msg.ARD_STEPPER_STEPS = "steps";  // untranslated
Blockly.Msg.ARD_STEPPER_STEP_TIP = "Turns the stepper motor a specific number of steps.";  // untranslated
Blockly.Msg.ARD_STEPPER_TWO_PINS = "2";  // untranslated
Blockly.Msg.ARD_TIME_DELAY = "wait";  // untranslated
Blockly.Msg.ARD_TIME_DELAY_MICROS = "microseconds";  // untranslated
Blockly.Msg.ARD_TIME_DELAY_MICRO_TIP = "Wait specific time in microseconds";  // untranslated
Blockly.Msg.ARD_TIME_DELAY_TIP = "Wait specific time in milliseconds";  // untranslated
Blockly.Msg.ARD_TIME_INF = "wait forever (end program)";  // untranslated
Blockly.Msg.ARD_TIME_INF_TIP = "Wait indefinitely, stopping the program.";  // untranslated
Blockly.Msg.ARD_TIME_MICROS = "current elapsed Time (microseconds)";  // untranslated
Blockly.Msg.ARD_TIME_MICROS_TIP = "Returns the number of microseconds since the Arduino board began running the current program. Has to be stored in a positive long integer";  // untranslated
Blockly.Msg.ARD_TIME_MILLIS = "current elapsed Time (milliseconds)";  // untranslated
Blockly.Msg.ARD_TIME_MILLIS_TIP = "Returns the number of milliseconds since the Arduino board began running the current program. Has to be stored in a positive long integer";  // untranslated
Blockly.Msg.ARD_TIME_MS = "milliseconds";  // untranslated
Blockly.Msg.ARD_TONEFREQ = "at frequency";  // untranslated
Blockly.Msg.ARD_TONE_FREQ = "frequency";  // untranslated
Blockly.Msg.ARD_TONE_PIN = "Tone PIN#";  // untranslated
Blockly.Msg.ARD_TONE_PIN_TIP = "Generate audio tones on a pin";  // untranslated
Blockly.Msg.ARD_TONE_TIP = "Sets tone on pin to specified frequency within range 31 - 65535";  // untranslated
Blockly.Msg.ARD_TONE_WARNING = "Frequency must be in range 31 - 65535";  // untranslated
Blockly.Msg.ARD_TYPE_ARRAY = "Array";  // untranslated
Blockly.Msg.ARD_TYPE_BOOL = "Boolean";  // untranslated
Blockly.Msg.ARD_TYPE_CHAR = "Character";  // untranslated
Blockly.Msg.ARD_TYPE_CHILDBLOCKMISSING = "ChildBlockMissing";  // untranslated
Blockly.Msg.ARD_TYPE_DECIMAL = "Decimal";  // untranslated
Blockly.Msg.ARD_TYPE_LONG = "Large Number";  // untranslated
Blockly.Msg.ARD_TYPE_NULL = "Null";  // untranslated
Blockly.Msg.ARD_TYPE_NUMBER = "Number";  // untranslated
Blockly.Msg.ARD_TYPE_SHORT = "Short Number";  // untranslated
Blockly.Msg.ARD_TYPE_TEXT = "Text";  // untranslated
Blockly.Msg.ARD_TYPE_UNDEF = "Undefined";  // untranslated
Blockly.Msg.ARD_VAR_AS = "as";  // untranslated
Blockly.Msg.ARD_VAR_AS_TIP = "Sets a value to a specific type";  // untranslated
Blockly.Msg.ARD_WRITE_TO = "to";  // untranslated
Blockly.Msg.NEW_INSTANCE = "New instance...";  // untranslated
Blockly.Msg.NEW_INSTANCE_TITLE = "New instance name:";  // untranslated
Blockly.Msg.RENAME_INSTANCE = "Rename instance...";  // untranslated
Blockly.Msg.RENAME_INSTANCE_TITLE = "Rename all '%1' instances to:";  // untranslated
Blockly.Msg.cases_add = "Fall";  // untranslated
Blockly.Msg.cases_condition = "Fall (Variable) = ";  // untranslated
Blockly.Msg.cases_do = "Führe aus";  // untranslated
Blockly.Msg.cases_switch = "Variable";  // untranslated
Blockly.Msg.mcubase_SD_COMPONENT = "SD-Block";  // untranslated
Blockly.Msg.mcubase_basic_blue = "Blau";  // untranslated
Blockly.Msg.mcubase_basic_green = "Grün";  // untranslated
Blockly.Msg.mcubase_basic_red = "Rot";  // untranslated
Blockly.Msg.mcubase_basic_state = "Status";  // untranslated
Blockly.Msg.mcubase_bmx055_accelerometer = "Beschleunigungs Sensor";  // untranslated
Blockly.Msg.mcubase_bmx055_accelerometer_tip = "Lage Sensor";  // untranslated
Blockly.Msg.mcubase_bmx055_compass = "Lage Sensor";  // untranslated
Blockly.Msg.mcubase_bmx055_compass_tip = "Lage Sensor";  // untranslated
Blockly.Msg.mcubase_bmx055_gyroscope = "Lage Sensor";  // untranslated
Blockly.Msg.mcubase_bmx055_gyroscope_tip = "Lage Sensor";  // untranslated
Blockly.Msg.mcubase_bmx055_x = "X-Richtung";  // untranslated
Blockly.Msg.mcubase_bmx055_y = "Y-Richtung";  // untranslated
Blockly.Msg.mcubase_button = "Drucktaster";  // untranslated
Blockly.Msg.mcubase_button_tip = "Drucktaster";  // untranslated
Blockly.Msg.mcubase_display_beginDisplay = "Display initialisieren";  // untranslated
Blockly.Msg.mcubase_display_black = "Schwarz";  // untranslated
Blockly.Msg.mcubase_display_clearDisplay = "Display löschen";  // untranslated
Blockly.Msg.mcubase_display_clearDisplay_tip = "Löscht den Inhalt des Displays";  // untranslated
Blockly.Msg.mcubase_display_color = "Schriftfarbe";  // untranslated
Blockly.Msg.mcubase_display_plotDisplay = "Diagram zeichnen";  // untranslated
Blockly.Msg.mcubase_display_plotTimeFrame = "Zeitabschnitt";  // untranslated
Blockly.Msg.mcubase_display_plotXLabel = "X-Achsen Beschriftung";  // untranslated
Blockly.Msg.mcubase_display_plotXRange1 = "X-Wertebereich Anfang";  // untranslated
Blockly.Msg.mcubase_display_plotXRange2 = "X-Wertebereich Ende";  // untranslated
Blockly.Msg.mcubase_display_plotXTick = "X-Linienabstand";  // untranslated
Blockly.Msg.mcubase_display_plotYLabel = "Y-Achsen Beschriftung";  // untranslated
Blockly.Msg.mcubase_display_plotYRange1 = "Y-Wertebereich Anfang";  // untranslated
Blockly.Msg.mcubase_display_plotYRange2 = "Y-Wertebereich Ende";  // untranslated
Blockly.Msg.mcubase_display_plotYTick = "Y-Linienabstand";  // untranslated
Blockly.Msg.mcubase_display_printDisplay = "";  // untranslated
Blockly.Msg.mcubase_display_printDisplay_tip = "zeigt Wert auf dem Display an.";  // untranslated
Blockly.Msg.mcubase_display_printDisplay_value = "Wert";  // untranslated
Blockly.Msg.mcubase_display_printDisplay_x = "x";  // untranslated
Blockly.Msg.mcubase_display_printDisplay_y = "y";  // untranslated
Blockly.Msg.mcubase_display_setSize = "Schriftgröße";  // untranslated
Blockly.Msg.mcubase_display_setSize_tip = "Ändere die Schriftgröße auf einen Wert zwischen 1 und 10.";  // untranslated
Blockly.Msg.mcubase_display_show = "Zeige auf dem Display";  // untranslated
Blockly.Msg.mcubase_display_show_tip = "Zeigt den Nachfolgenden Inhalt auf dem Bildschirm";  // untranslated
Blockly.Msg.mcubase_display_white = "Weiß";  // untranslated
Blockly.Msg.mcubase_foto = "Fotowiderstand";  // untranslated
Blockly.Msg.mcubase_foto_tip = "Fotowiderstand";  // untranslated
Blockly.Msg.mcubase_gps_alt = "Höhe über NN in m";  // untranslated
Blockly.Msg.mcubase_gps_getValues = "GPS Modul";  // untranslated
Blockly.Msg.mcubase_gps_getValues_tip = "ruft das GPS Signal ab";  // untranslated
Blockly.Msg.mcubase_gps_lat = "Breitengrad";  // untranslated
Blockly.Msg.mcubase_gps_lng = "Längengrad";  // untranslated
Blockly.Msg.mcubase_gps_speed = "Geschwindigkeit in km/h";  // untranslated
Blockly.Msg.mcubase_hum = "Luftfeuchtigkeit in %";  // untranslated
Blockly.Msg.mcubase_hum_tip = "Luftfeuchtigkeit";  // untranslated
Blockly.Msg.mcubase_interval = "ms";  // untranslated
Blockly.Msg.mcubase_interval_timer = "Messintervall";  // untranslated
Blockly.Msg.mcubase_interval_timer_tip = "Intervall";  // untranslated
Blockly.Msg.mcubase_ir = "Infrarot Abstandssensor";  // untranslated
Blockly.Msg.mcubase_ir_tip = "Infrarot Abstandssensor";  // untranslated
Blockly.Msg.mcubase_led = "LED an digital";  // untranslated
Blockly.Msg.mcubase_led_tip = "Einfache LED. Beim Anschluss sollte immer ein Vorwiderstand verwendet werden";  // untranslated
Blockly.Msg.mcubase_light = "Beleuchtungsstärke in Lux";  // untranslated
Blockly.Msg.mcubase_lux = "Helligkeitssensor";  // untranslated
Blockly.Msg.mcubase_lux_tip = "Helligkeitssensor";  // untranslated
Blockly.Msg.mcubase_off = "Aus";  // untranslated
Blockly.Msg.mcubase_on = "Ein";  // untranslated
Blockly.Msg.mcubase_osem_connection = "Verbinde mit openSenseMap";  // untranslated
Blockly.Msg.mcubase_osem_connection_tip = "stellt eine WLAN verbindung her";  // untranslated
Blockly.Msg.mcubase_output_filename = "Daten";  // untranslated
Blockly.Msg.mcubase_output_format = "Format:";  // untranslated
Blockly.Msg.mcubase_output_linebreak = "Zeilenumbruch";  // untranslated
Blockly.Msg.mcubase_output_networkid = "NetzwerkID";  // untranslated
Blockly.Msg.mcubase_output_password = "Passwort";  // untranslated
Blockly.Msg.mcubase_output_safetosd = "Auf SD Karte speichern";  // untranslated
Blockly.Msg.mcubase_output_safetosd_tip = "Speichert Messwerte auf SD Karte";  // untranslated
Blockly.Msg.mcubase_output_serialprint = "Auf Kommandozeile ausgeben";  // untranslated
Blockly.Msg.mcubase_output_timestamp = "Zeitstempel";  // untranslated
Blockly.Msg.mcubase_piezo = "Piezo an digital";  // untranslated
Blockly.Msg.mcubase_piezo_tip = "Piezo an digital PIN. Beim Anschluss sollte immer ein Vorwiderstand verwendet werden";  // untranslated
Blockly.Msg.mcubase_poti = "Potenziometer";  // untranslated
Blockly.Msg.mcubase_poti_tip = "Potenziometer";  // untranslated
Blockly.Msg.mcubase_pressure = "Luftdruck in Pa";  // untranslated
Blockly.Msg.mcubase_pressure_dimension = "Luftdruck in Pa";  // untranslated
Blockly.Msg.mcubase_pressure_sensor = "Luftdruck/Temperatur Sensor (BMP280)";  // untranslated
Blockly.Msg.mcubase_pressure_tip = "Luftdrucksensor";  // untranslated
Blockly.Msg.mcubase_rgb_led = "RGB-LED";  // untranslated
Blockly.Msg.mcubase_rgb_led_tip = "RGB-LED benötigt einen digitalen Pin und eine Stromkreis ";  // untranslated
Blockly.Msg.mcubase_sd_create_file = "Erstelle Datei auf SD-Karte";  // untranslated
Blockly.Msg.mcubase_sd_filename = "Daten";  // untranslated
Blockly.Msg.mcubase_sd_open_file = "Öffne eine Datei auf der SD-Karte";  // untranslated
Blockly.Msg.mcubase_sd_write_file = " Schreibe Daten auf SD-Karte";  // untranslated
Blockly.Msg.mcubase_sds011 = "Feinstaubsensor";  // untranslated
Blockly.Msg.mcubase_sds011_dimension = "in µg/m³ an";  // untranslated
Blockly.Msg.mcubase_sds011_pm10 = "PM10";  // untranslated
Blockly.Msg.mcubase_sds011_pm25 = "PM2.5";  // untranslated
Blockly.Msg.mcubase_sds011_serial1 = "Serial1";  // untranslated
Blockly.Msg.mcubase_sds011_serial2 = "Serial2";  // untranslated
Blockly.Msg.mcubase_sds011_tip = "Misst die Feinstaubbelastung";  // untranslated
Blockly.Msg.mcubase_send_mobile_to_osem = "Sende Messwert und Standort";  // untranslated
Blockly.Msg.mcubase_send_mobile_to_osem_tip = "Sende Messwert und Standort an die openSenseMap";  // untranslated
Blockly.Msg.mcubase_send_to_osem = "sende Messwert an die openSenseMap";  // untranslated
Blockly.Msg.mcubase_send_to_osem_tip = "sende Messwert an";  // untranslated
Blockly.Msg.mcubase_sensor = "Sensoren";  // untranslated
Blockly.Msg.mcubase_serial_tip = "Gibt Messwerte oder Daten auf dem Seriellen Monitor der Arduino IDE aus. Praktisch um ohne Display zu arbeiten";  // untranslated
Blockly.Msg.mcubase_sound = "Geräuschsensor";  // untranslated
Blockly.Msg.mcubase_sound_tip = "Geräuschsensor";  // untranslated
Blockly.Msg.mcubase_temp = "Temperatur in °C";  // untranslated
Blockly.Msg.mcubase_temp_hum = "Temperatur/Luftfeuchtigkeitssensor (HDC1080)";  // untranslated
Blockly.Msg.mcubase_temp_hum_tip = "Sensor misst Temperatur und Luftfeuchtigkeit";  // untranslated
Blockly.Msg.mcubase_ultrasonic = "Ultraschall Abstandssensor an Port";  // untranslated
Blockly.Msg.mcubase_ultrasonic_port_A = "A";  // untranslated
Blockly.Msg.mcubase_ultrasonic_port_B = "B";  // untranslated
Blockly.Msg.mcubase_ultrasonic_port_C = "C";  // untranslated
Blockly.Msg.mcubase_ultrasonic_tip = "Ultraschall Abstandssensor";  // untranslated
Blockly.Msg.mcubase_uv = "UV-Intensität in µW/cm²";  // untranslated
Blockly.Msg.mcubase_uv_light = "Licht Sichtbar + UV Sensor";  // untranslated
Blockly.Msg.mcubase_uv_light_tip = "Sensor misst UV-Licht oder Die Helligkeit";  // untranslated
Blockly.Msg.mcubase_value = "Messwert:";  // untranslated
Blockly.Msg.mcubase_wifi_tip = "stellt eine WLAN verbindung her";  // untranslated
Blockly.Msg.senseBox_SD_COMPONENT = "SD-Block";  // untranslated
Blockly.Msg.senseBox_basic_blue = "Blau";  // untranslated
Blockly.Msg.senseBox_basic_green = "Grün";  // untranslated
Blockly.Msg.senseBox_basic_red = "Rot";  // untranslated
Blockly.Msg.senseBox_basic_state = "Status";  // untranslated
Blockly.Msg.senseBox_bmx055_accelerometer = "Beschleunigungs Sensor";  // untranslated
Blockly.Msg.senseBox_bmx055_accelerometer_tip = "Lage Sensor";  // untranslated
Blockly.Msg.senseBox_bmx055_compass = "Lage Sensor";  // untranslated
Blockly.Msg.senseBox_bmx055_compass_tip = "Lage Sensor";  // untranslated
Blockly.Msg.senseBox_bmx055_gyroscope = "Lage Sensor";  // untranslated
Blockly.Msg.senseBox_bmx055_gyroscope_tip = "Lage Sensor";  // untranslated
Blockly.Msg.senseBox_bmx055_x = "X-Richtung";  // untranslated
Blockly.Msg.senseBox_bmx055_y = "Y-Richtung";  // untranslated
Blockly.Msg.senseBox_button = "Drucktaster";  // untranslated
Blockly.Msg.senseBox_button_tip = "Drucktaster";  // untranslated
Blockly.Msg.senseBox_display_beginDisplay = "Display initialisieren";  // untranslated
Blockly.Msg.senseBox_display_black = "Schwarz";  // untranslated
Blockly.Msg.senseBox_display_clearDisplay = "Display löschen";  // untranslated
Blockly.Msg.senseBox_display_clearDisplay_tip = "Löscht den Inhalt des Displays";  // untranslated
Blockly.Msg.senseBox_display_color = "Schriftfarbe";  // untranslated
Blockly.Msg.senseBox_display_plotDisplay = "Diagram zeichnen";  // untranslated
Blockly.Msg.senseBox_display_plotTimeFrame = "Zeitabschnitt";  // untranslated
Blockly.Msg.senseBox_display_plotXLabel = "X-Achsen Beschriftung";  // untranslated
Blockly.Msg.senseBox_display_plotXRange1 = "X-Wertebereich Anfang";  // untranslated
Blockly.Msg.senseBox_display_plotXRange2 = "X-Wertebereich Ende";  // untranslated
Blockly.Msg.senseBox_display_plotXTick = "X-Linienabstand";  // untranslated
Blockly.Msg.senseBox_display_plotYLabel = "Y-Achsen Beschriftung";  // untranslated
Blockly.Msg.senseBox_display_plotYRange1 = "Y-Wertebereich Anfang";  // untranslated
Blockly.Msg.senseBox_display_plotYRange2 = "Y-Wertebereich Ende";  // untranslated
Blockly.Msg.senseBox_display_plotYTick = "Y-Linienabstand";  // untranslated
Blockly.Msg.senseBox_display_printDisplay = "";  // untranslated
Blockly.Msg.senseBox_display_printDisplay_tip = "zeigt Wert auf dem Display an.";  // untranslated
Blockly.Msg.senseBox_display_printDisplay_value = "Wert";  // untranslated
Blockly.Msg.senseBox_display_printDisplay_x = "x";  // untranslated
Blockly.Msg.senseBox_display_printDisplay_y = "y";  // untranslated
Blockly.Msg.senseBox_display_setSize = "Schriftgröße";  // untranslated
Blockly.Msg.senseBox_display_setSize_tip = "Ändere die Schriftgröße auf einen Wert zwischen 1 und 10.";  // untranslated
Blockly.Msg.senseBox_display_white = "Weiß";  // untranslated
Blockly.Msg.senseBox_foto = "Fotowiderstand";  // untranslated
Blockly.Msg.senseBox_foto_tip = "Fotowiderstand";  // untranslated
Blockly.Msg.senseBox_gps_alt = "Höhe über NN in m";  // untranslated
Blockly.Msg.senseBox_gps_getValues = "GPS Modul";  // untranslated
Blockly.Msg.senseBox_gps_getValues_tip = "ruft das GPS Signal ab";  // untranslated
Blockly.Msg.senseBox_gps_lat = "Breitengrad";  // untranslated
Blockly.Msg.senseBox_gps_lng = "Längengrad";  // untranslated
Blockly.Msg.senseBox_gps_speed = "Geschwindigkeit in km/h";  // untranslated
Blockly.Msg.senseBox_hum = "Luftfeuchtigkeit in %";  // untranslated
Blockly.Msg.senseBox_hum_tip = "Luftfeuchtigkeit";  // untranslated
Blockly.Msg.senseBox_interval = "ms";  // untranslated
Blockly.Msg.senseBox_interval_timer = "Messintervall";  // untranslated
Blockly.Msg.senseBox_interval_timer_tip = "Intervall";  // untranslated
Blockly.Msg.senseBox_ir = "Infrarot Abstandssensor";  // untranslated
Blockly.Msg.senseBox_ir_tip = "Infrarot Abstandssensor";  // untranslated
Blockly.Msg.senseBox_led = "LED an digital";  // untranslated
Blockly.Msg.senseBox_led_tip = "Einfache LED. Beim Anschluss sollte immer ein Vorwiderstand verwendet werden";  // untranslated
Blockly.Msg.senseBox_light = "Beleuchtungsstärke in Lux";  // untranslated
Blockly.Msg.senseBox_lux = "Helligkeitssensor";  // untranslated
Blockly.Msg.senseBox_lux_tip = "Helligkeitssensor";  // untranslated
Blockly.Msg.senseBox_off = "Aus";  // untranslated
Blockly.Msg.senseBox_on = "Ein";  // untranslated
Blockly.Msg.senseBox_osem_connection = "Verbinde mit openSenseMap";  // untranslated
Blockly.Msg.senseBox_osem_connection_tip = "stellt eine WLAN verbindung her";  // untranslated
Blockly.Msg.senseBox_output_filename = "Daten";  // untranslated
Blockly.Msg.senseBox_output_format = "Format:";  // untranslated
Blockly.Msg.senseBox_output_linebreak = "Zeilenumbruch";  // untranslated
Blockly.Msg.senseBox_output_networkid = "NetzwerkID";  // untranslated
Blockly.Msg.senseBox_output_password = "Passwort";  // untranslated
Blockly.Msg.senseBox_output_safetosd = "Auf SD Karte speichern";  // untranslated
Blockly.Msg.senseBox_output_safetosd_tip = "Speichert Messwerte auf SD Karte";  // untranslated
Blockly.Msg.senseBox_output_serialprint = "Auf Kommandozeile ausgeben";  // untranslated
Blockly.Msg.senseBox_output_timestamp = "Zeitstempel";  // untranslated
Blockly.Msg.senseBox_piezo = "Piezo an digital";  // untranslated
Blockly.Msg.senseBox_piezo_tip = "Piezo an digital PIN. Beim Anschluss sollte immer ein Vorwiderstand verwendet werden";  // untranslated
Blockly.Msg.senseBox_poti = "Potenziometer";  // untranslated
Blockly.Msg.senseBox_poti_tip = "Potenziometer";  // untranslated
Blockly.Msg.senseBox_pressure = "Luftdruck in Pa";  // untranslated
Blockly.Msg.senseBox_pressure_dimension = "Luftdruck in Pa";  // untranslated
Blockly.Msg.senseBox_pressure_sensor = "Luftdruck/Temperatur Sensor (BMP280)";  // untranslated
Blockly.Msg.senseBox_pressure_tip = "Luftdrucksensor";  // untranslated
Blockly.Msg.senseBox_rgb_led = "RGB-LED";  // untranslated
Blockly.Msg.senseBox_rgb_led_tip = "RGB-LED benötigt einen digitalen Pin und eine Stromkreis ";  // untranslated
Blockly.Msg.senseBox_sd_create_file = "Erstelle Datei auf SD-Karte";  // untranslated
Blockly.Msg.senseBox_sd_open_file = "Öffne eine Datei auf der SD-Karte";  // untranslated
Blockly.Msg.senseBox_sd_write_file = " Schreibe Daten auf SD-Karte";  // untranslated
Blockly.Msg.senseBox_sds011 = "Feinstaubsensor";  // untranslated
Blockly.Msg.senseBox_sds011_dimension = "in µg/m³ an";  // untranslated
Blockly.Msg.senseBox_sds011_pm10 = "PM10";  // untranslated
Blockly.Msg.senseBox_sds011_pm25 = "PM2.5";  // untranslated
Blockly.Msg.senseBox_sds011_serial1 = "Serial1";  // untranslated
Blockly.Msg.senseBox_sds011_serial2 = "Serial2";  // untranslated
Blockly.Msg.senseBox_sds011_tip = "Misst die Feinstaubbelastung";  // untranslated
Blockly.Msg.senseBox_send_mobile_to_osem = "Sende Messwert und Standort";  // untranslated
Blockly.Msg.senseBox_send_mobile_to_osem_tip = "Sende Messwert und Standort an die openSenseMap";  // untranslated
Blockly.Msg.senseBox_send_to_osem = "sende Messwert an die openSenseMap";  // untranslated
Blockly.Msg.senseBox_send_to_osem_tip = "sende Messwert an";  // untranslated
Blockly.Msg.senseBox_sensor = "Sensoren";  // untranslated
Blockly.Msg.senseBox_serial_tip = "Gibt Messwerte oder Daten auf dem Seriellen Monitor der Arduino IDE aus. Praktisch um ohne Display zu arbeiten";  // untranslated
Blockly.Msg.senseBox_sound = "Geräuschsensor";  // untranslated
Blockly.Msg.senseBox_sound_tip = "Geräuschsensor";  // untranslated
Blockly.Msg.senseBox_temp = "Temperatur in °C";  // untranslated
Blockly.Msg.senseBox_temp_hum = "Temperatur/Luftfeuchtigkeitssensor (HDC1080)";  // untranslated
Blockly.Msg.senseBox_temp_hum_tip = "Sensor misst Temperatur und Luftfeuchtigkeit";  // untranslated
Blockly.Msg.senseBox_ultrasonic = "Ultraschall Abstandssensor an Port";  // untranslated
Blockly.Msg.senseBox_ultrasonic_port_A = "A";  // untranslated
Blockly.Msg.senseBox_ultrasonic_port_B = "B";  // untranslated
Blockly.Msg.senseBox_ultrasonic_port_C = "C";  // untranslated
Blockly.Msg.senseBox_ultrasonic_tip = "Ultraschall Abstandssensor";  // untranslated
Blockly.Msg.senseBox_uv = "UV-Intensität in µW/cm²";  // untranslated
Blockly.Msg.senseBox_uv_light = "Licht Sichtbar + UV Sensor";  // untranslated
Blockly.Msg.senseBox_uv_light_tip = "Sensor misst UV-Licht oder Die Helligkeit";  // untranslated
Blockly.Msg.senseBox_value = "Messwert:";  // untranslated
Blockly.Msg.senseBox_wifi_tip = "stellt eine WLAN verbindung her";  // untranslated
Blockly.Msg.sensebox_display_show = "Zeige auf dem Display";  // untranslated
Blockly.Msg.sensebox_display_show_tip = "Zeigt den Nachfolgenden Inhalt auf dem Bildschirm";  // untranslated
Blockly.Msg.sensebox_sd_filename = "Daten";  // untranslated
